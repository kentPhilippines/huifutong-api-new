2020-03-21 00:02:40.078 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@163c601f: startup date [Sat Mar 21 00:02:40 CST 2020]; root of context hierarchy
2020-03-21 00:02:40.224 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:02:40.254 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ba4ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:41.041 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:02:41.056 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b5bb947: startup date [Sat Mar 21 00:02:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@163c601f
2020-03-21 00:02:42.003 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:02:42.190 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:02:42.366 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:02:42.393 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:02:42.512 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eba04cfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.550 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$c99a5ea1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.557 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1357602960] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.558 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:02:42.561 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.610 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ba4ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:43.043 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:02:43.053 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:02:43.060 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:02:43.060 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:02:43.063 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:02:43.152 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:02:43.152 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2096 ms
2020-03-21 00:02:43.380 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:02:43.380 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:02:43.385 [localhost-startStop-1] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'webMvcMetricsFilter' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webMvcMetricsFilter' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'simpleMeterRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: com/google/common/collect/Lists
2020-03-21 00:02:43.401 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 00:02:43.407 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 00:02:43.410 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-03-21 00:02:43.420 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 00:02:43.428 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:155)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:413)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	... 12 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcMetricsFilter' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webMvcMetricsFilter' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'simpleMeterRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: com/google/common/collect/Lists
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:226)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:214)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:91)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:80)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:250)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:237)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5245)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1421)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1411)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'simpleMeterRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: com/google/common/collect/Lists
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:589)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 24 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/google/common/collect/Lists
	at com.netflix.config.PropertyWrapper.<init>(PropertyWrapper.java:41)
	at com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius$ArchaiusDynamicProperty.<init>(HystrixDynamicPropertiesArchaius.java:62)
	at com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius$StringDynamicProperty.<init>(HystrixDynamicPropertiesArchaius.java:73)
	at com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius.getString(HystrixDynamicPropertiesArchaius.java:34)
	at com.netflix.hystrix.strategy.HystrixPlugins.getPluginImplementationViaProperties(HystrixPlugins.java:344)
	at com.netflix.hystrix.strategy.HystrixPlugins.getPluginImplementation(HystrixPlugins.java:334)
	at com.netflix.hystrix.strategy.HystrixPlugins.getEventNotifier(HystrixPlugins.java:129)
	at io.micrometer.core.instrument.binder.hystrix.HystrixMetricsBinder.bindTo(HystrixMetricsBinder.java:35)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer.lambda$addBinders$1(MeterRegistryConfigurer.java:83)
	at java.util.LinkedHashMap$LinkedValues.forEach(LinkedHashMap.java:608)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer.addBinders(MeterRegistryConfigurer.java:83)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer.configure(MeterRegistryConfigurer.java:65)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor.postProcessAfterInitialization(MeterRegistryPostProcessor.java:51)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1712)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	... 34 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.google.common.collect.Lists
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 50 common frames omitted
2020-03-21 00:21:30.500 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2de5c: startup date [Sat Mar 21 00:21:30 CST 2020]; root of context hierarchy
2020-03-21 00:21:30.645 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:30.677 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f02dd47d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:31.551 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:21:31.567 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec: startup date [Sat Mar 21 00:21:31 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2de5c
2020-03-21 00:21:32.523 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:21:32.707 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:21:32.887 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:21:32.911 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:33.015 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d413d180] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.048 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b20de327] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.054 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1772626522] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.055 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:21:33.058 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.090 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f02dd47d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.500 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:21:33.510 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:21:33.517 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:21:33.517 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:21:33.521 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:21:33.608 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:21:33.608 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2041 ms
2020-03-21 00:21:33.839 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:21:33.839 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:21:33.847 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@64193b7c
2020-03-21 00:21:34.298 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:21:36.189 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:21:36.275 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:21:36.789 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:21:36 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec
2020-03-21 00:21:36.808 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:37.040 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:21:37.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:21:37.042 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:21:37.043 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:21:37.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:21:37.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:21:37.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:21:37.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:21:37.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:21:37.064 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:21:37.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.073 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:21:37.109 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:21:37.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec: startup date [Sat Mar 21 00:21:31 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2de5c
2020-03-21 00:21:37.182 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:21:37.308 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:21:37.310 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:21:38.383 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:21:38.383 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:21:39.287 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:21:39.409 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:21:39.419 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:21:39.420 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:21:39.421 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:21:39.472 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:21:39.473 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:21:39.479 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:21:39.481 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:21:39.482 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:21:39.484 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:21:39.496 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:21:39.509 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4707feec,type=ConfigurationPropertiesRebinder]
2020-03-21 00:21:39.515 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:21:39.522 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:21:39.533 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:21:39.581 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:21:40.240 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:21:40.240 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:21:40.597 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:21:40.597 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:21:40.735 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:21:41.909 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:21:41.910 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:21:41.912 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:21:41.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721301914 with initial instances count: 0
2020-03-21 00:21:41.923 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:21:41.924 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721301924, current=UP, previous=STARTING]
2020-03-21 00:21:41.925 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:21:41.928 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:21:41.988 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:21:41.994 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:21:41.997 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:21:42.013 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:21:42.014 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:21:42.016 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.538 seconds (JVM running for 20.494)
2020-03-21 00:21:42.107 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:21:43.194 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:21:43.194 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:21:43.195 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:21:43.213 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-21 00:21:43.757 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:21:55.771 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 00:21:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec
2020-03-21 00:21:55.808 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:55.969 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 00:21:55.986 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 00:21:55.990 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 00:21:55.995 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 00:21:56.001 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4236c5ce
2020-03-21 00:21:56.059 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:21:56.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:21:56.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:21:56.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:21:56.065 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@71a9220a
2020-03-21 00:21:56.071 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-21 00:22:11.913 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:22:11.945 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:23:59.394 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab7fdd3: startup date [Sat Mar 21 00:23:59 CST 2020]; root of context hierarchy
2020-03-21 00:23:59.537 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:23:59.566 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bfa2bd3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:00.341 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:24:00.357 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133: startup date [Sat Mar 21 00:24:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab7fdd3
2020-03-21 00:24:01.289 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:24:01.484 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:24:01.659 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:24:01.684 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:24:01.790 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a388ba3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.824 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8182cbe5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.830 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1553914521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.831 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:24:01.835 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.872 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bfa2bd3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:02.337 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:24:02.348 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:24:02.357 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:24:02.357 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:24:02.360 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:24:02.457 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:24:02.457 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2100 ms
2020-03-21 00:24:02.688 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:24:02.688 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:24:02.695 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@78a927b2
2020-03-21 00:24:03.078 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:24:04.993 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:24:05.069 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:24:05.463 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:24:05 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133
2020-03-21 00:24:05.478 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:24:05.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:24:05.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:24:05.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:24:05.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:24:05.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:24:05.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:24:05.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:24:05.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:24:05.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:24:05.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:24:05.740 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:24:05.776 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133: startup date [Sat Mar 21 00:24:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab7fdd3
2020-03-21 00:24:05.813 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:24:05.907 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:24:05.908 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:24:07.021 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:24:07.021 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:24:07.891 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:24:08.033 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:24:08.044 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:24:08.045 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:24:08.046 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:24:08.098 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:24:08.099 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:24:08.106 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:24:08.108 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:24:08.109 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:24:08.111 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:24:08.118 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:24:08.127 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=709bf133,type=ConfigurationPropertiesRebinder]
2020-03-21 00:24:08.134 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:24:08.141 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:24:08.146 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:24:08.174 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:24:08.728 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:24:08.728 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:24:09.039 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:24:09.040 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:24:09.165 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:24:13.654 [restartedMain] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a$$FastClassBySpringCGLIB$$6ba36a88.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 72 common frames omitted
2020-03-21 00:24:13.655 [restartedMain] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:13.656 [restartedMain] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a$$FastClassBySpringCGLIB$$6ba36a88.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-03-21 00:24:13.656 [restartedMain] WARN  com.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2020-03-21 00:24:13.657 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:24:13.659 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:24:13.662 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721453661 with initial instances count: 0
2020-03-21 00:24:13.668 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:24:13.669 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721453669, current=UP, previous=STARTING]
2020-03-21 00:24:13.670 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:24:13.673 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:24:13.728 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:24:13.734 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:24:13.737 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:24:13.752 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:24:13.753 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:24:13.755 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 15.309 seconds (JVM running for 22.794)
2020-03-21 00:24:14.988 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:24:14.988 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:24:14.989 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:24:15.004 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 00:24:15.499 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:24:17.704 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-03-21 00:24:17.704 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:17.705 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:17.705 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:33.268 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 00:24:33 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133
2020-03-21 00:24:33.305 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:24:33.469 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 00:24:33.499 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 00:24:33.503 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 00:24:33.507 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 00:24:33.510 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4df1b6af
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:33.573 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@449927d5
2020-03-21 00:24:33.593 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:35.002 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:35.003 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:35.003 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:35.003 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:35.004 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3145093b
2020-03-21 00:24:35.009 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:37.442 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7c0ef69a
2020-03-21 00:24:37.443 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:24:44.002 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 00:24:44.106 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:44.637 [http-nio-9010-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSessionId(SessionRepositoryFilter.java:354)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:237)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:150)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy151.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 38 common frames omitted
2020-03-21 00:24:44.646 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:44.646 [http-nio-9010-exec-4] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$SpelView - Cannot render error page for request [/] and exception [Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-21 00:24:44.903 [http-nio-9010-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy151.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:44.910 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:44.985 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@7ef76bbb
2020-03-21 00:24:44.985 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 00:24:44.989 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:45.001 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7009ba88[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 00:24:45.025 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:45.034 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@526f3ef1[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 00:24:45.053 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:45.135 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:47.669 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-03-21 00:24:47.669 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:47.669 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:47.694 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2020-03-21 00:24:47.695 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:47.695 [DiscoveryClient-HeartbeatExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:47.707 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:24:47.933 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:48.258 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@64165325[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:48.262 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7c48267a
2020-03-21 00:24:48.268 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 00:24:48.269 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 00:24:48.275 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 00:24:48.281 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 00:24:48.282 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 00:24:48.283 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 00:24:48.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 00:24:48.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 00:24:48.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 00:24:48.297 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:48.297 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:48.308 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:49.709 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:50.039 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:50.165 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:51.716 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2020-03-21 00:24:51.717 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:51.717 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:51.717 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:25:21.677 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-03-21 00:25:21.677 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:25:21.677 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:21.714 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2020-03-21 00:25:21.714 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:25:21.714 [DiscoveryClient-HeartbeatExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:21.717 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:25:25.745 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2020-03-21 00:25:25.745 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:25:25.745 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:25.746 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:25:51.816 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - Re-registering apps/OTC-ALIPAY-SERVER
2020-03-21 00:25:51.816 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:25:51.822 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:25:51.896 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:26:16.423 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@601ccdd6: startup date [Sat Mar 21 00:26:16 CST 2020]; root of context hierarchy
2020-03-21 00:26:16.585 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:26:16.613 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea514357] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:17.381 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:26:17.397 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@585c5666: startup date [Sat Mar 21 00:26:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@601ccdd6
2020-03-21 00:26:18.399 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:26:18.591 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:26:18.765 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:26:18.789 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:26:18.901 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce37405a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.937 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ac315201] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.943 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1750430284] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.944 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:26:18.947 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.996 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea514357] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:19.392 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:26:19.402 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:26:19.411 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:26:19.411 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:26:19.414 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:26:19.498 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:26:19.498 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2101 ms
2020-03-21 00:26:19.723 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:26:19.723 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:26:19.730 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@75c08c78
2020-03-21 00:26:20.102 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:26:22.015 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:26:22.098 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:26:22.520 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:26:22 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@585c5666
2020-03-21 00:26:22.536 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:26:22.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:26:22.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:26:22.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:26:22.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:26:22.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.744 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:26:22.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:26:22.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.766 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:26:22.806 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:26:22.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@585c5666: startup date [Sat Mar 21 00:26:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@601ccdd6
2020-03-21 00:26:22.881 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:26:22.976 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:26:22.977 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:26:23.984 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:26:23.985 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:26:24.810 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:26:24.933 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:26:24.943 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:26:24.944 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:26:24.945 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:26:24.993 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:26:24.994 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:26:25.001 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:26:25.002 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:26:25.003 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:26:25.006 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:26:25.012 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:26:25.022 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=585c5666,type=ConfigurationPropertiesRebinder]
2020-03-21 00:26:25.027 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:26:25.034 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:26:25.040 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:26:25.070 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:26:25.646 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:26:25.646 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:26:25.960 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:26:25.960 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:26:26.081 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:26:26.626 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:26:26.628 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:26:26.630 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:26:26.633 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721586632 with initial instances count: 2
2020-03-21 00:26:26.638 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:26:26.639 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721586639, current=UP, previous=STARTING]
2020-03-21 00:26:26.641 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:26:26.644 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:26:26.673 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:26:26.696 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:26:26.701 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:26:26.704 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:26:26.721 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:26:26.722 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:26:26.724 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.333 seconds (JVM running for 18.584)
2020-03-21 00:26:28.042 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:26:28.042 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:26:28.042 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:26:28.058 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 00:26:28.600 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:26:34.738 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:26:35.382 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:26:35.604 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:28:17.941 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1253e3c9: startup date [Sat Mar 21 00:28:17 CST 2020]; root of context hierarchy
2020-03-21 00:28:18.085 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:28:18.114 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$84dde5db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:18.961 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:28:18.982 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2edf55fc: startup date [Sat Mar 21 00:28:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1253e3c9
2020-03-21 00:28:19.975 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:28:20.181 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:28:20.361 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:28:20.385 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:28:20.489 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68c3e2de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.524 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$46bdf485] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.530 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/20577343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.530 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:28:20.533 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.576 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$84dde5db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.989 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:28:20.999 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:28:21.006 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:28:21.006 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:28:21.010 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:28:21.097 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:28:21.097 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2115 ms
2020-03-21 00:28:21.326 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:28:21.326 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:28:21.333 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@cd4d8e8
2020-03-21 00:28:21.704 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:28:23.672 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:28:24.060 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:28:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2edf55fc
2020-03-21 00:28:24.076 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:28:24.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:28:24.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:28:24.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:28:24.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:28:24.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.280 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:28:24.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:28:24.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:28:24.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:28:24.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:28:24.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.308 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:28:24.348 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:28:24.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2edf55fc: startup date [Sat Mar 21 00:28:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1253e3c9
2020-03-21 00:28:24.425 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:28:24.550 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:28:24.551 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:28:25.665 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:28:25.666 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:28:26.481 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:28:26.604 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:28:26.614 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:28:26.615 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:28:26.616 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:28:26.665 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:28:26.666 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:28:26.673 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:28:26.675 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:28:26.676 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:28:26.679 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:28:26.688 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:28:26.698 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2edf55fc,type=ConfigurationPropertiesRebinder]
2020-03-21 00:28:26.706 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:28:26.714 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:28:26.721 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:28:26.751 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:28:27.324 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:28:27.324 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:28:27.635 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:28:27.635 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:28:27.762 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:28:28.316 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:28:28.319 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:28:28.321 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:28:28.323 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721708323 with initial instances count: 2
2020-03-21 00:28:28.329 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:28:28.330 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721708330, current=UP, previous=STARTING]
2020-03-21 00:28:28.331 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:28:28.334 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:28:28.360 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:28:28.387 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:28:28.392 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:28:28.395 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:28:28.412 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:28:28.413 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:28:28.415 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.527 seconds (JVM running for 18.845)
2020-03-21 00:28:29.145 [RMI TCP Connection(6)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:28:29.145 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:28:29.145 [RMI TCP Connection(6)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:28:29.160 [RMI TCP Connection(6)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 00:28:29.713 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:29:39.813 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@354a16c9: startup date [Sat Mar 21 00:29:39 CST 2020]; root of context hierarchy
2020-03-21 00:29:39.954 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:29:39.985 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5afa682a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:40.755 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:29:40.772 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512: startup date [Sat Mar 21 00:29:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@354a16c9
2020-03-21 00:29:41.707 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:29:41.894 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:29:42.072 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:29:42.096 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:29:42.200 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3ee0652d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.234 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1cda76d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.241 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/782765344] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.242 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:29:42.244 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.276 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5afa682a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.679 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:29:42.689 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:29:42.696 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:29:42.697 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:29:42.700 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:29:42.788 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:29:42.788 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2016 ms
2020-03-21 00:29:43.020 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:29:43.021 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:29:43.029 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1592ca4c
2020-03-21 00:29:43.448 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:29:45.435 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:29:45.511 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:29:45.905 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:29:45 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512
2020-03-21 00:29:45.919 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:29:46.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:29:46.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:29:46.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:29:46.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:29:46.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.139 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.139 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.139 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:29:46.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:29:46.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:29:46.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:29:46.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:29:46.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:29:46.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:29:46.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:29:46.199 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:29:46.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512: startup date [Sat Mar 21 00:29:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@354a16c9
2020-03-21 00:29:46.275 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:29:46.369 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:29:46.371 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:29:47.385 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:29:47.385 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:29:48.250 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:29:48.374 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:29:48.385 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:29:48.386 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:29:48.386 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:29:48.443 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:29:48.444 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:29:48.451 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:29:48.453 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:29:48.454 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:29:48.458 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:29:48.464 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:29:48.473 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7cb4d512,type=ConfigurationPropertiesRebinder]
2020-03-21 00:29:48.479 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:29:48.485 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:29:48.492 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:29:48.519 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:29:49.171 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:29:49.171 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:29:49.533 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:29:49.533 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:29:49.675 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:29:50.222 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:29:50.225 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:29:50.227 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:29:50.230 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721790229 with initial instances count: 2
2020-03-21 00:29:50.235 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:29:50.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721790236, current=UP, previous=STARTING]
2020-03-21 00:29:50.237 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:29:50.240 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:29:50.266 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:29:50.295 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:29:50.300 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:29:50.303 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:29:50.316 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:29:50.317 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:29:50.319 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.46 seconds (JVM running for 18.935)
2020-03-21 00:29:51.465 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:29:51.465 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:29:51.465 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:29:51.480 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 00:29:52.056 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:34:50.106 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:39:50.108 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:44:50.110 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 02:00:26.590 [redisMessageListenerContainer-5] WARN  o.s.s.data.redis.RedisOperationsSessionRepository - Unable to publish SessionDestroyedEvent for session 7d862ef2-2e9f-4866-8091-789bcf9b6314
2020-03-21 02:33:23.905 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 02:33:25.997 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h44m3s793ms483µs600ns).
2020-03-21 02:38:23.907 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 02:43:23.907 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 02:48:23.908 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 02:53:23.910 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 04:15:43.047 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h21m16s991ms380µs100ns).
2020-03-21 04:19:10.902 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 04:24:10.904 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 04:29:10.906 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 04:34:10.908 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 04:39:10.910 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 04:44:10.910 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 09:33:45.515 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4h48m32s407ms463µs700ns).
2020-03-21 09:37:15.499 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 09:42:15.500 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 09:42:16.872 [http-nio-9010-exec-3] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 09:42:16.982 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:47:15.504 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 09:47:51.933 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 09:47:51 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512
2020-03-21 09:47:51.982 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 09:47:52.183 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 09:47:52.200 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 09:47:52.208 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 09:47:52.215 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 09:47:52.219 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2a4b663a
2020-03-21 09:47:52.295 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 09:47:52.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 09:47:52.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 09:47:52.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 09:47:52.299 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@69254908
2020-03-21 09:47:52.310 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:52:15.505 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 09:55:36.692 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 09:55:36.774 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:37.955 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 09:55:37.955 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 09:55:37.955 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 09:55:37.955 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 09:55:37.957 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@5a6d8615
2020-03-21 09:55:37.958 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 09:55:37.965 [http-nio-9010-exec-10] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 09:55:37.967 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7bae05d2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:55:37.982 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:37.986 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4600ee02[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:55:37.994 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:38.085 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:55.225 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:55.654 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@58ae46e1[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:55:55.667 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 09:55:55.667 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 09:55:55.667 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 09:55:55.667 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 09:55:55.669 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@3807b0b
2020-03-21 09:55:55.669 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 09:55:55.670 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 09:55:55.688 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:55.698 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@761839b9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:55:55.723 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:55:55.753 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:01.064 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:01.647 [http-nio-9010-exec-3] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-21 09:56:01.700 [http-nio-9010-exec-3] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-21 09:56:01.706 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:96)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$2b5f419a.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy189.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 68 common frames omitted
2020-03-21 09:56:03.703 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:96)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$2b5f419a.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy189.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 68 common frames omitted
2020-03-21 09:56:10.452 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:96)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$2b5f419a.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy189.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 68 common frames omitted
2020-03-21 09:56:18.406 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:18.860 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 09:56:18.860 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 09:56:18.860 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 09:56:18.860 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 09:56:18.861 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@71bd9698[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:56:18.862 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7b2d16d2
2020-03-21 09:56:18.869 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 09:56:18.869 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 09:56:18.873 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 09:56:18.881 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 09:56:18.881 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 09:56:18.883 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 09:56:18.889 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 09:56:18.890 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 09:56:18.890 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:18.890 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:18.891 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 09:56:18.905 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:45.788 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:46.203 [http-nio-9010-exec-10] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/order/findMyReceiveOrderRecordByPage] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 09:56:46.203 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@615d13fb[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:56:46.218 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:46.227 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:46.233 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:56:51.484 [http-nio-9010-exec-6] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/order/findMyReceiveOrderRecordByPage] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 09:56:51.491 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:57:13.214 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:57:13.704 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(OrderContorller.java:158)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$2b5f419a.findMyAccountChangeLogByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 09:57:15.507 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 09:57:25.108 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:57:25.685 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1c9ec721[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:57:25.686 [http-nio-9010-exec-1] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/order/findMyReceiveOrderRecordByPage] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 09:57:25.698 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:57:25.706 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:57:25.714 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:10.423 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:10.820 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@16414894[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:58:10.822 [http-nio-9010-exec-6] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/order/findMyReceiveOrderRecordByPage] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 09:58:10.840 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:10.840 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:10.853 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:19.826 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:20.219 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@28f5f155[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 09:58:20.220 [http-nio-9010-exec-5] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/order/findMyReceiveOrderRecordByPage] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 09:58:20.234 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:20.237 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 09:58:20.248 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:02:15.509 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:07:15.511 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:12:15.513 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:12:31.933 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@471bfc62: startup date [Sat Mar 21 10:12:31 CST 2020]; root of context hierarchy
2020-03-21 10:12:32.093 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:12:32.124 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c409f807] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:12:32.924 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 10:12:32.944 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9411bd4: startup date [Sat Mar 21 10:12:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@471bfc62
2020-03-21 10:12:34.142 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 10:12:34.368 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 10:12:34.551 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 10:12:34.576 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:12:34.687 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a7eff50a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:12:34.733 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$85ea06b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:12:34.739 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1203080209] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:12:34.741 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 10:12:34.745 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:12:34.782 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c409f807] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:12:35.269 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 10:12:35.281 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 10:12:35.290 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 10:12:35.290 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 10:12:35.294 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 10:12:35.391 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 10:12:35.391 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2447 ms
2020-03-21 10:12:35.654 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:12:35.654 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:12:35.664 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7994da3f
2020-03-21 10:12:36.141 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 10:12:38.110 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 10:12:38.110 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 10:12:38.110 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 10:12:38.111 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 10:12:38.111 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 10:12:38.196 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 10:12:38.711 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 10:12:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9411bd4
2020-03-21 10:12:38.728 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:12:38.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:12:38.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 10:12:38.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:12:38.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 10:12:38.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 10:12:38.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 10:12:38.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 10:12:38.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 10:12:38.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 10:12:38.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 10:12:38.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 10:12:38.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 10:12:38.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 10:12:38.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 10:12:38.961 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.961 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 10:12:38.961 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.961 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 10:12:38.961 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:12:38.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:12:38.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:12:38.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:12:38.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:12:38.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.968 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:12:38.968 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 10:12:38.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:12:39.007 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 10:12:39.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9411bd4: startup date [Sat Mar 21 10:12:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@471bfc62
2020-03-21 10:12:39.092 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 10:12:39.224 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 10:12:39.226 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 10:12:40.250 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:12:40.250 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:12:41.131 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 10:12:41.275 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 10:12:41.287 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:12:41.288 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:12:41.289 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:12:41.346 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 10:12:41.347 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 10:12:41.354 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 10:12:41.356 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 10:12:41.356 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 10:12:41.359 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 10:12:41.367 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 10:12:41.378 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=9411bd4,type=ConfigurationPropertiesRebinder]
2020-03-21 10:12:41.384 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 10:12:41.390 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 10:12:41.397 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 10:12:41.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 10:12:42.079 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 10:12:42.080 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 10:12:42.469 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 10:12:42.470 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 10:12:42.617 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 10:12:43.102 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 10:12:43.268 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 10:12:43.271 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 10:12:43.273 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 10:12:43.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584756763274 with initial instances count: 2
2020-03-21 10:12:43.282 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 10:12:43.282 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584756763282, current=UP, previous=STARTING]
2020-03-21 10:12:43.283 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 10:12:43.286 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 10:12:43.322 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 10:12:43.348 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 10:12:43.354 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 10:12:43.357 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 10:12:43.377 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 10:12:43.378 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 10:12:43.380 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.705 seconds (JVM running for 20.323)
2020-03-21 10:12:43.924 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 10:12:43.925 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 10:12:43.925 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 10:12:43.948 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-21 10:12:44.517 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 10:12:59.416 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:13:01.342 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5c108dd9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 10:13:01.361 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:13:01.370 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:13:01.410 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@24caa4f6[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:13:01.447 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@24caa4f6[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:13:01.550 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'dealType' in 'class alipay.manage.bean.DealOrder'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.findMyOrder(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy149.findMyOrder(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findMyOrder(OrderServiceImpl.java:57)
	at alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(OrderContorller.java:146)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$755fb5b9.findMyReceiveOrderRecordByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'dealType' in 'class alipay.manage.bean.DealOrder'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:419)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:94)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:108)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:83)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 88 common frames omitted
2020-03-21 10:17:43.105 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:22:43.108 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:23:05.949 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:23:06.746 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@179c4d37[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 10:23:06.759 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:23:06.761 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:23:06.795 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7b89bf56[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:23:06.796 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7b89bf56[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:23:06.848 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'dealType' in 'class alipay.manage.bean.DealOrder'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.findMyOrder(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy149.findMyOrder(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findMyOrder(OrderServiceImpl.java:57)
	at alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(OrderContorller.java:146)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$755fb5b9.findMyReceiveOrderRecordByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'dealType' in 'class alipay.manage.bean.DealOrder'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:419)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:94)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:108)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:83)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 88 common frames omitted
2020-03-21 10:27:43.110 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:32:43.112 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:35:28.012 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31a5a781: startup date [Sat Mar 21 10:35:28 CST 2020]; root of context hierarchy
2020-03-21 10:35:28.154 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:35:28.183 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$556e597b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:35:28.958 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 10:35:28.975 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64b5c6ac: startup date [Sat Mar 21 10:35:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31a5a781
2020-03-21 10:35:29.905 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 10:35:30.095 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 10:35:30.269 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 10:35:30.293 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:35:30.395 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3954567e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:35:30.428 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$174e6825] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:35:30.434 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1557822086] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:35:30.435 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 10:35:30.438 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:35:30.483 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$556e597b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:35:30.871 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 10:35:30.882 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 10:35:30.888 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 10:35:30.888 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 10:35:30.892 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 10:35:30.979 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 10:35:30.979 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2004 ms
2020-03-21 10:35:31.198 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:35:31.198 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:35:31.206 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1855804f
2020-03-21 10:35:31.576 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 10:35:33.594 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 10:35:33.595 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 10:35:33.595 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 10:35:33.595 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 10:35:33.595 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 10:35:33.674 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 10:35:34.056 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 10:35:34 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64b5c6ac
2020-03-21 10:35:34.071 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:35:34.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:35:34.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:35:34.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 10:35:34.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 10:35:34.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 10:35:34.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 10:35:34.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 10:35:34.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 10:35:34.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 10:35:34.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 10:35:34.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 10:35:34.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 10:35:34.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 10:35:34.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 10:35:34.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 10:35:34.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:35:34.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:35:34.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:35:34.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:35:34.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 10:35:34.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:35:34.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:35:34.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:35:34.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 10:35:34.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:35:34.335 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 10:35:34.371 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64b5c6ac: startup date [Sat Mar 21 10:35:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31a5a781
2020-03-21 10:35:34.408 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 10:35:34.502 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 10:35:34.503 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 10:35:35.595 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:35:35.595 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:35:36.405 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 10:35:36.524 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 10:35:36.535 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:35:36.536 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:35:36.536 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:35:36.584 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 10:35:36.585 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 10:35:36.591 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 10:35:36.593 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 10:35:36.594 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 10:35:36.596 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 10:35:36.602 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 10:35:36.611 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=64b5c6ac,type=ConfigurationPropertiesRebinder]
2020-03-21 10:35:36.616 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 10:35:36.622 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 10:35:36.628 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 10:35:36.655 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 10:35:37.217 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 10:35:37.217 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 10:35:37.521 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 10:35:37.521 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 10:35:37.642 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 10:35:38.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 10:35:38.193 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 10:35:38.195 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 10:35:38.197 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 10:35:38.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584758138199 with initial instances count: 2
2020-03-21 10:35:38.206 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 10:35:38.207 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584758138207, current=UP, previous=STARTING]
2020-03-21 10:35:38.208 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 10:35:38.211 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 10:35:38.238 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 10:35:38.264 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 10:35:38.270 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 10:35:38.272 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 10:35:38.287 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 10:35:38.288 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 10:35:38.290 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.34 seconds (JVM running for 18.682)
2020-03-21 10:35:39.579 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 10:35:39.579 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 10:35:39.579 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 10:35:39.598 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-21 10:35:40.135 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 10:36:30.304 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:36:31.004 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2156102a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 10:36:31.019 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:36:31.032 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:36:31.066 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@72f3119e[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:36:31.077 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@72f3119e[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:36:31.235 [http-nio-9010-exec-7] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-21 10:36:31.259 [http-nio-9010-exec-7] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-21 10:36:31.316 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.findMyOrder-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId WHERE 1 = 1 AND q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.findMyOrder(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy149.findMyOrder(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findMyOrder(OrderServiceImpl.java:57)
	at alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(OrderContorller.java:146)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a461904d.findMyReceiveOrderRecordByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 88 common frames omitted
2020-03-21 10:40:38.082 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:45:38.084 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:50:38.086 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:51:53.291 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@26f206d4: startup date [Sat Mar 21 10:51:53 CST 2020]; root of context hierarchy
2020-03-21 10:51:53.449 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:51:53.484 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa0a28e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:51:54.476 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 10:51:54.508 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b48601c: startup date [Sat Mar 21 10:51:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@26f206d4
2020-03-21 10:51:55.736 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 10:51:56.037 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 10:51:56.229 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 10:51:56.255 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:51:56.410 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8df025e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:51:56.464 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$6bea378e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:51:56.485 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1840353242] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:51:56.487 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 10:51:56.497 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:51:56.536 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa0a28e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:51:57.168 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 10:51:57.181 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 10:51:57.191 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 10:51:57.191 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 10:51:57.197 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 10:51:57.438 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 10:51:57.438 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2930 ms
2020-03-21 10:51:57.939 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:51:57.939 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:51:57.953 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1714908e
2020-03-21 10:51:58.382 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 10:52:00.406 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 10:52:00.407 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 10:52:00.407 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 10:52:00.407 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 10:52:00.407 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 10:52:00.489 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 10:52:00.884 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 10:52:00 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b48601c
2020-03-21 10:52:00.900 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:52:01.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:52:01.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 10:52:01.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:52:01.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 10:52:01.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 10:52:01.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 10:52:01.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 10:52:01.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 10:52:01.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 10:52:01.125 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.125 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 10:52:01.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 10:52:01.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 10:52:01.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:52:01.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:52:01.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:52:01.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 10:52:01.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:52:01.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:52:01.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:52:01.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 10:52:01.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:52:01.177 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 10:52:01.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b48601c: startup date [Sat Mar 21 10:51:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@26f206d4
2020-03-21 10:52:01.257 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 10:52:01.382 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 10:52:01.384 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 10:52:02.402 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:52:02.402 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:52:03.226 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 10:52:03.349 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 10:52:03.360 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:52:03.361 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:52:03.362 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:52:03.416 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 10:52:03.417 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 10:52:03.425 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 10:52:03.427 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 10:52:03.428 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 10:52:03.431 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 10:52:03.438 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 10:52:03.448 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5b48601c,type=ConfigurationPropertiesRebinder]
2020-03-21 10:52:03.453 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 10:52:03.462 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 10:52:03.467 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 10:52:03.495 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 10:52:04.059 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 10:52:04.059 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 10:52:04.377 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 10:52:04.378 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 10:52:04.497 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 10:52:04.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 10:52:05.035 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 10:52:05.038 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 10:52:05.040 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 10:52:05.043 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584759125042 with initial instances count: 2
2020-03-21 10:52:05.048 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 10:52:05.049 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584759125049, current=UP, previous=STARTING]
2020-03-21 10:52:05.050 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 10:52:05.053 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 10:52:05.078 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 10:52:05.105 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 10:52:05.110 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 10:52:05.113 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 10:52:05.126 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 10:52:05.128 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 10:52:05.131 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 13.067 seconds (JVM running for 20.5)
2020-03-21 10:52:05.415 [RMI TCP Connection(7)-127.0.0.1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 10:52:05.415 [RMI TCP Connection(7)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 10:52:05.416 [RMI TCP Connection(6)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 10:52:05.443 [RMI TCP Connection(7)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2020-03-21 10:52:05.975 [RMI TCP Connection(6)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 10:52:18.355 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:52:18.853 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1914eb14[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 10:52:18.854 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:52:18.866 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:52:18.930 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@78e11512[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:52:18.936 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@78e11512[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 10:52:19.163 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:52:36.386 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@28ca42d5[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-07
  orderQrUserList=<null>
]]
2020-03-21 10:52:36.387 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@28ca42d5[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-07
  orderQrUserList=<null>
]]
2020-03-21 10:52:36.466 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:52:46.896 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:52:47.258 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(OrderContorller.java:182)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a9445d04.findMyAccountChangeLogByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 10:54:44.495 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:54:52.886 [http-nio-9010-exec-2] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-21 10:54:52.909 [http-nio-9010-exec-2] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-21 10:54:52.912 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:206)
	at com.sun.proxy.$Proxy149.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:97)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a9445d04.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 75 common frames omitted
2020-03-21 10:55:01.242 [http-nio-9010-exec-10] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:206)
	at com.sun.proxy.$Proxy149.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:97)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a9445d04.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 75 common frames omitted
2020-03-21 10:56:39.474 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:56:41.013 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:206)
	at com.sun.proxy.$Proxy149.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:97)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a9445d04.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 75 common frames omitted
2020-03-21 10:56:56.065 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:56:56.967 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:206)
	at com.sun.proxy.$Proxy149.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:97)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a9445d04.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 75 common frames omitted
2020-03-21 10:57:04.919 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:57:07.167 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:57:07.998 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
### The error may exist in alipay/manage/mapper/DealOrderMapper.xml
### The error may involve alipay.manage.mapper.DealOrderMapper.selectByExampleByMyId-Inline
### The error occurred while setting parameters
### SQL: SELECT count(0) FROM alipay_deal_order q1 LEFT JOIN alipay_file_list q2 ON q1.orderQr = q2.qrcodeId LEFT JOIN alipay_medium m ON m.mediumId = q2.concealId WHERE q1.orderQrUser = ? AND to_days(q1.createTime) = to_days(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy148.selectByExampleByMyId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:206)
	at com.sun.proxy.$Proxy149.selectByExampleByMyId(Unknown Source)
	at alipay.manage.service.impl.OrderServiceImpl.findOrderByUser(OrderServiceImpl.java:20)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:97)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a9445d04.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'q2.qrcodeId' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 75 common frames omitted
2020-03-21 10:58:37.570 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3acb5a4e: startup date [Sat Mar 21 10:58:37 CST 2020]; root of context hierarchy
2020-03-21 10:58:37.713 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:58:37.743 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d656c8b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:58:38.523 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 10:58:38.539 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76d912fe: startup date [Sat Mar 21 10:58:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3acb5a4e
2020-03-21 10:58:39.466 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 10:58:39.652 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 10:58:39.826 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 10:58:39.849 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:58:39.955 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba3cc5b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:58:39.988 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$9836d75a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:58:39.995 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2131028407] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:58:39.996 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 10:58:39.999 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:58:40.030 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d656c8b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 10:58:40.431 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 10:58:40.441 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 10:58:40.449 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 10:58:40.449 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 10:58:40.453 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 10:58:40.541 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 10:58:40.541 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2002 ms
2020-03-21 10:58:40.760 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:58:40.761 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:58:40.768 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5738ea52
2020-03-21 10:58:41.143 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 10:58:43.166 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 10:58:43.166 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 10:58:43.167 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 10:58:43.167 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 10:58:43.167 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 10:58:43.240 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 10:58:43.628 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 10:58:43 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76d912fe
2020-03-21 10:58:43.643 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:58:43.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:58:43.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 10:58:43.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 10:58:43.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 10:58:43.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 10:58:43.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 10:58:43.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 10:58:43.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 10:58:43.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 10:58:43.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 10:58:43.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 10:58:43.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 10:58:43.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 10:58:43.862 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.862 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 10:58:43.862 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 10:58:43.862 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.863 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 10:58:43.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:58:43.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:58:43.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:58:43.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 10:58:43.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 10:58:43.868 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 10:58:43.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 10:58:43.873 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:58:43.909 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 10:58:43.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76d912fe: startup date [Sat Mar 21 10:58:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3acb5a4e
2020-03-21 10:58:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 10:58:44.081 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 10:58:44.082 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 10:58:45.091 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 10:58:45.092 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 10:58:45.893 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 10:58:46.014 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 10:58:46.024 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:58:46.025 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 10:58:46.026 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 10:58:46.073 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 10:58:46.075 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 10:58:46.082 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 10:58:46.083 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 10:58:46.084 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 10:58:46.087 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 10:58:46.093 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 10:58:46.103 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=76d912fe,type=ConfigurationPropertiesRebinder]
2020-03-21 10:58:46.108 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 10:58:46.115 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 10:58:46.120 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 10:58:46.147 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 10:58:46.714 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 10:58:46.714 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 10:58:47.027 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 10:58:47.027 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 10:58:47.150 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 10:58:47.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 10:58:47.691 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 10:58:47.694 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 10:58:47.696 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 10:58:47.698 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584759527697 with initial instances count: 2
2020-03-21 10:58:47.704 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 10:58:47.704 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584759527704, current=UP, previous=STARTING]
2020-03-21 10:58:47.705 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 10:58:47.708 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 10:58:47.733 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 10:58:47.761 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 10:58:47.767 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 10:58:47.769 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 10:58:47.786 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 10:58:47.787 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 10:58:47.789 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.306 seconds (JVM running for 18.576)
2020-03-21 10:58:48.667 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 10:58:48.670 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 10:58:48.670 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 10:58:48.687 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 10:58:49.285 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 10:58:58.366 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:58:59.738 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 10:58:59.774 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:10.776 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:11.134 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 10:59:11.145 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:17.274 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 10:59:17.281 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:24.556 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:24.877 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 10:59:24.877 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 10:59:24.882 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 10:59:24.887 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 10:59:24.887 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3bd569c2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 10:59:24.892 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 10:59:24.895 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 10:59:24.896 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 10:59:24.896 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 10:59:24.897 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 10:59:24.910 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:24.910 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:25.050 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 10:59:25 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76d912fe
2020-03-21 10:59:25.089 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 10:59:25.243 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 10:59:25.260 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 10:59:25.264 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 10:59:25.273 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 10:59:25.276 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@781b948c
2020-03-21 10:59:25.347 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 10:59:25.347 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 10:59:25.347 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 10:59:25.347 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 10:59:25.350 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3ab56e52
2020-03-21 10:59:25.359 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:37.147 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 10:59:38.211 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(OrderContorller.java:182)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$e898bd0c.findMyAccountChangeLogByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:03:47.580 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:08:47.582 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:13:47.585 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:14:26.557 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@668bb76d: startup date [Sat Mar 21 11:14:26 CST 2020]; root of context hierarchy
2020-03-21 11:14:26.703 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:14:26.734 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26fadaac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:14:27.560 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:14:27.578 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56b19548: startup date [Sat Mar 21 11:14:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@668bb76d
2020-03-21 11:14:28.612 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:14:28.803 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:14:28.980 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 11:14:29.003 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:14:29.108 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae0d7af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:14:29.142 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e8dae956] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:14:29.148 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1682211121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:14:29.149 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:14:29.152 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:14:29.201 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26fadaac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:14:29.692 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:14:29.707 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:14:29.715 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:14:29.715 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:14:29.719 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:14:29.814 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:14:29.814 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2237 ms
2020-03-21 11:14:30.045 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:14:30.045 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:14:30.053 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5b21aadd
2020-03-21 11:14:30.433 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:14:32.360 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:14:32.361 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:14:32.361 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:14:32.361 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:14:32.361 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:14:32.445 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:14:32.888 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:14:32 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56b19548
2020-03-21 11:14:32.903 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:14:33.037 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderContorller': Unsatisfied dependency expressed through field 'orderServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'runOrderMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'alipay.manage.mapper.RunOrderMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-21 11:14:33.037 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:14:32 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56b19548
2020-03-21 11:14:33.039 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-21 11:14:33.055 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 11:14:33.058 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 11:14:33.069 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 11:14:33.301 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field runOrderMapper in alipay.manage.service.impl.OrderServiceImpl required a bean of type 'alipay.manage.mapper.RunOrderMapper' that could not be found.


Action:

Consider defining a bean of type 'alipay.manage.mapper.RunOrderMapper' in your configuration.

2020-03-21 11:15:16.025 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4665a9db: startup date [Sat Mar 21 11:15:16 CST 2020]; root of context hierarchy
2020-03-21 11:15:16.167 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:15:16.198 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fdf1c39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:15:16.985 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:15:17.000 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17418a40: startup date [Sat Mar 21 11:15:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4665a9db
2020-03-21 11:15:17.939 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:15:18.144 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:15:18.324 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a009e3fb-6521-3644-bdbf-c26dd301cf0f
2020-03-21 11:15:18.347 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:15:18.454 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f3c5193c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:15:18.488 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d1bf2ae3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:15:18.493 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/669213601] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:15:18.494 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:15:18.497 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:15:18.530 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fdf1c39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:15:18.932 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:15:18.942 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:15:18.949 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:15:18.950 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:15:18.953 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:15:19.041 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:15:19.042 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2042 ms
2020-03-21 11:15:19.282 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:15:19.282 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:15:19.290 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@36b3edcf
2020-03-21 11:15:19.658 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:15:21.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:15:21.555 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:15:21.555 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:15:21.555 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:15:21.555 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:15:21.636 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:15:22.040 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:15:22 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17418a40
2020-03-21 11:15:22.054 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:15:22.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 11:15:22.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 11:15:22.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 11:15:22.271 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 11:15:22.271 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.271 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 11:15:22.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 11:15:22.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 11:15:22.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 11:15:22.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 11:15:22.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 11:15:22.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 11:15:22.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 11:15:22.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 11:15:22.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 11:15:22.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 11:15:22.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 11:15:22.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 11:15:22.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 11:15:22.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:15:22.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:15:22.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:15:22.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:15:22.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 11:15:22.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:15:22.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 11:15:22.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 11:15:22.336 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 11:15:22.374 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17418a40: startup date [Sat Mar 21 11:15:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4665a9db
2020-03-21 11:15:22.410 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 11:15:22.510 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 11:15:22.511 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 11:15:23.550 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:15:23.550 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:15:24.371 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 11:15:24.492 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 11:15:24.503 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 11:15:24.504 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 11:15:24.505 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 11:15:24.558 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 11:15:24.560 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 11:15:24.567 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 11:15:24.569 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 11:15:24.570 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 11:15:24.572 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 11:15:24.581 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 11:15:24.592 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=17418a40,type=ConfigurationPropertiesRebinder]
2020-03-21 11:15:24.598 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 11:15:24.608 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 11:15:24.613 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 11:15:24.652 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 11:15:25.260 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 11:15:25.260 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 11:15:25.595 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 11:15:25.595 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 11:15:25.717 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:15:26.151 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 11:15:26.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 11:15:26.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 11:15:26.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 11:15:26.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 11:15:26.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 11:15:26.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 11:15:26.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 11:15:26.277 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 11:15:26.279 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 11:15:26.282 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584760526281 with initial instances count: 2
2020-03-21 11:15:26.288 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 11:15:26.288 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584760526288, current=UP, previous=STARTING]
2020-03-21 11:15:26.289 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 11:15:26.293 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 11:15:26.318 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 11:15:26.348 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 11:15:26.353 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 11:15:26.356 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 11:15:26.374 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 11:15:26.375 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 11:15:26.377 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.306 seconds (JVM running for 18.614)
2020-03-21 11:15:27.488 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 11:15:27.488 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 11:15:27.488 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 11:15:27.504 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 11:15:28.005 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 11:15:47.979 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:15:48.933 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:15:56.251 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:15:59.335 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:15:59.482 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:02.844 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:03.903 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:03.903 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@55a0b92f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:16:03.920 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:03.936 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@3746decf[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 11:16:03.938 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@3746decf[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 11:16:04.070 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:06.544 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:07.314 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:07.440 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:11.187 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:11.684 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@574612bd[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:16:11.721 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:11.734 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@64aeffe8[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:16:11.747 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:11.801 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:11.888 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 11:16:11 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17418a40
2020-03-21 11:16:11.934 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:16:12.096 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 11:16:12.116 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 11:16:12.120 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 11:16:12.127 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 11:16:12.130 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4eff1438
2020-03-21 11:16:12.195 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 11:16:12.195 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 11:16:12.195 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 11:16:12.195 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 11:16:12.198 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@19113589
2020-03-21 11:16:12.199 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 11:16:12.201 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:16:14.966 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:15.883 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:16:15.889 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:21.481 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:16:21.488 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:22.208 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:16:22.215 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:22.379 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:16:22.386 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:23.866 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:24.336 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4d94bfbd[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:16:24.349 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 11:16:24.349 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 11:16:24.350 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 11:16:24.350 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 11:16:24.351 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@6754ddd8
2020-03-21 11:16:24.352 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 11:16:24.353 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:16:24.365 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:24.372 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@441e02e8[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:16:24.385 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:24.454 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:25.956 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:26.250 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@44a81ad4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:16:26.264 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 11:16:26.264 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 11:16:26.265 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 11:16:26.270 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 11:16:26.270 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 11:16:26.270 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 11:16:26.270 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 11:16:26.272 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@1c9fde54
2020-03-21 11:16:26.273 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 11:16:26.276 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 11:16:26.279 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 11:16:26.281 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 11:16:26.281 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 11:16:26.281 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 11:16:26.284 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:26.294 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:26.300 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:29.243 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:29.479 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(OrderContorller.java:304)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a8d107ec.findMyRechargeWithdrawLogByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:16:36.664 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:16:37.065 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(OrderContorller.java:304)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$a8d107ec.findMyRechargeWithdrawLogByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:20:27.558 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:25:27.560 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:26:29.129 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@73f4f107: startup date [Sat Mar 21 11:26:29 CST 2020]; root of context hierarchy
2020-03-21 11:26:29.270 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:26:29.299 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$696dc0e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:26:30.121 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:26:30.137 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51b87b37: startup date [Sat Mar 21 11:26:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@73f4f107
2020-03-21 11:26:31.073 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:26:31.263 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:26:31.445 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a009e3fb-6521-3644-bdbf-c26dd301cf0f
2020-03-21 11:26:31.469 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:26:31.571 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d53bde6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:26:31.605 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2b4dcf8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:26:31.611 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1762799244] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:26:31.612 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:26:31.615 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:26:31.660 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$696dc0e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:26:32.045 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:26:32.054 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:26:32.062 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:26:32.063 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:26:32.066 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:26:32.152 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:26:32.152 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2015 ms
2020-03-21 11:26:32.395 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:26:32.395 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:26:32.402 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12849ec9
2020-03-21 11:26:32.813 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:26:34.718 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:26:34.718 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:26:34.718 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:26:34.718 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:26:34.719 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:26:34.794 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:26:35.188 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:26:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51b87b37
2020-03-21 11:26:35.203 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:26:35.349 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderContorller': Unsatisfied dependency expressed through field 'orderServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'rechargeMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'alipay.manage.mapper.RechargeMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-21 11:26:35.350 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:26:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51b87b37
2020-03-21 11:26:35.352 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-21 11:26:35.364 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 11:26:35.367 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 11:26:35.377 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 11:26:35.599 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field rechargeMapper in alipay.manage.service.impl.OrderServiceImpl required a bean of type 'alipay.manage.mapper.RechargeMapper' that could not be found.


Action:

Consider defining a bean of type 'alipay.manage.mapper.RechargeMapper' in your configuration.

2020-03-21 11:27:12.805 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a64a560: startup date [Sat Mar 21 11:27:12 CST 2020]; root of context hierarchy
2020-03-21 11:27:12.948 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:27:12.980 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$31e3864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:27:13.758 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:27:13.774 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fbd5674: startup date [Sat Mar 21 11:27:13 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a64a560
2020-03-21 11:27:14.725 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:27:14.913 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:27:15.091 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=09921e95-6e03-339b-ad63-1426d0e82e9a
2020-03-21 11:27:15.115 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:27:15.217 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e7043567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:27:15.252 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$c4fe470e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:27:15.258 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1912944013] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:27:15.259 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:27:15.262 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:27:15.306 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$31e3864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:27:15.699 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:27:15.710 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:27:15.722 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:27:15.723 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:27:15.727 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:27:15.813 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:27:15.813 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2039 ms
2020-03-21 11:27:16.040 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:27:16.040 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:27:16.047 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7bc78997
2020-03-21 11:27:16.415 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:27:18.372 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:27:18.372 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:27:18.372 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:27:18.372 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:27:18.372 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:27:18.464 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:27:18.873 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:27:18 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fbd5674
2020-03-21 11:27:18.887 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:27:19.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 11:27:19.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 11:27:19.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 11:27:19.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 11:27:19.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.118 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.118 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.125 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 11:27:19.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 11:27:19.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 11:27:19.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 11:27:19.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 11:27:19.126 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 11:27:19.127 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 11:27:19.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 11:27:19.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 11:27:19.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 11:27:19.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 11:27:19.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 11:27:19.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:27:19.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:27:19.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:27:19.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:27:19.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:27:19.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 11:27:19.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:27:19.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:27:19.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:27:19.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 11:27:19.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 11:27:19.177 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 11:27:19.214 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fbd5674: startup date [Sat Mar 21 11:27:13 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a64a560
2020-03-21 11:27:19.251 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 11:27:19.351 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 11:27:19.352 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 11:27:20.382 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:27:20.382 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:27:21.190 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 11:27:21.308 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 11:27:21.318 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 11:27:21.319 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 11:27:21.320 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 11:27:21.373 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 11:27:21.375 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 11:27:21.383 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 11:27:21.384 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 11:27:21.385 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 11:27:21.387 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 11:27:21.395 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 11:27:21.404 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5fbd5674,type=ConfigurationPropertiesRebinder]
2020-03-21 11:27:21.411 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 11:27:21.418 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 11:27:21.426 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 11:27:21.455 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 11:27:22.046 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 11:27:22.046 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 11:27:22.372 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 11:27:22.372 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 11:27:22.492 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 11:27:22.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 11:27:23.046 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 11:27:23.049 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 11:27:23.051 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 11:27:23.054 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584761243053 with initial instances count: 2
2020-03-21 11:27:23.061 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 11:27:23.061 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584761243061, current=UP, previous=STARTING]
2020-03-21 11:27:23.063 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 11:27:23.066 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 11:27:23.101 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 11:27:23.124 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 11:27:23.130 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 11:27:23.133 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 11:27:23.147 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 11:27:23.148 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 11:27:23.151 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.299 seconds (JVM running for 18.589)
2020-03-21 11:27:23.819 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 11:27:23.819 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 11:27:23.819 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 11:27:23.836 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 11:27:24.373 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 11:27:30.786 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:27:31.675 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:27:37.415 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(OrderContorller.java:318)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$aefbd55b.findMyRechargeWithdrawLogByPage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:32:22.924 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:37:22.926 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:42:16.742 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22397165: startup date [Sat Mar 21 11:42:16 CST 2020]; root of context hierarchy
2020-03-21 11:42:16.892 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:42:16.921 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6774303e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:17.706 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:42:17.723 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@313b043f: startup date [Sat Mar 21 11:42:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22397165
2020-03-21 11:42:18.754 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:42:18.952 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:42:19.133 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=09921e95-6e03-339b-ad63-1426d0e82e9a
2020-03-21 11:42:19.158 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:42:19.259 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b5a2d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:19.294 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$29543ee8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:19.300 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/806030082] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:19.301 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:42:19.304 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:19.350 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6774303e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:19.815 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:42:19.828 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:42:19.836 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:42:19.836 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:42:19.840 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:42:19.931 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:42:19.931 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2208 ms
2020-03-21 11:42:20.170 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:42:20.170 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:42:20.179 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6286ccb6
2020-03-21 11:42:20.573 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:42:22.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:42:22.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:42:22.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:42:22.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:42:22.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:42:22.654 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:42:23.119 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:42:23 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@313b043f
2020-03-21 11:42:23.134 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:42:23.288 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderContorller': Unsatisfied dependency expressed through field 'orderServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'withdrawMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'alipay.manage.mapper.WithdrawMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-21 11:42:23.288 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:42:23 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@313b043f
2020-03-21 11:42:23.290 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-21 11:42:23.305 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 11:42:23.309 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 11:42:23.330 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 11:42:23.635 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field withdrawMapper in alipay.manage.service.impl.OrderServiceImpl required a bean of type 'alipay.manage.mapper.WithdrawMapper' that could not be found.


Action:

Consider defining a bean of type 'alipay.manage.mapper.WithdrawMapper' in your configuration.

2020-03-21 11:42:50.763 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@46ae54f3: startup date [Sat Mar 21 11:42:50 CST 2020]; root of context hierarchy
2020-03-21 11:42:50.907 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:42:50.938 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$202af426] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:51.710 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:42:51.725 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d761cdd: startup date [Sat Mar 21 11:42:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46ae54f3
2020-03-21 11:42:52.668 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:42:52.858 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:42:53.042 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=672e2f29-e456-31f1-b00f-52b7a00112eb
2020-03-21 11:42:53.065 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:42:53.169 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$410f129] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:53.203 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e20b02d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:53.209 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1306495649] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:53.210 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:42:53.213 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:53.255 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$202af426] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:42:53.670 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:42:53.681 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:42:53.688 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:42:53.688 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:42:53.692 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:42:53.780 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:42:53.780 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2055 ms
2020-03-21 11:42:54.010 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:42:54.011 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:42:54.018 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@567296ff
2020-03-21 11:42:54.389 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:42:56.357 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:42:56.357 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:42:56.357 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:42:56.358 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:42:56.358 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:42:56.434 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:42:56.842 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:42:56 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d761cdd
2020-03-21 11:42:56.857 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:42:57.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 11:42:57.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 11:42:57.100 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 11:42:57.100 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 11:42:57.101 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.101 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.106 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 11:42:57.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 11:42:57.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 11:42:57.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 11:42:57.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 11:42:57.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 11:42:57.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 11:42:57.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 11:42:57.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 11:42:57.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 11:42:57.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 11:42:57.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 11:42:57.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 11:42:57.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:42:57.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 11:42:57.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 11:42:57.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:42:57.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:42:57.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 11:42:57.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.125 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 11:42:57.125 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 11:42:57.161 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 11:42:57.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d761cdd: startup date [Sat Mar 21 11:42:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46ae54f3
2020-03-21 11:42:57.235 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 11:42:57.354 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 11:42:57.355 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 11:42:58.374 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:42:58.374 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:42:59.195 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 11:42:59.320 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 11:42:59.334 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 11:42:59.336 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 11:42:59.336 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 11:42:59.389 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 11:42:59.390 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 11:42:59.398 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 11:42:59.400 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 11:42:59.402 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 11:42:59.408 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 11:42:59.419 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 11:42:59.431 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4d761cdd,type=ConfigurationPropertiesRebinder]
2020-03-21 11:42:59.436 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 11:42:59.443 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 11:42:59.450 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 11:42:59.489 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 11:43:00.128 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 11:43:00.128 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 11:43:00.443 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 11:43:00.443 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 11:43:00.571 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 11:43:01.003 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 11:43:01.125 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 11:43:01.127 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 11:43:01.129 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 11:43:01.132 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584762181131 with initial instances count: 2
2020-03-21 11:43:01.139 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 11:43:01.139 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584762181139, current=UP, previous=STARTING]
2020-03-21 11:43:01.140 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 11:43:01.143 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 11:43:01.173 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 11:43:01.197 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 11:43:01.202 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 11:43:01.206 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 11:43:01.224 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 11:43:01.226 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 11:43:01.228 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.416 seconds (JVM running for 18.713)
2020-03-21 11:43:02.653 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 11:43:02.653 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 11:43:02.653 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 11:43:02.671 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-21 11:43:03.235 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 11:44:09.645 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:10.650 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:13.093 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:15.437 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:15.781 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:16.260 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:16.417 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:17.424 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:17.997 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:44:18.005 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:22.081 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:44:22.087 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:23.419 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:23.738 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@413a322a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:44:23.754 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:23.764 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@25875b25[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:44:23.776 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:23.810 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:23.916 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 11:44:23 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d761cdd
2020-03-21 11:44:23.962 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:44:24.123 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 11:44:24.139 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 11:44:24.142 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 11:44:24.149 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 11:44:24.152 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@506a6efe
2020-03-21 11:44:24.221 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 11:44:24.221 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 11:44:24.221 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 11:44:24.221 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 11:44:24.224 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@63541749
2020-03-21 11:44:24.224 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 11:44:24.228 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 11:44:29.350 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:29.777 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 11:44:29.791 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:30.938 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:31.285 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4475e3c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:44:31.294 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 11:44:31.295 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 11:44:31.295 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 11:44:31.295 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 11:44:31.299 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@6411b09e
2020-03-21 11:44:31.302 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 11:44:31.302 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 11:44:31.313 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 11:44:31.332 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 11:44:31.337 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:31.337 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:31.344 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 11:44:31.347 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 11:44:31.350 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 11:44:31.350 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 11:44:31.351 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 11:44:31.378 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:33.979 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:34.819 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:36.744 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:36.988 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@45cdf17e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:44:37.006 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:37.017 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:37.035 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@1e4e57fa[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 11:44:37.037 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@1e4e57fa[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 11:44:37.154 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:41.120 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:41.381 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:41.510 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:45.931 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:46.885 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:51.858 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:55.930 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:44:57.049 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:45:41.609 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:45:41.891 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3f10cbf4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 11:45:41.893 [http-nio-9010-exec-9] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/userAccount/virtualAmount] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 11:45:41.914 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:45:41.923 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:45:41.939 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 11:48:01.007 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:53:01.008 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 11:57:42.973 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fc40bc0: startup date [Sat Mar 21 11:57:42 CST 2020]; root of context hierarchy
2020-03-21 11:57:43.117 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:57:43.149 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d71ddfd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:57:43.951 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 11:57:43.968 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16f69420: startup date [Sat Mar 21 11:57:43 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fc40bc0
2020-03-21 11:57:45.004 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 11:57:45.202 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 11:57:45.395 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=672e2f29-e456-31f1-b00f-52b7a00112eb
2020-03-21 11:57:45.419 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:57:45.523 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7157db00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:57:45.558 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$4f51eca7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:57:45.564 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/962980628] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:57:45.566 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 11:57:45.568 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:57:45.602 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d71ddfd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 11:57:46.088 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 11:57:46.101 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 11:57:46.110 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 11:57:46.110 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 11:57:46.114 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 11:57:46.207 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 11:57:46.207 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2239 ms
2020-03-21 11:57:46.469 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 11:57:46.469 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 11:57:46.477 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6263663c
2020-03-21 11:57:46.863 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 11:57:48.863 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 11:57:48.863 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 11:57:48.863 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 11:57:48.863 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 11:57:48.863 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 11:57:48.944 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 11:57:49.400 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:57:49 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16f69420
2020-03-21 11:57:49.415 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 11:57:49.619 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userContorller': Unsatisfied dependency expressed through field 'qrUtil'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'alipay.manage.util.QrUtil' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-03-21 11:57:49.619 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 11:57:49 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16f69420
2020-03-21 11:57:49.621 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-21 11:57:49.639 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 11:57:49.642 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 11:57:49.654 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 11:57:49.874 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field qrUtil in alipay.manage.contorller.UserContorller required a bean of type 'alipay.manage.util.QrUtil' that could not be found.


Action:

Consider defining a bean of type 'alipay.manage.util.QrUtil' in your configuration.

2020-03-21 12:00:06.125 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7ec3082e: startup date [Sat Mar 21 12:00:06 CST 2020]; root of context hierarchy
2020-03-21 12:00:06.269 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:00:06.300 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3aa02916] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:00:07.088 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:00:07.105 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1af09468: startup date [Sat Mar 21 12:00:07 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7ec3082e
2020-03-21 12:00:08.048 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:00:08.233 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:00:08.415 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=672e2f29-e456-31f1-b00f-52b7a00112eb
2020-03-21 12:00:08.439 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:00:08.541 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e862619] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:00:08.573 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$fc8037c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:00:08.579 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/450440466] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:00:08.580 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:00:08.583 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:00:08.627 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3aa02916] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:00:09.051 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:00:09.062 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:00:09.070 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:00:09.070 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:00:09.075 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:00:09.162 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:00:09.162 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2057 ms
2020-03-21 12:00:09.393 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:00:09.393 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:00:09.400 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@29425bf4
2020-03-21 12:00:09.785 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:00:11.737 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:00:11.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:00:11.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:00:11.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:00:11.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:00:11.816 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:00:12.202 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:00:12 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1af09468
2020-03-21 12:00:12.216 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:00:12.414 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userContorller': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'alipay.manage.util.QrUtil' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
2020-03-21 12:00:12.414 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:00:12 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1af09468
2020-03-21 12:00:12.417 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-21 12:00:12.430 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 12:00:12.433 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 12:00:12.444 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 12:00:12.646 [restartedMain] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'alipay.manage.util.QrUtil' that could not be found.


Action:

Consider defining a bean of type 'alipay.manage.util.QrUtil' in your configuration.

2020-03-21 12:01:08.504 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2d603f8e: startup date [Sat Mar 21 12:01:08 CST 2020]; root of context hierarchy
2020-03-21 12:01:08.644 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:01:08.673 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6d85127d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:01:09.496 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:01:09.513 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b9814f1: startup date [Sat Mar 21 12:01:09 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d603f8e
2020-03-21 12:01:10.452 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:01:10.640 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:01:10.815 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:01:10.839 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:01:10.942 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$516b0f80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:01:10.975 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2f652127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:01:10.982 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/138647037] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:01:10.983 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:01:10.986 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:01:11.019 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6d85127d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:01:11.426 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:01:11.435 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:01:11.443 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:01:11.443 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:01:11.447 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:01:11.532 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:01:11.532 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2019 ms
2020-03-21 12:01:11.755 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:01:11.756 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:01:11.763 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@51e4eb6e
2020-03-21 12:01:12.135 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:01:14.090 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:01:14.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:01:14.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:01:14.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:01:14.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:01:14.173 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:01:14.566 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:01:14 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b9814f1
2020-03-21 12:01:14.581 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:01:14.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:01:14.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:01:14.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:01:14.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:01:14.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:01:14.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:01:14.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:01:14.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:01:14.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:01:14.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:01:14.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:01:14.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:01:14.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:01:14.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:01:14.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:01:14.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:01:14.856 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:01:14.856 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:01:14.856 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:01:14.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:01:14.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:01:14.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:01:14.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:01:14.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:01:14.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.862 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:01:14.863 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:01:14.899 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:01:14.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b9814f1: startup date [Sat Mar 21 12:01:09 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d603f8e
2020-03-21 12:01:14.976 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:01:15.074 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:01:15.075 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:01:16.140 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:01:16.140 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:01:16.969 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:01:17.088 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:01:17.098 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:01:17.101 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:01:17.101 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:01:17.150 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:01:17.151 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:01:17.160 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:01:17.162 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:01:17.162 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:01:17.165 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:01:17.174 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:01:17.184 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3b9814f1,type=ConfigurationPropertiesRebinder]
2020-03-21 12:01:17.190 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:01:17.197 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:01:17.204 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:01:17.242 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:01:17.843 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:01:17.843 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:01:18.169 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:01:18.169 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:01:18.294 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:01:18.739 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:01:18.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:01:18.861 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:01:18.863 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:01:18.866 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584763278865 with initial instances count: 2
2020-03-21 12:01:18.872 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:01:18.872 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584763278872, current=UP, previous=STARTING]
2020-03-21 12:01:18.874 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:01:18.877 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:01:18.909 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:01:18.933 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:01:18.939 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:01:18.942 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:01:18.960 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:01:18.961 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:01:18.963 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.422 seconds (JVM running for 18.793)
2020-03-21 12:01:19.822 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:01:19.822 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:01:19.823 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:01:19.841 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-21 12:01:20.349 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:01:24.526 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:01:25.945 [http-nio-9010-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:650)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.expire(LettuceKeyCommands.java:298)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.expire(DefaultedRedisConnection.java:110)
	at org.springframework.data.redis.core.RedisTemplate.lambda$expire$5(RedisTemplate.java:757)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.RedisTemplate.expire(RedisTemplate.java:752)
	at org.springframework.data.redis.core.DefaultBoundKeyOperations.expire(DefaultBoundKeyOperations.java:53)
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.onExpirationUpdated(RedisSessionExpirationPolicy.java:102)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveDelta(RedisOperationsSessionRepository.java:803)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.access$000(RedisOperationsSessionRepository.java:649)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:384)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:234)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:150)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.expire(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.expire(LettuceKeyCommands.java:296)
	... 37 common frames omitted
2020-03-21 12:01:25.946 [http-nio-9010-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 59 common frames omitted
2020-03-21 12:01:25.946 [http-nio-9010-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 59 common frames omitted
2020-03-21 12:01:26.359 [http-nio-9010-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 59 common frames omitted
2020-03-21 12:01:26.369 [http-nio-9010-exec-10] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 59 common frames omitted
2020-03-21 12:01:26.373 [http-nio-9010-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 59 common frames omitted
2020-03-21 12:01:26.468 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.isRequestedSessionIdValid(SessionRepositoryFilter.java:274)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:236)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.access$000(OnCommittedResponseWrapper.java:38)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:494)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:224)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 62 common frames omitted
2020-03-21 12:01:26.952 [http-nio-9010-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 46 common frames omitted
2020-03-21 12:01:26.953 [http-nio-9010-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 46 common frames omitted
2020-03-21 12:01:26.953 [http-nio-9010-exec-5] ERROR o.a.c.core.ContainerBase.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 46 common frames omitted
2020-03-21 12:01:26.953 [http-nio-9010-exec-9] ERROR o.a.c.core.ContainerBase.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.util.WebUtils.getSessionId(WebUtils.java:287)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 46 common frames omitted
2020-03-21 12:01:26.971 [http-nio-9010-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failed to invoke @ExceptionHandler method: public otc.result.Result alipay.config.exception.AlipayExceptionHandler.notFount(java.lang.RuntimeException)
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.isRequestedSessionIdValid(SessionRepositoryFilter.java:274)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:236)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.access$000(OnCommittedResponseWrapper.java:38)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:494)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:400)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 65 common frames omitted
2020-03-21 12:01:27.011 [http-nio-9010-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.isRequestedSessionIdValid(SessionRepositoryFilter.java:274)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:236)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.access$000(OnCommittedResponseWrapper.java:38)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:494)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:224)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:01:27.012 [http-nio-9010-exec-6] ERROR o.a.c.core.ContainerBase.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.isRequestedSessionIdValid(SessionRepositoryFilter.java:274)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:236)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.access$000(OnCommittedResponseWrapper.java:38)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:494)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:224)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	... 30 common frames omitted
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 62 common frames omitted
2020-03-21 12:01:27.024 [http-nio-9010-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:01:27.025 [http-nio-9010-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:01:27.025 [http-nio-9010-exec-8] ERROR o.a.c.core.ContainerBase.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	... 30 common frames omitted
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 47 common frames omitted
2020-03-21 12:01:27.025 [http-nio-9010-exec-10] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:01:27.026 [http-nio-9010-exec-1] ERROR o.a.c.core.ContainerBase.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	... 30 common frames omitted
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 47 common frames omitted
2020-03-21 12:01:27.031 [http-nio-9010-exec-10] ERROR o.a.c.core.ContainerBase.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	... 30 common frames omitted
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy155.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 47 common frames omitted
2020-03-21 12:06:10.073 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fabf6de: startup date [Sat Mar 21 12:06:10 CST 2020]; root of context hierarchy
2020-03-21 12:06:10.222 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:06:10.253 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$66ba2bec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:06:11.095 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:06:11.112 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e9dc748: startup date [Sat Mar 21 12:06:11 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7fabf6de
2020-03-21 12:06:12.109 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:06:12.297 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:06:12.481 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:06:12.505 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:06:12.609 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4aa028ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:06:12.644 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$289a3a96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:06:12.650 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1972845502] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:06:12.651 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:06:12.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:06:12.697 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$66ba2bec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:06:13.184 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:06:13.201 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:06:13.213 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:06:13.213 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:06:13.218 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:06:13.313 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:06:13.314 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2202 ms
2020-03-21 12:06:13.555 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:06:13.555 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:06:13.563 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d666869
2020-03-21 12:06:13.939 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:06:15.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:06:15.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:06:15.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:06:15.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:06:15.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:06:15.954 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:06:16.417 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:06:16 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e9dc748
2020-03-21 12:06:16.432 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:06:16.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:06:16.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:06:16.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:06:16.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:06:16.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.685 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:06:16.685 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.685 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:06:16.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:06:16.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:06:16.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:06:16.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:06:16.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:06:16.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:06:16.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:06:16.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:06:16.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:06:16.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:06:16.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:06:16.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:06:16.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:06:16.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:06:16.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:06:16.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:06:16.692 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:06:16.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:06:16.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:06:16.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:06:16.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:06:16.738 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:06:16.774 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e9dc748: startup date [Sat Mar 21 12:06:11 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7fabf6de
2020-03-21 12:06:16.810 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:06:16.928 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:06:16.929 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:06:18.006 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:06:18.006 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:06:18.834 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:06:18.958 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:06:18.970 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:06:18.970 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:06:18.971 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:06:19.025 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:06:19.026 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:06:19.034 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:06:19.036 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:06:19.037 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:06:19.040 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:06:19.047 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:06:19.059 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3e9dc748,type=ConfigurationPropertiesRebinder]
2020-03-21 12:06:19.066 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:06:19.074 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:06:19.079 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:06:19.115 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:06:19.770 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:06:19.770 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:06:20.090 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:06:20.090 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:06:20.213 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:06:20.650 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:06:20.766 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:06:20.769 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:06:20.771 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:06:20.774 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584763580774 with initial instances count: 2
2020-03-21 12:06:20.781 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:06:20.781 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584763580781, current=UP, previous=STARTING]
2020-03-21 12:06:20.782 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:06:20.785 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:06:20.811 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:06:20.837 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:06:20.842 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:06:20.845 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:06:20.862 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:06:20.863 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:06:20.864 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.932 seconds (JVM running for 19.379)
2020-03-21 12:06:22.022 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:06:22.022 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:06:22.022 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:06:22.039 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 12:06:22.600 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:06:29.741 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:30.452 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@744edbbf[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:06:30.484 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:30.484 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:30.500 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:43.961 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:44.434 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5083f905[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:06:44.451 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:44.455 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:44.457 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:57.728 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:06:58.414 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:01.247 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:01.531 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:01.694 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:03.968 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:04.449 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5a9d60f5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:04.462 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:04.483 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@741d084e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:04.498 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:04.566 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:04.717 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 12:07:04 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e9dc748
2020-03-21 12:07:04.754 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:07:04.899 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 12:07:04.914 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 12:07:04.918 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 12:07:04.928 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 12:07:04.932 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@30970d49
2020-03-21 12:07:05.001 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:07:05.001 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 12:07:05.001 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:07:05.001 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:07:05.006 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@5e82598e
2020-03-21 12:07:05.006 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 12:07:05.008 [http-nio-9010-exec-10] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:07:05.945 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:06.418 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 12:07:06.426 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:07.484 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:08.018 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7f2004d3[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:08.026 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:07:08.026 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:07:08.026 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:07:08.026 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:07:08.029 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@5a724a9e
2020-03-21 12:07:08.032 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:07:08.033 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:07:08.042 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:08.047 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:07:08.059 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:07:08.060 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:08.062 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:07:08.063 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:07:08.064 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:07:08.064 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:07:08.065 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:07:08.072 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:13.639 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:14.008 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@70dee25[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:14.015 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:07:14.015 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 12:07:14.016 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:07:14.016 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:07:14.018 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@65cbabb0
2020-03-21 12:07:14.019 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 12:07:14.020 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:07:14.025 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:14.035 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2d03bae5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:14.051 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:14.106 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:18.477 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:18.895 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 12:07:18.898 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:20.159 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:20.445 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@12bfc150[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:20.450 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:07:20.450 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:07:20.450 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:07:20.450 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:07:20.450 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:07:20.450 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:07:20.450 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:07:20.452 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@61e9f57c
2020-03-21 12:07:20.452 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:07:20.453 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:07:20.453 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:07:20.456 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:07:20.457 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:07:20.457 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:07:20.460 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:20.482 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:20.483 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:26.769 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:27.312 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:29.830 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:30.131 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@e619874[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:30.142 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:30.142 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:30.146 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:32.244 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:32.560 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:40.284 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:40.599 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3024e831[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:40.609 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:40.614 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:40.617 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:48.066 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:48.629 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:55.167 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:55.950 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3e7d110f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:55.960 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:55.963 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:07:55.963 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 12:07:55.963 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:07:55.963 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:07:55.965 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@638ecf8a
2020-03-21 12:07:55.966 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 12:07:55.968 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 12:07:55.969 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@36f2775e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:07:55.983 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:07:56.046 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:00.045 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:00.484 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 12:08:00.493 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:02.340 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:02.712 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2c45088e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:08:02.716 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:08:02.716 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:08:02.716 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:08:02.716 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:08:02.717 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:08:02.717 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:08:02.717 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@36895c09
2020-03-21 12:08:02.718 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:08:02.719 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:08:02.720 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:08:02.720 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:08:02.721 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:08:02.721 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:08:02.721 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:08:02.723 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:02.729 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:02.733 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:15.984 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:16.802 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:19.675 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:08:20.076 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:09:20.078 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:09:20.429 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4c20ed26[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:09:20.430 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:09:20.431 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:09:20.431 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:09:20.431 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:09:20.433 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@4b02955a
2020-03-21 12:09:20.435 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:09:20.435 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:09:20.436 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:09:20.438 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:09:20.438 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:09:20.438 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:09:20.438 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:09:20.438 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:09:20.438 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:09:20.441 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:09:20.442 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:09:20.463 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:10:19.344 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@550861f4: startup date [Sat Mar 21 12:10:19 CST 2020]; root of context hierarchy
2020-03-21 12:10:19.492 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:10:19.523 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$485203fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:10:20.321 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:10:20.345 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3534483c: startup date [Sat Mar 21 12:10:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@550861f4
2020-03-21 12:10:21.311 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:10:21.499 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:10:21.673 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:10:21.696 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:10:21.802 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c380101] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:10:21.837 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a3212a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:10:21.843 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2078513234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:10:21.844 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:10:21.847 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:10:21.877 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$485203fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:10:22.277 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:10:22.291 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:10:22.299 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:10:22.300 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:10:22.303 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:10:22.389 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:10:22.389 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2044 ms
2020-03-21 12:10:22.616 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:10:22.617 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:10:22.624 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f82b635
2020-03-21 12:10:22.997 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:10:24.935 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:10:24.935 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:10:24.935 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:10:24.935 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:10:24.936 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:10:25.015 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:10:25.431 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:10:25 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3534483c
2020-03-21 12:10:25.446 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:10:25.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:10:25.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:10:25.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:10:25.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:10:25.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.692 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:10:25.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:10:25.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:10:25.702 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:10:25.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:10:25.704 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:10:25.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:10:25.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.707 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:10:25.707 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:10:25.708 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.708 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.708 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.708 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.708 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:10:25.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.711 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.711 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:10:25.711 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.711 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.712 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:10:25.712 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.712 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:10:25.712 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:10:25.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:10:25.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:10:25.716 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.716 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:10:25.716 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.718 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:10:25.719 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:10:25.755 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:10:25.792 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3534483c: startup date [Sat Mar 21 12:10:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@550861f4
2020-03-21 12:10:25.831 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:10:25.931 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:10:25.932 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:10:26.972 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:10:26.972 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:10:27.784 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:10:27.904 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:10:27.914 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:10:27.915 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:10:27.916 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:10:27.965 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:10:27.967 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:10:27.974 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:10:27.976 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:10:27.976 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:10:27.979 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:10:27.986 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:10:27.997 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3534483c,type=ConfigurationPropertiesRebinder]
2020-03-21 12:10:28.002 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:10:28.008 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:10:28.014 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:10:28.042 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:10:28.620 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:10:28.620 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:10:28.924 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:10:28.924 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:10:29.045 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:10:29.486 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:10:29.486 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:10:29.487 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:10:29.487 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:10:29.487 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:10:29.487 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:10:29.487 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:10:29.605 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:10:29.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:10:29.609 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:10:29.612 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584763829611 with initial instances count: 2
2020-03-21 12:10:29.618 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:10:29.618 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584763829618, current=UP, previous=STARTING]
2020-03-21 12:10:29.620 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:10:29.624 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:10:29.650 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:10:29.676 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:10:29.681 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:10:29.684 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:10:29.699 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:10:29.700 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:10:29.702 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.34 seconds (JVM running for 18.888)
2020-03-21 12:10:30.933 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:10:30.933 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:10:30.934 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:10:30.951 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 12:10:31.495 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:10:36.281 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:10:37.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:10:37.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:10:37.294 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:10:37.303 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3f8fab54[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:10:37.305 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:10:37.314 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:10:37.315 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:10:37.318 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:10:37.318 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:10:37.319 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:10:37.356 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:10:37.356 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:10:37.510 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 12:10:37 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3534483c
2020-03-21 12:10:37.565 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:10:37.706 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 12:10:37.723 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 12:10:37.730 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 12:10:37.736 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 12:10:37.741 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5caea9e7
2020-03-21 12:10:37.799 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:10:37.799 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:10:37.799 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:10:37.799 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:10:37.802 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@136dc782
2020-03-21 12:10:37.813 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:11:02.095 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b9803ee: startup date [Sat Mar 21 12:11:02 CST 2020]; root of context hierarchy
2020-03-21 12:11:02.239 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:11:02.272 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f168bf0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:11:03.073 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:11:03.090 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cc2157a: startup date [Sat Mar 21 12:11:03 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b9803ee
2020-03-21 12:11:04.034 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:11:04.233 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:11:04.423 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:11:04.448 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:11:04.552 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d54ebc12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:11:04.587 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b348cdb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:11:04.593 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2006584687] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:11:04.594 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:11:04.597 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:11:04.631 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f168bf0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:11:05.034 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:11:05.045 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:11:05.053 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:11:05.053 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:11:05.057 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:11:05.146 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:11:05.146 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2056 ms
2020-03-21 12:11:05.376 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:11:05.376 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:11:05.382 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@665de3eb
2020-03-21 12:11:05.754 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:11:07.781 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:11:07.781 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:11:07.781 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:11:07.781 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:11:07.782 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:11:07.858 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:11:08.253 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:11:08 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cc2157a
2020-03-21 12:11:08.269 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:11:08.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:11:08.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:11:08.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:11:08.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:11:08.538 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.538 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.541 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:11:08.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:11:08.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:11:08.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:11:08.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:11:08.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:11:08.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:11:08.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:11:08.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:11:08.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:11:08.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:11:08.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:11:08.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:11:08.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:11:08.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:11:08.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:11:08.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:11:08.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:11:08.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:11:08.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:11:08.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:11:08.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:11:08.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:11:08.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:11:08.599 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:11:08.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cc2157a: startup date [Sat Mar 21 12:11:03 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b9803ee
2020-03-21 12:11:08.674 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:11:08.770 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:11:08.771 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:11:09.857 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:11:09.857 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:11:10.709 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:11:10.843 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:11:10.853 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:11:10.855 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:11:10.855 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:11:10.904 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:11:10.906 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:11:10.914 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:11:10.916 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:11:10.917 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:11:10.920 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:11:10.926 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:11:10.936 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cc2157a,type=ConfigurationPropertiesRebinder]
2020-03-21 12:11:10.942 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:11:10.948 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:11:10.954 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:11:10.982 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:11:11.561 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:11:11.561 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:11:11.874 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:11:11.874 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:11:11.993 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:11:12.438 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:11:12.563 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:11:12.565 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:11:12.567 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:11:12.570 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584763872569 with initial instances count: 2
2020-03-21 12:11:12.575 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:11:12.576 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584763872576, current=UP, previous=STARTING]
2020-03-21 12:11:12.577 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:11:12.581 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:11:12.606 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:11:12.633 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:11:12.638 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:11:12.642 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:11:12.655 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:11:12.656 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:11:12.658 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.522 seconds (JVM running for 18.872)
2020-03-21 12:11:13.970 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:11:13.970 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:11:13.970 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:11:13.993 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-21 12:11:14.768 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:11:21.802 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:11:23.906 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:11:23.906 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:11:23.917 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:11:23.922 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@fe96f2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:11:23.923 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:11:23.931 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:11:23.933 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:11:23.942 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:11:23.943 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:11:23.945 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:11:23.983 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:11:23.983 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:11:24.119 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 12:11:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cc2157a
2020-03-21 12:11:24.171 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:11:24.307 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 12:11:24.322 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 12:11:24.332 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 12:11:24.338 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 12:11:24.344 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3c0493be
2020-03-21 12:11:24.402 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:11:24.402 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:11:24.402 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:11:24.402 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:11:24.405 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@44b41ac8
2020-03-21 12:11:24.415 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:12:18.400 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:12:19.759 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@45078604[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:12:19.762 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:12:19.763 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:12:19.764 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:12:19.770 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:12:19.771 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:12:19.771 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:12:19.771 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:12:19.775 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:12:19.775 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:12:19.775 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:12:19.778 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@44cc89b0
2020-03-21 12:12:19.784 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:12:19.785 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:12:19.785 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:12:19.825 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:12:19.833 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:12:19.834 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:12:34.851 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@51c841f8: startup date [Sat Mar 21 12:12:34 CST 2020]; root of context hierarchy
2020-03-21 12:12:35.001 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:12:35.035 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cdc6b29d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:12:35.860 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:12:35.878 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74e843c7: startup date [Sat Mar 21 12:12:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@51c841f8
2020-03-21 12:12:36.859 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:12:37.048 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:12:37.232 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:12:37.262 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:12:37.367 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b1acafa0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:12:37.401 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8fa6c147] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:12:37.407 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/90136398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:12:37.408 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:12:37.412 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:12:37.458 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cdc6b29d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:12:37.859 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:12:37.870 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:12:37.877 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:12:37.878 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:12:37.882 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:12:37.971 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:12:37.971 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2093 ms
2020-03-21 12:12:38.203 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:12:38.203 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:12:38.210 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@38aaa6d4
2020-03-21 12:12:38.595 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:12:40.618 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:12:40.618 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:12:40.618 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:12:40.618 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:12:40.618 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:12:40.698 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:12:41.088 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:12:41 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74e843c7
2020-03-21 12:12:41.103 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:12:41.374 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:12:41.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:12:41.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:12:41.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:12:41.376 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.376 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.382 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.382 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.382 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:12:41.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:12:41.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:12:41.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:12:41.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:12:41.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:12:41.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:12:41.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:12:41.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:12:41.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:12:41.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:12:41.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:12:41.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:12:41.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:12:41.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:12:41.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:12:41.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:12:41.406 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:12:41.442 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:12:41.480 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74e843c7: startup date [Sat Mar 21 12:12:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@51c841f8
2020-03-21 12:12:41.524 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:12:41.619 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:12:41.620 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:12:42.658 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:12:42.658 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:12:43.549 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:12:43.674 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:12:43.686 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:12:43.687 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:12:43.687 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:12:43.739 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:12:43.740 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:12:43.748 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:12:43.750 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:12:43.750 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:12:43.754 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:12:43.761 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:12:43.772 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=74e843c7,type=ConfigurationPropertiesRebinder]
2020-03-21 12:12:43.779 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:12:43.787 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:12:43.794 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:12:43.826 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:12:44.404 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:12:44.404 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:12:44.721 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:12:44.721 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:12:44.846 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:12:45.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:12:45.399 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:12:45.401 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:12:45.404 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:12:45.407 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584763965406 with initial instances count: 2
2020-03-21 12:12:45.413 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:12:45.413 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584763965413, current=UP, previous=STARTING]
2020-03-21 12:12:45.414 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:12:45.417 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:12:45.441 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:12:45.469 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:12:45.475 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:12:45.478 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:12:45.493 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:12:45.494 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:12:45.496 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.744 seconds (JVM running for 19.154)
2020-03-21 12:12:46.394 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:12:46.394 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:12:46.394 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:12:46.409 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 12:12:46.915 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:13:01.667 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:13:02.659 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:13:02.659 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:13:02.666 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:13:02.676 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6b56ccb9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:13:02.683 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:13:02.694 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:13:02.697 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:13:02.699 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:13:02.699 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:13:02.699 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:13:02.726 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:13:02.727 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:13:02.924 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 12:13:02 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74e843c7
2020-03-21 12:13:02.975 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:13:03.110 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 12:13:03.132 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 12:13:03.139 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 12:13:03.145 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 12:13:03.157 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@35f5f895
2020-03-21 12:13:03.209 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:13:03.210 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:13:03.210 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:13:03.210 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:13:03.214 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@1ddd59f6
2020-03-21 12:13:03.221 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:14:31.136 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d431671: startup date [Sat Mar 21 12:14:31 CST 2020]; root of context hierarchy
2020-03-21 12:14:31.280 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:14:31.311 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$27c59c07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:14:32.130 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:14:32.147 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1734f6b2: startup date [Sat Mar 21 12:14:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d431671
2020-03-21 12:14:33.094 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:14:33.284 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:14:33.464 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:14:33.487 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:14:33.589 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bab990a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:14:33.624 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e9a5aab1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:14:33.628 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/304803460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:14:33.630 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:14:33.633 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:14:33.664 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$27c59c07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:14:34.072 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:14:34.082 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:14:34.090 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:14:34.090 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:14:34.094 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:14:34.180 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:14:34.181 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2035 ms
2020-03-21 12:14:34.412 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:14:34.412 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:14:34.419 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@75e9f4ca
2020-03-21 12:14:34.796 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:14:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:14:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:14:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:14:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:14:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:14:36.839 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:14:37.223 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:14:37 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1734f6b2
2020-03-21 12:14:37.239 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:14:37.481 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:14:37.482 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:14:37.482 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:14:37.482 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:14:37.483 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.483 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.485 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.485 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.485 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.485 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.486 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.486 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.487 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.487 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.487 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.488 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.488 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.488 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:14:37.493 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:14:37.494 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:14:37.495 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:14:37.496 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:14:37.496 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:14:37.496 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:14:37.496 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:14:37.496 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:14:37.496 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:14:37.497 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:14:37.499 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.500 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:14:37.501 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.501 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:14:37.501 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:14:37.502 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.502 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:14:37.505 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.505 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.505 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:14:37.505 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.506 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.506 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.506 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:14:37.506 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:14:37.506 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:14:37.506 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:14:37.507 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:14:37.508 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.508 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:14:37.508 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.508 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.508 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:14:37.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:14:37.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:14:37.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:14:37.551 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:14:37.601 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1734f6b2: startup date [Sat Mar 21 12:14:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d431671
2020-03-21 12:14:37.648 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:14:37.803 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:14:37.805 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:14:38.917 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:14:38.917 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:14:39.730 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:14:39.852 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:14:39.862 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:14:39.863 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:14:39.864 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:14:39.914 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:14:39.916 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:14:39.924 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:14:39.926 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:14:39.926 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:14:39.930 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:14:39.937 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:14:39.947 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1734f6b2,type=ConfigurationPropertiesRebinder]
2020-03-21 12:14:39.953 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:14:39.961 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:14:39.967 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:14:39.998 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:14:40.585 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:14:40.585 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:14:40.892 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:14:40.892 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:14:41.014 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:14:41.450 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:14:41.570 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:14:41.572 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:14:41.575 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:14:41.578 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584764081577 with initial instances count: 2
2020-03-21 12:14:41.584 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:14:41.584 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584764081584, current=UP, previous=STARTING]
2020-03-21 12:14:41.585 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:14:41.588 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:14:41.621 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:14:41.644 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:14:41.649 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:14:41.652 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:14:41.670 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:14:41.671 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:14:41.673 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.494 seconds (JVM running for 18.742)
2020-03-21 12:14:42.394 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:14:42.395 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:14:42.395 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:14:42.408 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
2020-03-21 12:14:42.925 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:14:50.947 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:14:52.007 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:14:52.007 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:14:52.012 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:14:52.027 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2bef7099[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:14:52.037 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:14:52.044 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:14:52.045 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:14:52.052 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:14:52.052 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:14:52.052 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:14:52.083 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:14:52.083 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:14:52.237 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 12:14:52 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1734f6b2
2020-03-21 12:14:52.277 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:14:52.407 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 12:14:52.422 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 12:14:52.426 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 12:14:52.432 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 12:14:52.436 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1ce9b27a
2020-03-21 12:14:52.489 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:14:52.489 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:14:52.489 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:14:52.489 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:14:52.492 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@5f6533ea
2020-03-21 12:14:52.502 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:19:41.452 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:24:41.456 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:30:09.260 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m56s206ms736µs700ns).
2020-03-21 12:32:28.662 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d67c13d: startup date [Sat Mar 21 12:32:28 CST 2020]; root of context hierarchy
2020-03-21 12:32:28.821 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:32:28.854 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5fcfa1af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:32:29.752 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:32:29.768 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5acbe001: startup date [Sat Mar 21 12:32:29 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d67c13d
2020-03-21 12:32:30.707 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:32:30.891 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:32:31.070 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=a6340927-c4c1-330f-a486-d982909ffe23
2020-03-21 12:32:31.095 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:32:31.203 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43b59eb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:32:31.236 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$21afb059] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:32:31.242 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1093916309] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:32:31.244 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:32:31.247 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:32:31.280 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5fcfa1af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:32:31.678 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:32:31.689 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:32:31.696 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:32:31.696 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:32:31.699 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:32:31.788 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:32:31.788 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2020 ms
2020-03-21 12:32:32.011 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:32:32.011 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:32:32.018 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2e06ce02
2020-03-21 12:32:32.404 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:32:34.317 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:32:34.318 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:32:34.318 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:32:34.318 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:32:34.318 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:32:34.401 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:32:34.792 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:32:34 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5acbe001
2020-03-21 12:32:34.806 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:32:35.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:32:35.049 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:32:35.049 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:32:35.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:32:35.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.053 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.053 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.054 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.054 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.054 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.054 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.054 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.055 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:32:35.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:32:35.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:32:35.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:32:35.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:32:35.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:32:35.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:32:35.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:32:35.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:32:35.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:32:35.064 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.064 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:32:35.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:32:35.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:32:35.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.066 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.066 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.066 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.066 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:32:35.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:32:35.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:32:35.071 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.071 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:32:35.075 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:32:35.076 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:32:35.112 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:32:35.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5acbe001: startup date [Sat Mar 21 12:32:29 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d67c13d
2020-03-21 12:32:35.186 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:32:35.279 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:32:35.280 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:32:36.294 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:32:36.294 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:32:37.109 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:32:37.232 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:32:37.243 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:32:37.244 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:32:37.245 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:32:37.295 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:32:37.296 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:32:37.304 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:32:37.305 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:32:37.306 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:32:37.309 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:32:37.317 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:32:37.328 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5acbe001,type=ConfigurationPropertiesRebinder]
2020-03-21 12:32:37.333 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:32:37.340 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:32:37.347 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:32:37.374 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:32:37.955 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:32:37.955 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:32:38.263 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:32:38.263 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:32:38.385 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:32:38.839 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:32:38.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:32:38.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:32:38.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:32:38.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:32:38.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:32:38.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:32:38.960 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:32:38.963 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:32:38.965 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:32:38.968 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584765158967 with initial instances count: 2
2020-03-21 12:32:38.974 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:32:38.974 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584765158974, current=UP, previous=STARTING]
2020-03-21 12:32:38.976 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:32:38.979 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:32:39.010 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:32:39.035 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:32:39.042 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:32:39.047 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:32:39.067 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:32:39.067 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:32:39.070 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.531 seconds (JVM running for 18.978)
2020-03-21 12:32:40.332 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:32:40.332 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:32:40.332 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:32:40.346 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-03-21 12:32:40.893 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:32:45.005 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:32:45.957 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 12:32:45.957 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 12:32:45.963 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 12:32:45.972 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6ec81571[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:32:45.973 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 12:32:45.980 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 12:32:45.982 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 12:32:45.986 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 12:32:45.987 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 12:32:45.987 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 12:32:46.040 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:32:46.040 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:32:46.221 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 12:32:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5acbe001
2020-03-21 12:32:46.271 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:32:46.458 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 12:32:46.472 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 12:32:46.479 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 12:32:46.484 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 12:32:46.488 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@97c6791
2020-03-21 12:32:46.547 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 12:32:46.547 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 12:32:46.547 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 12:32:46.547 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 12:32:46.549 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@108228c3
2020-03-21 12:32:46.565 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:33:03.950 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:33:04.394 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4078a36f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:33:04.438 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:33:04.444 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:37:38.844 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:40:40.272 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2d603f8e: startup date [Sat Mar 21 12:40:40 CST 2020]; root of context hierarchy
2020-03-21 12:40:40.416 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:40:40.447 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6d85127d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:40:41.277 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:40:41.293 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b9814f1: startup date [Sat Mar 21 12:40:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d603f8e
2020-03-21 12:40:42.308 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:40:42.496 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:40:42.672 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 12:40:42.697 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:40:42.800 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$516b0f80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:40:42.834 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2f652127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:40:42.840 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1870080033] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:40:42.841 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:40:42.844 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:40:42.877 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6d85127d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:40:43.340 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:40:43.351 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:40:43.359 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:40:43.360 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:40:43.363 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:40:43.460 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:40:43.460 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2167 ms
2020-03-21 12:40:43.694 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:40:43.695 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:40:43.703 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7cc1d9ad
2020-03-21 12:40:44.082 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:40:46.058 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:40:46.058 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:40:46.058 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:40:46.058 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:40:46.058 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:40:46.141 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:40:46.582 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:40:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b9814f1
2020-03-21 12:40:46.597 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:40:46.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:40:46.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:40:46.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:40:46.856 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:40:46.856 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.856 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:40:46.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:40:46.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:40:46.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:40:46.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:40:46.868 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:40:46.868 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:40:46.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:40:46.870 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:40:46.870 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.870 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:40:46.871 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.871 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:40:46.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:40:46.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:40:46.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:40:46.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:40:46.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:40:46.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:40:46.880 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:40:46.916 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:40:46.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b9814f1: startup date [Sat Mar 21 12:40:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d603f8e
2020-03-21 12:40:46.990 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:40:47.121 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:40:47.123 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:40:48.173 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:40:48.173 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:40:49.002 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:40:49.129 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:40:49.140 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:40:49.142 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:40:49.142 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:40:49.194 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:40:49.195 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:40:49.203 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:40:49.204 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:40:49.205 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:40:49.208 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:40:49.215 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:40:49.224 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3b9814f1,type=ConfigurationPropertiesRebinder]
2020-03-21 12:40:49.230 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:40:49.237 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:40:49.242 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:40:49.278 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:40:49.889 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:40:49.889 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:40:50.222 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:40:50.222 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:40:50.347 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:40:50.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:40:50.899 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:40:50.901 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:40:50.903 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:40:50.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584765650905 with initial instances count: 2
2020-03-21 12:40:50.913 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:40:50.913 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584765650913, current=UP, previous=STARTING]
2020-03-21 12:40:50.914 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:40:50.917 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:40:50.947 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:40:50.971 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:40:50.976 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:40:50.978 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:40:50.995 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:40:50.996 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:40:50.998 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.789 seconds (JVM running for 19.232)
2020-03-21 12:40:51.850 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:40:51.851 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:40:51.851 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:40:51.866 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 12:40:52.358 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:40:57.957 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:00.049 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7794e643[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:41:00.091 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:00.405 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:10.337 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:10.816 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3fda67d8[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:41:10.841 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:10.879 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:46.848 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:47.927 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@78d02728[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:41:47.946 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:41:47.989 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:42:03.500 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:42:04.309 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@fa8417a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:42:04.346 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:42:04.376 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:45:13.908 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@474d5719: startup date [Sat Mar 21 12:45:13 CST 2020]; root of context hierarchy
2020-03-21 12:45:14.055 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:45:14.084 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8124629f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:45:14.859 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 12:45:14.875 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7312382c: startup date [Sat Mar 21 12:45:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@474d5719
2020-03-21 12:45:15.816 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 12:45:16.020 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 12:45:16.208 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 12:45:16.233 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:45:16.337 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$650a5fa2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:45:16.370 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$43047149] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:45:16.377 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1105250030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:45:16.378 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 12:45:16.380 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:45:16.411 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8124629f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 12:45:16.819 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 12:45:16.830 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 12:45:16.837 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 12:45:16.837 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 12:45:16.841 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 12:45:16.929 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 12:45:16.930 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2055 ms
2020-03-21 12:45:17.158 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:45:17.158 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:45:17.165 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d666869
2020-03-21 12:45:17.536 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 12:45:19.496 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 12:45:19.496 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 12:45:19.496 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 12:45:19.496 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 12:45:19.496 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 12:45:19.574 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 12:45:19.977 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 12:45:19 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7312382c
2020-03-21 12:45:19.994 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 12:45:20.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:45:20.249 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 12:45:20.249 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 12:45:20.250 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 12:45:20.250 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.250 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.252 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.252 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.252 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.252 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.252 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.253 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.254 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.254 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.254 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.254 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.254 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.255 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.259 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 12:45:20.259 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.259 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 12:45:20.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 12:45:20.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 12:45:20.262 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 12:45:20.263 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 12:45:20.263 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 12:45:20.264 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.265 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 12:45:20.265 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 12:45:20.265 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.265 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 12:45:20.266 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:45:20.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 12:45:20.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:45:20.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:45:20.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 12:45:20.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:45:20.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 12:45:20.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 12:45:20.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:45:20.312 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 12:45:20.350 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7312382c: startup date [Sat Mar 21 12:45:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@474d5719
2020-03-21 12:45:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 12:45:20.520 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 12:45:20.521 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 12:45:21.531 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 12:45:21.531 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 12:45:22.334 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 12:45:22.457 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 12:45:22.468 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:45:22.469 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 12:45:22.469 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 12:45:22.521 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 12:45:22.523 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 12:45:22.530 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 12:45:22.532 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 12:45:22.532 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 12:45:22.535 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 12:45:22.545 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 12:45:22.555 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7312382c,type=ConfigurationPropertiesRebinder]
2020-03-21 12:45:22.561 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 12:45:22.568 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 12:45:22.575 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 12:45:22.603 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 12:45:23.188 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 12:45:23.188 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 12:45:23.491 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 12:45:23.491 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 12:45:23.612 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:45:24.063 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 12:45:24.063 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 12:45:24.063 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 12:45:24.064 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 12:45:24.064 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 12:45:24.064 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 12:45:24.064 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 12:45:24.192 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 12:45:24.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 12:45:24.196 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 12:45:24.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584765924199 with initial instances count: 2
2020-03-21 12:45:24.206 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 12:45:24.206 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584765924206, current=UP, previous=STARTING]
2020-03-21 12:45:24.208 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 12:45:24.212 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 12:45:24.247 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 12:45:24.273 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 12:45:24.280 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 12:45:24.284 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 12:45:24.301 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 12:45:24.302 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 12:45:24.305 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.443 seconds (JVM running for 18.819)
2020-03-21 12:45:25.552 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 12:45:25.552 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 12:45:25.552 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 12:45:25.569 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 12:45:26.069 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 12:45:28.261 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:45:29.069 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@22677ecb[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 12:45:29.096 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:45:29.207 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 12:50:24.068 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 12:55:24.071 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:00:24.073 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:05:24.075 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:10:24.076 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:15:24.077 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:20:24.079 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:24:55.857 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 13:24:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7312382c
2020-03-21 13:24:55.907 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:24:56.092 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 13:24:56.110 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 13:24:56.115 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 13:24:56.122 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 13:24:56.127 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5441d959
2020-03-21 13:24:56.197 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:24:56.197 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:24:56.197 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:24:56.197 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:24:56.200 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@9f90b7
2020-03-21 13:24:56.211 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:03.258 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 13:25:03.582 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:05.241 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5e13205c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:25:05.251 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:25:05.252 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 13:25:05.253 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:25:05.254 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:25:05.257 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@515ef569
2020-03-21 13:25:05.258 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 13:25:05.259 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:05.266 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@144ab42b[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:25:05.265 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:25:05.272 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:06.348 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:24.081 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:25:28.041 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:29.829 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7088832f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:25:29.843 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:25:29.843 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 13:25:29.843 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:25:29.843 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:25:29.844 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@4af6f564
2020-03-21 13:25:29.845 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 13:25:29.846 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:25:29.846 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:29.855 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2ec62e71[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:25:29.867 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:30.654 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:39.980 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:41.758 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:25:41.758 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:25:41.758 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:25:41.758 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:25:41.758 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@51a2b38d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:25:41.760 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@76a4117c
2020-03-21 13:25:41.768 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:25:41.769 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:25:41.779 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:25:41.781 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:41.784 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:41.794 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:25:41.794 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:25:41.795 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:25:41.797 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:25:41.798 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:25:41.798 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:25:41.807 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:45.002 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:25:48.397 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:30:24.084 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:30:54.694 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:30:55.745 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:30:55.745 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:30:55.745 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:30:55.745 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:30:55.747 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7015bde5
2020-03-21 13:30:55.764 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:09.782 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 13:31:09.855 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:11.338 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:31:11.338 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 13:31:11.338 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:31:11.338 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:31:11.339 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3947e51f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:31:11.339 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@4202e3ef
2020-03-21 13:31:11.339 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 13:31:11.340 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:31:11.362 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:11.373 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4aaa0871[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:31:11.383 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:11.950 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:14.878 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:17.393 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:31:17.393 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:31:17.393 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:31:17.393 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:31:17.394 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5126d94f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:31:17.395 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@39fcfd07
2020-03-21 13:31:17.400 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:31:17.400 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:31:17.400 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:31:17.402 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:31:17.402 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:31:17.402 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:31:17.404 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:31:17.404 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:31:17.404 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:31:17.413 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:17.414 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:17.419 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:25.963 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:35.413 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:36.573 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@11c97dfa[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:31:36.577 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:36.579 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:37.158 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@32a9e421[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 13:31:37.160 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@32a9e421[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 13:31:37.891 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:38.947 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:31:39.872 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:33:07.036 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c8ea2cf: startup date [Sat Mar 21 13:33:07 CST 2020]; root of context hierarchy
2020-03-21 13:33:07.189 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:33:07.223 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6a336669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:33:18.357 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@733a5409: startup date [Sat Mar 21 13:33:18 CST 2020]; root of context hierarchy
2020-03-21 13:33:18.510 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:33:18.540 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$78b5e295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:33:19.320 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 13:34:44.534 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@70932b51: startup date [Sat Mar 21 13:34:44 CST 2020]; root of context hierarchy
2020-03-21 13:34:44.685 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:34:44.715 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$df3f9dbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:34:45.457 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 13:35:53.950 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2f6dc9db: startup date [Sat Mar 21 13:35:53 CST 2020]; root of context hierarchy
2020-03-21 13:35:54.092 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:35:54.122 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$29387d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:35:54.906 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 13:35:54.922 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21f1c641: startup date [Sat Mar 21 13:35:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2f6dc9db
2020-03-21 13:35:55.930 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 13:35:56.129 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 13:35:56.316 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 13:35:56.340 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:35:56.444 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e67984d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:35:56.478 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$c473967b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:35:56.485 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/512658106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:35:56.486 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 13:35:56.490 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:35:56.521 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$29387d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:35:57.003 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 13:35:57.016 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 13:35:57.025 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 13:35:57.025 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 13:35:57.029 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 13:35:57.124 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 13:35:57.125 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2203 ms
2020-03-21 13:35:57.375 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:35:57.376 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:35:57.383 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4f0a97ca
2020-03-21 13:35:57.768 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 13:35:59.681 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 13:35:59.681 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 13:35:59.681 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 13:35:59.681 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 13:35:59.682 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 13:35:59.762 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 13:36:00.240 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 13:36:00 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21f1c641
2020-03-21 13:36:00.255 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:36:00.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 13:36:00.513 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:36:00.513 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:36:00.513 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 13:36:00.514 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.514 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.517 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.518 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.518 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.518 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.518 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.523 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 13:36:00.523 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.523 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 13:36:00.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 13:36:00.525 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 13:36:00.526 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 13:36:00.527 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 13:36:00.527 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 13:36:00.527 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 13:36:00.528 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.529 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 13:36:00.529 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 13:36:00.529 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.529 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.532 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.533 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:36:00.533 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:36:00.533 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.533 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:36:00.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:36:00.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:36:00.535 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 13:36:00.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:36:00.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:36:00.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:36:00.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 13:36:00.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:36:00.578 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 13:36:00.613 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21f1c641: startup date [Sat Mar 21 13:35:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2f6dc9db
2020-03-21 13:36:00.650 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 13:36:00.748 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 13:36:00.750 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 13:36:01.794 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:36:01.794 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:36:02.623 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 13:36:02.744 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 13:36:02.755 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:36:02.756 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:36:02.757 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:36:02.808 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 13:36:02.810 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 13:36:02.817 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 13:36:02.819 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 13:36:02.820 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 13:36:02.823 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 13:36:02.832 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 13:36:02.843 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=21f1c641,type=ConfigurationPropertiesRebinder]
2020-03-21 13:36:02.848 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 13:36:02.856 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 13:36:02.862 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 13:36:02.905 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 13:36:03.506 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 13:36:03.506 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 13:36:03.831 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 13:36:03.831 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 13:36:03.953 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:36:04.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 13:36:04.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 13:36:04.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 13:36:04.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 13:36:04.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 13:36:04.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 13:36:04.389 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 13:36:04.506 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 13:36:04.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 13:36:04.511 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 13:36:04.513 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584768964513 with initial instances count: 2
2020-03-21 13:36:04.519 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 13:36:04.519 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584768964519, current=UP, previous=STARTING]
2020-03-21 13:36:04.520 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 13:36:04.523 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 13:36:04.549 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 13:36:04.575 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 13:36:04.580 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 13:36:04.583 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 13:36:04.599 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 13:36:04.600 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 13:36:04.602 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.658 seconds (JVM running for 19.199)
2020-03-21 13:36:05.722 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 13:36:05.722 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 13:36:05.722 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 13:36:05.739 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 13:36:08.423 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 13:36:13.892 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:36:17.773 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:36:17.773 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:36:17.776 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:36:17.780 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4888d123[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:36:17.781 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:36:17.784 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:36:17.786 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:36:17.789 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:36:17.789 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:36:17.789 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:36:17.820 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:36:17.820 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:36:17.941 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 13:36:17 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21f1c641
2020-03-21 13:36:17.976 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:36:18.122 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 13:36:18.138 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 13:36:18.143 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 13:36:18.147 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 13:36:18.153 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2b3a2d45
2020-03-21 13:36:18.211 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:36:18.211 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:36:18.211 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:36:18.211 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:36:18.214 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7ece8f16
2020-03-21 13:36:18.227 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:37:57.660 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:37:58.387 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@b6518aa[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:37:58.390 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:37:58.390 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:37:58.390 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:37:58.390 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:37:58.392 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:37:58.393 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@2019591a
2020-03-21 13:37:58.393 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:37:58.394 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:37:58.400 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:37:58.400 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:37:58.400 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:37:58.402 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:37:58.403 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:37:58.403 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:37:58.418 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:37:58.425 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:37:58.429 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:38:12.721 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@549b5714: startup date [Sat Mar 21 13:38:12 CST 2020]; root of context hierarchy
2020-03-21 13:38:12.865 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:38:12.895 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dabe404f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:38:13.677 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 13:38:13.692 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1eae134a: startup date [Sat Mar 21 13:38:13 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@549b5714
2020-03-21 13:38:14.620 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 13:38:14.808 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 13:38:14.987 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 13:38:15.012 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:38:15.116 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bea43d52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:38:15.150 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$9c9e4ef9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:38:15.156 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1845634074] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:38:15.157 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 13:38:15.160 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:38:15.203 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dabe404f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:38:15.588 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 13:38:15.598 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 13:38:15.607 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 13:38:15.607 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 13:38:15.611 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 13:38:15.702 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 13:38:15.703 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2011 ms
2020-03-21 13:38:15.924 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:38:15.924 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:38:15.931 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@25bbb9b5
2020-03-21 13:38:16.300 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 13:38:18.266 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 13:38:18.267 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 13:38:18.267 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 13:38:18.267 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 13:38:18.267 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 13:38:18.344 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 13:38:18.735 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 13:38:18 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1eae134a
2020-03-21 13:38:18.750 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:38:19.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:38:19.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 13:38:19.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:38:19.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 13:38:19.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 13:38:19.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 13:38:19.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 13:38:19.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 13:38:19.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 13:38:19.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 13:38:19.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 13:38:19.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 13:38:19.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 13:38:19.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 13:38:19.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 13:38:19.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 13:38:19.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:38:19.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:38:19.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:38:19.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:38:19.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:38:19.035 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 13:38:19.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:38:19.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:38:19.040 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 13:38:19.040 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:38:19.079 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 13:38:19.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1eae134a: startup date [Sat Mar 21 13:38:13 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@549b5714
2020-03-21 13:38:19.151 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 13:38:19.264 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 13:38:19.265 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 13:38:20.276 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:38:20.276 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:38:21.078 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 13:38:21.199 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 13:38:21.209 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:38:21.210 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:38:21.210 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:38:21.262 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 13:38:21.263 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 13:38:21.271 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 13:38:21.273 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 13:38:21.273 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 13:38:21.276 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 13:38:21.284 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 13:38:21.293 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1eae134a,type=ConfigurationPropertiesRebinder]
2020-03-21 13:38:21.298 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 13:38:21.305 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 13:38:21.311 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 13:38:21.337 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 13:38:21.913 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 13:38:21.913 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 13:38:22.236 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 13:38:22.236 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 13:38:22.361 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 13:38:22.798 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 13:38:22.914 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 13:38:22.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 13:38:22.918 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 13:38:22.921 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584769102920 with initial instances count: 2
2020-03-21 13:38:22.926 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 13:38:22.926 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584769102926, current=UP, previous=STARTING]
2020-03-21 13:38:22.928 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 13:38:22.931 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 13:38:22.958 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 13:38:22.983 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 13:38:22.987 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 13:38:22.989 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 13:38:23.005 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 13:38:23.006 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 13:38:23.008 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.383 seconds (JVM running for 18.736)
2020-03-21 13:38:23.789 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 13:38:23.789 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 13:38:23.789 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 13:38:23.805 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 13:38:24.403 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 13:38:55.334 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:38:55.847 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:38:55.848 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:38:55.851 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:38:55.855 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@71211324[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:38:55.864 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:38:55.869 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:38:55.870 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:38:55.875 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:38:55.875 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:38:55.876 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:38:55.909 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:38:55.909 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:38:56.013 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 13:38:56 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1eae134a
2020-03-21 13:38:56.050 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:38:56.187 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 13:38:56.208 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 13:38:56.212 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 13:38:56.217 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 13:38:56.223 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6dc35704
2020-03-21 13:38:56.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:38:56.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:38:56.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:38:56.296 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:38:56.298 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@4847f1
2020-03-21 13:38:56.315 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:01.073 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:02.269 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4bfce7cc[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:39:02.273 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:39:02.273 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:39:02.273 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:39:02.273 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:39:02.280 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:39:02.280 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:39:02.280 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@48258a
2020-03-21 13:39:02.280 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:39:02.287 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:39:02.287 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:39:02.287 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:39:02.292 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:39:02.292 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:39:02.292 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:39:02.308 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:02.313 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:02.317 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:06.563 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:07.329 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:07.525 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:39:49.809 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@458f0ca9: startup date [Sat Mar 21 13:39:49 CST 2020]; root of context hierarchy
2020-03-21 13:39:49.963 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:39:49.994 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3d97a00e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:39:50.780 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 13:39:50.796 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21857315: startup date [Sat Mar 21 13:39:50 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@458f0ca9
2020-03-21 13:39:51.743 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 13:39:51.936 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 13:39:52.115 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 13:39:52.140 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:39:52.243 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$217d9d11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:39:52.277 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ff77aeb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:39:52.283 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1598781078] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:39:52.284 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 13:39:52.287 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:39:52.319 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3d97a00e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:39:52.719 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 13:39:52.729 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 13:39:52.737 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 13:39:52.737 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 13:39:52.741 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 13:39:52.828 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 13:39:52.828 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2032 ms
2020-03-21 13:39:53.053 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:39:53.053 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:39:53.060 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2e06ce02
2020-03-21 13:39:53.431 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 13:39:55.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 13:39:55.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 13:39:55.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 13:39:55.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 13:39:55.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 13:39:55.488 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 13:39:55.870 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 13:39:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21857315
2020-03-21 13:39:55.885 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:39:56.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:39:56.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 13:39:56.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:39:56.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 13:39:56.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 13:39:56.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 13:39:56.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 13:39:56.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 13:39:56.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 13:39:56.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 13:39:56.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 13:39:56.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 13:39:56.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 13:39:56.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 13:39:56.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 13:39:56.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 13:39:56.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:39:56.170 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.170 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.170 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:39:56.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:39:56.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:39:56.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:39:56.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:39:56.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 13:39:56.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:39:56.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:39:56.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:39:56.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 13:39:56.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:39:56.216 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 13:39:56.253 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21857315: startup date [Sat Mar 21 13:39:50 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@458f0ca9
2020-03-21 13:39:56.291 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 13:39:56.388 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 13:39:56.390 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 13:39:57.424 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:39:57.425 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:39:58.234 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 13:39:58.359 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 13:39:58.370 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:39:58.371 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:39:58.372 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:39:58.420 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 13:39:58.422 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 13:39:58.429 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 13:39:58.431 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 13:39:58.431 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 13:39:58.434 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 13:39:58.443 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 13:39:58.452 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=21857315,type=ConfigurationPropertiesRebinder]
2020-03-21 13:39:58.458 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 13:39:58.466 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 13:39:58.472 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 13:39:58.500 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 13:39:59.073 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 13:39:59.073 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 13:39:59.390 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 13:39:59.390 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 13:39:59.513 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 13:39:59.952 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 13:40:00.073 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 13:40:00.075 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 13:40:00.077 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 13:40:00.080 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584769200079 with initial instances count: 2
2020-03-21 13:40:00.086 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 13:40:00.086 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584769200086, current=UP, previous=STARTING]
2020-03-21 13:40:00.087 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 13:40:00.091 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 13:40:00.116 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 13:40:00.145 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 13:40:00.150 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 13:40:00.153 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 13:40:00.168 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 13:40:00.170 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 13:40:00.174 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.368 seconds (JVM running for 18.731)
2020-03-21 13:40:01.467 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 13:40:01.467 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 13:40:01.467 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 13:40:01.486 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-21 13:40:02.017 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 13:40:35.230 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:35.420 [http-nio-9010-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-9010-exec-1] Exception processing template "my-home-page": An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 171, Column = 21) Incomplete structure: "<!--  <a
                    class="navbar-brand footer-navbar-brand"
                    v-on:click="footerVM.goTo('/account_manage')"><i
                    class="fa fa-university" aria-hidden="true"></i> <span>账户管理</span> </a> 
                </nav>
                <nav class="navbar bg-light footer-navbar home-page-nav">

                </nav>
            </div>
            <ul class="list-group">
                <li class="list-group-item fa fa-users"
                    v-show="isLoggedInFlag && accountType == 'agent'"
                    v-on:click="footerVM.goTo('/agent-center')">代理中心<span><i
                        aria-hidden="true" class="fa fa-angle-right"></i></span>
                </li>
                 	<li class="list-group-item"
                        v-on:click="footerVM.goTo('/online-customer')">在线客服<span><i
                            aria-hidden="true" class="fa fa-angle-right"></i></span>
                    </li>
                <li class="list-group-item logout-group-item fa fa-share"  v-show="isLoggedInFlag" v-on:click="logout">退出登录<span>
                    <i aria-hidden="true" class="fa fa-angle-right"></i></span></li>
            </ul>
        </div>
    </div>
</form>
<div th:replace="common/footer::html"></div>
<script type="text/javascript">
    var myHomePageVM = new Vue(
        {
            el: '#myHomePage',
            data: {//初始全局变量
                loginOrRegisterTxt: '',
                onlineStat: '',
                isLoggedInFlag: true,
                userName: '',//若登录成功  获取登录账户3
                fee: '',
                cashDeposit: '',//登录成功  获取 保证金
                cashBalance: '',
                accountType: ''//登录成功获取用户类型
            },
            computed: {},
            created: function () {
            },
            filters: {
                numFilter(value) {
                    let realVal = ''
                    if (value) {
                        // 截取当前数据到小数点后三位
                        let tempVal = parseFloat(value).toFixed(3)
                        realVal = tempVal.substring(0, tempVal.length - 1)
                    } else {
                        realVal = '0.00'
                    }
                    return realVal
                }
            },
            mounted: function () {
                this.loadRegisterSetting();
                this.getUserAccountInfo();
                this.onlineStatMethod();
            },
            methods: {
                goTo: function (url) {
                    window.location.href = url;
                },
                loadRegisterSetting: function () {
                    var that = this;
                    that.$http
                        .get('/masterControl/getRegisterSetting')
                        .then(
                            function (res) {
                                console.log("头部的登录 " , res.body.result)
                                that.loginOrRegisterTxt = res.body.result.registerEnabled ? '登录/注册': '登录';
                            });
                },

                /**
                 * 获取用户账号信息
                 */
                getUserAccountInfo: function () {
                    var that = this;
                    that.$http
                        .get('/userAccount/getUserAccountInfo')
                        .then(
                            function (res) {
                                console.log("获取用户账号信息：",res.body)
                                if (res.body.result != null) {
                                    that.isLoggedInFlag = true;
                                    that.userName = res.body.result.accountName;
                                    that.cashDeposit = res.body.result.rechargeNumber;
                                    that.cashBalance = res.body.result.cashBalance;
                                    that.accountType = res.body.result.accountType;
                                    that.fee = res.body.result.fee;
                                    headerVM.title = that.userName + '(' + (60000 + res.body.result.id) + ')';
                                }
                            });
                },

                onlineStatMethod: function () {
                    var that = this;
                    that.$http.get('/statisticalAnalysis/querySubOnline').then(
                        function (res) {
                            console.log("用户在线 " , res.body)
                            that.onlineStat = res.body.result;
                        }
                    )
                },

                logout: function () {
                    this.$http.post('/logout').then(function (res) {
                        window.location.href = '/my-home-page';
                    });
                }
            }
        });
</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 54 common frames omitted
2020-03-21 13:40:35.450 [http-nio-9010-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)] with root cause
org.attoparser.ParseException: (Line = 171, Column = 21) Incomplete structure: "<!--  <a
                    class="navbar-brand footer-navbar-brand"
                    v-on:click="footerVM.goTo('/account_manage')"><i
                    class="fa fa-university" aria-hidden="true"></i> <span>账户管理</span> </a> 
                </nav>
                <nav class="navbar bg-light footer-navbar home-page-nav">

                </nav>
            </div>
            <ul class="list-group">
                <li class="list-group-item fa fa-users"
                    v-show="isLoggedInFlag && accountType == 'agent'"
                    v-on:click="footerVM.goTo('/agent-center')">代理中心<span><i
                        aria-hidden="true" class="fa fa-angle-right"></i></span>
                </li>
                 	<li class="list-group-item"
                        v-on:click="footerVM.goTo('/online-customer')">在线客服<span><i
                            aria-hidden="true" class="fa fa-angle-right"></i></span>
                    </li>
                <li class="list-group-item logout-group-item fa fa-share"  v-show="isLoggedInFlag" v-on:click="logout">退出登录<span>
                    <i aria-hidden="true" class="fa fa-angle-right"></i></span></li>
            </ul>
        </div>
    </div>
</form>
<div th:replace="common/footer::html"></div>
<script type="text/javascript">
    var myHomePageVM = new Vue(
        {
            el: '#myHomePage',
            data: {//初始全局变量
                loginOrRegisterTxt: '',
                onlineStat: '',
                isLoggedInFlag: true,
                userName: '',//若登录成功  获取登录账户3
                fee: '',
                cashDeposit: '',//登录成功  获取 保证金
                cashBalance: '',
                accountType: ''//登录成功获取用户类型
            },
            computed: {},
            created: function () {
            },
            filters: {
                numFilter(value) {
                    let realVal = ''
                    if (value) {
                        // 截取当前数据到小数点后三位
                        let tempVal = parseFloat(value).toFixed(3)
                        realVal = tempVal.substring(0, tempVal.length - 1)
                    } else {
                        realVal = '0.00'
                    }
                    return realVal
                }
            },
            mounted: function () {
                this.loadRegisterSetting();
                this.getUserAccountInfo();
                this.onlineStatMethod();
            },
            methods: {
                goTo: function (url) {
                    window.location.href = url;
                },
                loadRegisterSetting: function () {
                    var that = this;
                    that.$http
                        .get('/masterControl/getRegisterSetting')
                        .then(
                            function (res) {
                                console.log("头部的登录 " , res.body.result)
                                that.loginOrRegisterTxt = res.body.result.registerEnabled ? '登录/注册': '登录';
                            });
                },

                /**
                 * 获取用户账号信息
                 */
                getUserAccountInfo: function () {
                    var that = this;
                    that.$http
                        .get('/userAccount/getUserAccountInfo')
                        .then(
                            function (res) {
                                console.log("获取用户账号信息：",res.body)
                                if (res.body.result != null) {
                                    that.isLoggedInFlag = true;
                                    that.userName = res.body.result.accountName;
                                    that.cashDeposit = res.body.result.rechargeNumber;
                                    that.cashBalance = res.body.result.cashBalance;
                                    that.accountType = res.body.result.accountType;
                                    that.fee = res.body.result.fee;
                                    headerVM.title = that.userName + '(' + (60000 + res.body.result.id) + ')';
                                }
                            });
                },

                onlineStatMethod: function () {
                    var that = this;
                    that.$http.get('/statisticalAnalysis/querySubOnline').then(
                        function (res) {
                            console.log("用户在线 " , res.body)
                            that.onlineStat = res.body.result;
                        }
                    )
                },

                logout: function () {
                    this.$http.post('/logout').then(function (res) {
                        window.location.href = '/my-home-page';
                    });
                }
            }
        });
</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:40:35.466 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:37.021 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:37.028 [http-nio-9010-exec-4] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-9010-exec-4] Exception processing template "my-home-page": An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 171, Column = 21) Incomplete structure: "<!--  <a
                    class="navbar-brand footer-navbar-brand"
                    v-on:click="footerVM.goTo('/account_manage')"><i
                    class="fa fa-university" aria-hidden="true"></i> <span>账户管理</span> </a> 
                </nav>
                <nav class="navbar bg-light footer-navbar home-page-nav">

                </nav>
            </div>
            <ul class="list-group">
                <li class="list-group-item fa fa-users"
                    v-show="isLoggedInFlag && accountType == 'agent'"
                    v-on:click="footerVM.goTo('/agent-center')">代理中心<span><i
                        aria-hidden="true" class="fa fa-angle-right"></i></span>
                </li>
                 	<li class="list-group-item"
                        v-on:click="footerVM.goTo('/online-customer')">在线客服<span><i
                            aria-hidden="true" class="fa fa-angle-right"></i></span>
                    </li>
                <li class="list-group-item logout-group-item fa fa-share"  v-show="isLoggedInFlag" v-on:click="logout">退出登录<span>
                    <i aria-hidden="true" class="fa fa-angle-right"></i></span></li>
            </ul>
        </div>
    </div>
</form>
<div th:replace="common/footer::html"></div>
<script type="text/javascript">
    var myHomePageVM = new Vue(
        {
            el: '#myHomePage',
            data: {//初始全局变量
                loginOrRegisterTxt: '',
                onlineStat: '',
                isLoggedInFlag: true,
                userName: '',//若登录成功  获取登录账户3
                fee: '',
                cashDeposit: '',//登录成功  获取 保证金
                cashBalance: '',
                accountType: ''//登录成功获取用户类型
            },
            computed: {},
            created: function () {
            },
            filters: {
                numFilter(value) {
                    let realVal = ''
                    if (value) {
                        // 截取当前数据到小数点后三位
                        let tempVal = parseFloat(value).toFixed(3)
                        realVal = tempVal.substring(0, tempVal.length - 1)
                    } else {
                        realVal = '0.00'
                    }
                    return realVal
                }
            },
            mounted: function () {
                this.loadRegisterSetting();
                this.getUserAccountInfo();
                this.onlineStatMethod();
            },
            methods: {
                goTo: function (url) {
                    window.location.href = url;
                },
                loadRegisterSetting: function () {
                    var that = this;
                    that.$http
                        .get('/masterControl/getRegisterSetting')
                        .then(
                            function (res) {
                                console.log("头部的登录 " , res.body.result)
                                that.loginOrRegisterTxt = res.body.result.registerEnabled ? '登录/注册': '登录';
                            });
                },

                /**
                 * 获取用户账号信息
                 */
                getUserAccountInfo: function () {
                    var that = this;
                    that.$http
                        .get('/userAccount/getUserAccountInfo')
                        .then(
                            function (res) {
                                console.log("获取用户账号信息：",res.body)
                                if (res.body.result != null) {
                                    that.isLoggedInFlag = true;
                                    that.userName = res.body.result.accountName;
                                    that.cashDeposit = res.body.result.rechargeNumber;
                                    that.cashBalance = res.body.result.cashBalance;
                                    that.accountType = res.body.result.accountType;
                                    that.fee = res.body.result.fee;
                                    headerVM.title = that.userName + '(' + (60000 + res.body.result.id) + ')';
                                }
                            });
                },

                onlineStatMethod: function () {
                    var that = this;
                    that.$http.get('/statisticalAnalysis/querySubOnline').then(
                        function (res) {
                            console.log("用户在线 " , res.body)
                            that.onlineStat = res.body.result;
                        }
                    )
                },

                logout: function () {
                    this.$http.post('/logout').then(function (res) {
                        window.location.href = '/my-home-page';
                    });
                }
            }
        });
</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 54 common frames omitted
2020-03-21 13:40:37.043 [http-nio-9010-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)] with root cause
org.attoparser.ParseException: (Line = 171, Column = 21) Incomplete structure: "<!--  <a
                    class="navbar-brand footer-navbar-brand"
                    v-on:click="footerVM.goTo('/account_manage')"><i
                    class="fa fa-university" aria-hidden="true"></i> <span>账户管理</span> </a> 
                </nav>
                <nav class="navbar bg-light footer-navbar home-page-nav">

                </nav>
            </div>
            <ul class="list-group">
                <li class="list-group-item fa fa-users"
                    v-show="isLoggedInFlag && accountType == 'agent'"
                    v-on:click="footerVM.goTo('/agent-center')">代理中心<span><i
                        aria-hidden="true" class="fa fa-angle-right"></i></span>
                </li>
                 	<li class="list-group-item"
                        v-on:click="footerVM.goTo('/online-customer')">在线客服<span><i
                            aria-hidden="true" class="fa fa-angle-right"></i></span>
                    </li>
                <li class="list-group-item logout-group-item fa fa-share"  v-show="isLoggedInFlag" v-on:click="logout">退出登录<span>
                    <i aria-hidden="true" class="fa fa-angle-right"></i></span></li>
            </ul>
        </div>
    </div>
</form>
<div th:replace="common/footer::html"></div>
<script type="text/javascript">
    var myHomePageVM = new Vue(
        {
            el: '#myHomePage',
            data: {//初始全局变量
                loginOrRegisterTxt: '',
                onlineStat: '',
                isLoggedInFlag: true,
                userName: '',//若登录成功  获取登录账户3
                fee: '',
                cashDeposit: '',//登录成功  获取 保证金
                cashBalance: '',
                accountType: ''//登录成功获取用户类型
            },
            computed: {},
            created: function () {
            },
            filters: {
                numFilter(value) {
                    let realVal = ''
                    if (value) {
                        // 截取当前数据到小数点后三位
                        let tempVal = parseFloat(value).toFixed(3)
                        realVal = tempVal.substring(0, tempVal.length - 1)
                    } else {
                        realVal = '0.00'
                    }
                    return realVal
                }
            },
            mounted: function () {
                this.loadRegisterSetting();
                this.getUserAccountInfo();
                this.onlineStatMethod();
            },
            methods: {
                goTo: function (url) {
                    window.location.href = url;
                },
                loadRegisterSetting: function () {
                    var that = this;
                    that.$http
                        .get('/masterControl/getRegisterSetting')
                        .then(
                            function (res) {
                                console.log("头部的登录 " , res.body.result)
                                that.loginOrRegisterTxt = res.body.result.registerEnabled ? '登录/注册': '登录';
                            });
                },

                /**
                 * 获取用户账号信息
                 */
                getUserAccountInfo: function () {
                    var that = this;
                    that.$http
                        .get('/userAccount/getUserAccountInfo')
                        .then(
                            function (res) {
                                console.log("获取用户账号信息：",res.body)
                                if (res.body.result != null) {
                                    that.isLoggedInFlag = true;
                                    that.userName = res.body.result.accountName;
                                    that.cashDeposit = res.body.result.rechargeNumber;
                                    that.cashBalance = res.body.result.cashBalance;
                                    that.accountType = res.body.result.accountType;
                                    that.fee = res.body.result.fee;
                                    headerVM.title = that.userName + '(' + (60000 + res.body.result.id) + ')';
                                }
                            });
                },

                onlineStatMethod: function () {
                    var that = this;
                    that.$http.get('/statisticalAnalysis/querySubOnline').then(
                        function (res) {
                            console.log("用户在线 " , res.body)
                            that.onlineStat = res.body.result;
                        }
                    )
                },

                logout: function () {
                    this.$http.post('/logout').then(function (res) {
                        window.location.href = '/my-home-page';
                    });
                }
            }
        });
</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:40:37.052 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:40.106 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:40.469 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@78522287[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:40:40.503 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:40.512 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5399665[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:40:40.526 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:40.642 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:40.658 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 13:40:40 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21857315
2020-03-21 13:40:40.693 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:40:40.831 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 13:40:40.846 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 13:40:40.850 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 13:40:40.856 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 13:40:40.861 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@64688e96
2020-03-21 13:40:40.915 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:40:40.915 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 13:40:40.915 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:40:40.915 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:40:40.919 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@4c43a52b
2020-03-21 13:40:40.919 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 13:40:40.920 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:40:41.851 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:40:41.856 [http-nio-9010-exec-8] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-9010-exec-8] Exception processing template "my-home-page": An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 171, Column = 21) Incomplete structure: "<!--  <a
                    class="navbar-brand footer-navbar-brand"
                    v-on:click="footerVM.goTo('/account_manage')"><i
                    class="fa fa-university" aria-hidden="true"></i> <span>账户管理</span> </a> 
                </nav>
                <nav class="navbar bg-light footer-navbar home-page-nav">

                </nav>
            </div>
            <ul class="list-group">
                <li class="list-group-item fa fa-users"
                    v-show="isLoggedInFlag && accountType == 'agent'"
                    v-on:click="footerVM.goTo('/agent-center')">代理中心<span><i
                        aria-hidden="true" class="fa fa-angle-right"></i></span>
                </li>
                 	<li class="list-group-item"
                        v-on:click="footerVM.goTo('/online-customer')">在线客服<span><i
                            aria-hidden="true" class="fa fa-angle-right"></i></span>
                    </li>
                <li class="list-group-item logout-group-item fa fa-share"  v-show="isLoggedInFlag" v-on:click="logout">退出登录<span>
                    <i aria-hidden="true" class="fa fa-angle-right"></i></span></li>
            </ul>
        </div>
    </div>
</form>
<div th:replace="common/footer::html"></div>
<script type="text/javascript">
    var myHomePageVM = new Vue(
        {
            el: '#myHomePage',
            data: {//初始全局变量
                loginOrRegisterTxt: '',
                onlineStat: '',
                isLoggedInFlag: true,
                userName: '',//若登录成功  获取登录账户3
                fee: '',
                cashDeposit: '',//登录成功  获取 保证金
                cashBalance: '',
                accountType: ''//登录成功获取用户类型
            },
            computed: {},
            created: function () {
            },
            filters: {
                numFilter(value) {
                    let realVal = ''
                    if (value) {
                        // 截取当前数据到小数点后三位
                        let tempVal = parseFloat(value).toFixed(3)
                        realVal = tempVal.substring(0, tempVal.length - 1)
                    } else {
                        realVal = '0.00'
                    }
                    return realVal
                }
            },
            mounted: function () {
                this.loadRegisterSetting();
                this.getUserAccountInfo();
                this.onlineStatMethod();
            },
            methods: {
                goTo: function (url) {
                    window.location.href = url;
                },
                loadRegisterSetting: function () {
                    var that = this;
                    that.$http
                        .get('/masterControl/getRegisterSetting')
                        .then(
                            function (res) {
                                console.log("头部的登录 " , res.body.result)
                                that.loginOrRegisterTxt = res.body.result.registerEnabled ? '登录/注册': '登录';
                            });
                },

                /**
                 * 获取用户账号信息
                 */
                getUserAccountInfo: function () {
                    var that = this;
                    that.$http
                        .get('/userAccount/getUserAccountInfo')
                        .then(
                            function (res) {
                                console.log("获取用户账号信息：",res.body)
                                if (res.body.result != null) {
                                    that.isLoggedInFlag = true;
                                    that.userName = res.body.result.accountName;
                                    that.cashDeposit = res.body.result.rechargeNumber;
                                    that.cashBalance = res.body.result.cashBalance;
                                    that.accountType = res.body.result.accountType;
                                    that.fee = res.body.result.fee;
                                    headerVM.title = that.userName + '(' + (60000 + res.body.result.id) + ')';
                                }
                            });
                },

                onlineStatMethod: function () {
                    var that = this;
                    that.$http.get('/statisticalAnalysis/querySubOnline').then(
                        function (res) {
                            console.log("用户在线 " , res.body)
                            that.onlineStat = res.body.result;
                        }
                    )
                },

                logout: function () {
                    this.$http.post('/logout').then(function (res) {
                        window.location.href = '/my-home-page';
                    });
                }
            }
        });
</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 54 common frames omitted
2020-03-21 13:40:41.870 [http-nio-9010-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]" - line 171, col 21)] with root cause
org.attoparser.ParseException: (Line = 171, Column = 21) Incomplete structure: "<!--  <a
                    class="navbar-brand footer-navbar-brand"
                    v-on:click="footerVM.goTo('/account_manage')"><i
                    class="fa fa-university" aria-hidden="true"></i> <span>账户管理</span> </a> 
                </nav>
                <nav class="navbar bg-light footer-navbar home-page-nav">

                </nav>
            </div>
            <ul class="list-group">
                <li class="list-group-item fa fa-users"
                    v-show="isLoggedInFlag && accountType == 'agent'"
                    v-on:click="footerVM.goTo('/agent-center')">代理中心<span><i
                        aria-hidden="true" class="fa fa-angle-right"></i></span>
                </li>
                 	<li class="list-group-item"
                        v-on:click="footerVM.goTo('/online-customer')">在线客服<span><i
                            aria-hidden="true" class="fa fa-angle-right"></i></span>
                    </li>
                <li class="list-group-item logout-group-item fa fa-share"  v-show="isLoggedInFlag" v-on:click="logout">退出登录<span>
                    <i aria-hidden="true" class="fa fa-angle-right"></i></span></li>
            </ul>
        </div>
    </div>
</form>
<div th:replace="common/footer::html"></div>
<script type="text/javascript">
    var myHomePageVM = new Vue(
        {
            el: '#myHomePage',
            data: {//初始全局变量
                loginOrRegisterTxt: '',
                onlineStat: '',
                isLoggedInFlag: true,
                userName: '',//若登录成功  获取登录账户3
                fee: '',
                cashDeposit: '',//登录成功  获取 保证金
                cashBalance: '',
                accountType: ''//登录成功获取用户类型
            },
            computed: {},
            created: function () {
            },
            filters: {
                numFilter(value) {
                    let realVal = ''
                    if (value) {
                        // 截取当前数据到小数点后三位
                        let tempVal = parseFloat(value).toFixed(3)
                        realVal = tempVal.substring(0, tempVal.length - 1)
                    } else {
                        realVal = '0.00'
                    }
                    return realVal
                }
            },
            mounted: function () {
                this.loadRegisterSetting();
                this.getUserAccountInfo();
                this.onlineStatMethod();
            },
            methods: {
                goTo: function (url) {
                    window.location.href = url;
                },
                loadRegisterSetting: function () {
                    var that = this;
                    that.$http
                        .get('/masterControl/getRegisterSetting')
                        .then(
                            function (res) {
                                console.log("头部的登录 " , res.body.result)
                                that.loginOrRegisterTxt = res.body.result.registerEnabled ? '登录/注册': '登录';
                            });
                },

                /**
                 * 获取用户账号信息
                 */
                getUserAccountInfo: function () {
                    var that = this;
                    that.$http
                        .get('/userAccount/getUserAccountInfo')
                        .then(
                            function (res) {
                                console.log("获取用户账号信息：",res.body)
                                if (res.body.result != null) {
                                    that.isLoggedInFlag = true;
                                    that.userName = res.body.result.accountName;
                                    that.cashDeposit = res.body.result.rechargeNumber;
                                    that.cashBalance = res.body.result.cashBalance;
                                    that.accountType = res.body.result.accountType;
                                    that.fee = res.body.result.fee;
                                    headerVM.title = that.userName + '(' + (60000 + res.body.result.id) + ')';
                                }
                            });
                },

                onlineStatMethod: function () {
                    var that = this;
                    that.$http.get('/statisticalAnalysis/querySubOnline').then(
                        function (res) {
                            console.log("用户在线 " , res.body)
                            that.onlineStat = res.body.result;
                        }
                    )
                },

                logout: function () {
                    this.$http.post('/logout').then(function (res) {
                        window.location.href = '/my-home-page';
                    });
                }
            }
        });
</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 13:40:41.878 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:41:04.035 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2bffe2eb: startup date [Sat Mar 21 13:41:04 CST 2020]; root of context hierarchy
2020-03-21 13:41:04.184 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:41:04.214 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e89e5aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:41:05.011 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 13:41:05.028 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@298c2f55: startup date [Sat Mar 21 13:41:05 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2bffe2eb
2020-03-21 13:41:05.964 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 13:41:06.155 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 13:41:06.339 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 13:41:06.363 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:41:06.464 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$126fe2ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:41:06.498 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$f069f454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:41:06.505 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/979570120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:41:06.506 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 13:41:06.509 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:41:06.556 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e89e5aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:41:06.950 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 13:41:06.960 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 13:41:06.968 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 13:41:06.969 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 13:41:06.972 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 13:41:07.060 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 13:41:07.060 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2032 ms
2020-03-21 13:41:07.292 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:41:07.292 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:41:07.299 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@30dc5620
2020-03-21 13:41:07.669 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 13:41:09.641 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 13:41:09.642 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 13:41:09.642 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 13:41:09.642 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 13:41:09.642 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 13:41:09.726 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 13:41:10.115 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 13:41:10 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@298c2f55
2020-03-21 13:41:10.129 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:41:10.382 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 13:41:10.382 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:41:10.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:41:10.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 13:41:10.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 13:41:10.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 13:41:10.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 13:41:10.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 13:41:10.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 13:41:10.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 13:41:10.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 13:41:10.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 13:41:10.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 13:41:10.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 13:41:10.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 13:41:10.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 13:41:10.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 13:41:10.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 13:41:10.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 13:41:10.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 13:41:10.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 13:41:10.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 13:41:10.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 13:41:10.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 13:41:10.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 13:41:10.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 13:41:10.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 13:41:10.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 13:41:10.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 13:41:10.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 13:41:10.401 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.401 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:41:10.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:41:10.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:41:10.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:41:10.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:41:10.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:41:10.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.407 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.408 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.408 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:41:10.410 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 13:41:10.410 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:41:10.446 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 13:41:10.481 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@298c2f55: startup date [Sat Mar 21 13:41:05 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2bffe2eb
2020-03-21 13:41:10.519 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 13:41:10.633 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 13:41:10.635 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 13:41:11.635 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:41:11.635 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:41:12.486 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 13:41:12.608 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 13:41:12.620 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:41:12.621 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:41:12.621 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:41:12.676 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 13:41:12.677 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 13:41:12.685 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 13:41:12.686 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 13:41:12.687 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 13:41:12.691 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 13:41:12.698 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 13:41:12.708 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=298c2f55,type=ConfigurationPropertiesRebinder]
2020-03-21 13:41:12.713 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 13:41:12.720 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 13:41:12.726 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 13:41:12.753 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 13:41:13.346 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 13:41:13.346 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 13:41:13.661 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 13:41:13.661 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 13:41:13.780 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 13:41:14.213 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 13:41:14.330 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 13:41:14.332 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 13:41:14.335 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 13:41:14.338 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584769274337 with initial instances count: 2
2020-03-21 13:41:14.343 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 13:41:14.344 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584769274344, current=UP, previous=STARTING]
2020-03-21 13:41:14.345 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 13:41:14.349 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 13:41:14.376 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 13:41:14.402 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 13:41:14.408 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 13:41:14.411 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 13:41:14.428 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 13:41:14.429 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 13:41:14.431 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.372 seconds (JVM running for 18.719)
2020-03-21 13:41:15.665 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 13:41:15.665 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 13:41:15.665 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 13:41:15.680 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 13:41:16.250 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 13:41:26.643 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:41:27.227 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:41:27.227 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:41:27.232 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:41:27.235 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7bc4d174[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:41:27.236 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:41:27.239 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:41:27.240 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:41:27.245 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:41:27.245 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:41:27.245 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:41:27.271 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:41:27.271 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:41:27.375 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 13:41:27 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@298c2f55
2020-03-21 13:41:27.415 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:41:27.595 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 13:41:27.612 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 13:41:27.618 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 13:41:27.624 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 13:41:27.629 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@29c47ad2
2020-03-21 13:41:27.692 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:41:27.693 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:41:27.693 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:41:27.693 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:41:27.696 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@64886dab
2020-03-21 13:41:27.707 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:43:30.000 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7496b92d: startup date [Sat Mar 21 13:43:30 CST 2020]; root of context hierarchy
2020-03-21 13:43:30.149 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:43:30.179 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$892dbd91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:43:31.003 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 13:43:31.019 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ceb86e2: startup date [Sat Mar 21 13:43:31 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7496b92d
2020-03-21 13:43:31.955 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 13:43:32.147 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 13:43:32.324 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 13:43:32.349 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:43:32.451 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6d13ba94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:43:32.485 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$4b0dcc3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:43:32.491 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1846168914] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:43:32.492 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 13:43:32.495 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:43:32.538 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$892dbd91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 13:43:32.932 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 13:43:32.942 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 13:43:32.949 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 13:43:32.949 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 13:43:32.952 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 13:43:33.045 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 13:43:33.046 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2026 ms
2020-03-21 13:43:33.274 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:43:33.274 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:43:33.281 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1e641
2020-03-21 13:43:33.649 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 13:43:35.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 13:43:35.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 13:43:35.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 13:43:35.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 13:43:35.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 13:43:35.644 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 13:43:36.049 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 13:43:36 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ceb86e2
2020-03-21 13:43:36.065 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:43:36.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:43:36.330 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 13:43:36.330 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 13:43:36.330 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 13:43:36.331 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.331 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.332 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.332 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 13:43:36.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 13:43:36.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 13:43:36.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 13:43:36.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 13:43:36.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 13:43:36.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 13:43:36.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 13:43:36.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 13:43:36.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 13:43:36.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 13:43:36.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 13:43:36.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 13:43:36.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 13:43:36.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 13:43:36.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 13:43:36.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 13:43:36.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 13:43:36.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 13:43:36.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 13:43:36.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 13:43:36.344 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 13:43:36.344 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 13:43:36.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 13:43:36.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 13:43:36.347 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.347 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 13:43:36.351 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 13:43:36.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 13:43:36.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:43:36.392 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 13:43:36.427 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ceb86e2: startup date [Sat Mar 21 13:43:31 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7496b92d
2020-03-21 13:43:36.466 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 13:43:36.584 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 13:43:36.586 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 13:43:37.634 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 13:43:37.634 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 13:43:38.442 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 13:43:38.564 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 13:43:38.576 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:43:38.577 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 13:43:38.578 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 13:43:38.631 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 13:43:38.633 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 13:43:38.641 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 13:43:38.642 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 13:43:38.643 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 13:43:38.647 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 13:43:38.655 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 13:43:38.665 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3ceb86e2,type=ConfigurationPropertiesRebinder]
2020-03-21 13:43:38.670 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 13:43:38.677 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 13:43:38.684 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 13:43:38.716 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 13:43:39.302 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 13:43:39.302 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 13:43:39.640 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 13:43:39.641 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 13:43:39.763 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 13:43:40.211 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 13:43:40.328 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 13:43:40.330 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 13:43:40.332 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 13:43:40.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584769420335 with initial instances count: 2
2020-03-21 13:43:40.343 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 13:43:40.343 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584769420343, current=UP, previous=STARTING]
2020-03-21 13:43:40.344 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 13:43:40.347 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 13:43:40.372 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 13:43:40.399 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 13:43:40.404 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 13:43:40.407 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 13:43:40.423 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 13:43:40.424 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 13:43:40.426 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.783 seconds (JVM running for 19.061)
2020-03-21 13:43:41.893 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 13:43:41.893 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 13:43:41.893 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 13:43:41.908 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 13:43:42.418 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 13:43:49.716 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:43:56.066 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 13:43:56.066 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 13:43:56.073 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 13:43:56.085 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 13:43:56.085 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@503b5558[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 13:43:56.095 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 13:43:56.096 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 13:43:56.099 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 13:43:56.100 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 13:43:56.101 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 13:43:56.139 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:43:56.139 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:43:56.303 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 13:43:56 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ceb86e2
2020-03-21 13:43:56.374 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 13:43:56.605 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 13:43:56.625 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 13:43:56.632 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 13:43:56.638 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 13:43:56.642 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@39728291
2020-03-21 13:43:56.709 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 13:43:56.709 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 13:43:56.709 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 13:43:56.709 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 13:43:56.714 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@61ee4b4c
2020-03-21 13:43:56.730 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 13:48:40.214 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 13:53:40.216 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 14:06:49.078 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5f43e551: startup date [Sat Mar 21 14:06:49 CST 2020]; root of context hierarchy
2020-03-21 14:06:49.224 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 14:06:49.255 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7b97365e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:06:50.063 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 14:06:50.078 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c684291: startup date [Sat Mar 21 14:06:50 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5f43e551
2020-03-21 14:06:51.065 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 14:06:51.255 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 14:06:51.433 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 14:06:51.457 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 14:06:51.561 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5f7d3361] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:06:51.597 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3d774508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:06:51.604 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1753636402] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:06:51.606 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 14:06:51.609 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:06:51.650 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7b97365e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:06:52.109 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 14:06:52.121 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 14:06:52.130 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 14:06:52.130 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 14:06:52.134 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 14:06:52.231 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 14:06:52.231 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2153 ms
2020-03-21 14:06:52.485 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 14:06:52.485 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 14:06:52.493 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@41425b12
2020-03-21 14:06:52.877 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 14:06:54.807 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 14:06:54.807 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 14:06:54.807 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 14:06:54.807 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 14:06:54.808 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 14:06:54.890 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 14:06:55.324 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 14:06:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c684291
2020-03-21 14:06:55.340 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 14:06:55.609 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 14:06:55.610 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 14:06:55.610 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 14:06:55.611 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 14:06:55.611 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.611 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.612 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.613 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.613 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.613 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.613 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.613 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.614 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.614 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.615 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.615 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.615 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.615 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.619 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 14:06:55.619 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.619 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 14:06:55.619 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 14:06:55.619 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 14:06:55.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 14:06:55.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 14:06:55.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 14:06:55.624 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.624 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 14:06:55.624 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 14:06:55.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 14:06:55.626 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.626 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.626 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.626 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 14:06:55.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.629 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.629 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 14:06:55.629 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 14:06:55.629 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.629 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.630 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.630 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.630 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 14:06:55.630 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 14:06:55.630 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 14:06:55.631 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 14:06:55.632 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.632 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 14:06:55.632 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 14:06:55.632 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.632 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 14:06:55.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 14:06:55.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 14:06:55.673 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 14:06:55.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c684291: startup date [Sat Mar 21 14:06:50 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5f43e551
2020-03-21 14:06:55.746 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 14:06:55.873 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 14:06:55.875 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 14:06:56.880 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 14:06:56.880 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 14:06:57.722 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 14:06:57.851 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 14:06:57.862 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 14:06:57.863 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 14:06:57.864 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 14:06:57.916 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 14:06:57.917 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 14:06:57.925 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 14:06:57.927 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 14:06:57.928 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 14:06:57.930 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 14:06:57.937 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 14:06:57.948 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4c684291,type=ConfigurationPropertiesRebinder]
2020-03-21 14:06:57.953 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 14:06:57.960 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 14:06:57.965 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 14:06:58.002 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 14:06:58.602 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 14:06:58.602 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 14:06:58.950 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 14:06:58.950 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 14:06:59.084 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 14:06:59.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 14:06:59.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 14:06:59.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 14:06:59.535 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 14:06:59.535 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 14:06:59.535 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 14:06:59.535 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 14:06:59.658 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 14:06:59.660 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 14:06:59.662 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 14:06:59.665 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584770819664 with initial instances count: 2
2020-03-21 14:06:59.671 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 14:06:59.672 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584770819672, current=UP, previous=STARTING]
2020-03-21 14:06:59.673 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 14:06:59.676 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 14:06:59.706 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 14:06:59.733 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 14:06:59.740 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 14:06:59.743 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 14:06:59.760 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 14:06:59.761 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 14:06:59.763 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.779 seconds (JVM running for 19.228)
2020-03-21 14:07:00.508 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 14:07:00.511 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 14:07:00.511 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 14:07:00.538 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2020-03-21 14:07:01.055 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 14:07:11.651 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:12.514 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 14:07:12.514 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 14:07:12.518 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 14:07:12.525 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 14:07:12.526 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@37f7aad4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 14:07:12.529 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 14:07:12.530 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 14:07:12.531 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 14:07:12.532 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 14:07:12.532 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 14:07:12.565 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:12.664 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:12.704 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 14:07:12 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c684291
2020-03-21 14:07:12.741 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 14:07:12.878 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 14:07:12.893 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 14:07:12.898 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 14:07:12.905 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 14:07:12.909 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@73226462
2020-03-21 14:07:12.974 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 14:07:12.974 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 14:07:12.974 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 14:07:12.974 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 14:07:12.976 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3a0885b0
2020-03-21 14:07:12.983 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:14.802 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:15.190 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 14:07:15.190 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 14:07:15.190 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 14:07:15.190 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 14:07:15.194 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@17a13948
2020-03-21 14:07:15.213 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:26.760 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 14:07:26.842 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:27.829 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@105a2f3f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 14:07:27.842 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 14:07:27.842 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 14:07:27.842 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 14:07:27.842 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 14:07:27.844 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@7b73f5a9
2020-03-21 14:07:27.845 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 14:07:27.852 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 14:07:27.893 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:27.899 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@68f3d0d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 14:07:27.933 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:27.991 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:39.260 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:41.601 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 14:07:41.607 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:47.964 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:49.234 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2b9e26b0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 14:07:49.244 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 14:07:49.245 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 14:07:49.245 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 14:07:49.245 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 14:07:49.246 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@2a6350b9
2020-03-21 14:07:49.247 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 14:07:49.247 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 14:07:49.247 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 14:07:49.248 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 14:07:49.248 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 14:07:49.248 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 14:07:49.249 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 14:07:49.249 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 14:07:49.249 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 14:07:49.251 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:49.257 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:49.305 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:56.867 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:57.300 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:07:57.432 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:08:03.343 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:08:04.402 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 14:08:04.408 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 14:11:59.537 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 14:16:59.538 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 15:46:41.372 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ec04261: startup date [Sat Mar 21 15:46:41 CST 2020]; root of context hierarchy
2020-03-21 15:46:41.536 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 15:46:41.570 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$86b145cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:46:42.408 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 15:46:42.431 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@636d0714: startup date [Sat Mar 21 15:46:42 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ec04261
2020-03-21 15:46:43.640 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 15:46:43.874 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 15:46:44.060 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=4fa1fb21-f294-3784-86e8-240c0d85185e
2020-03-21 15:46:44.086 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 15:46:44.199 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a9742ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:46:44.238 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$48915475] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:46:44.245 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1590451278] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:46:44.246 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 15:46:44.250 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:46:44.295 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$86b145cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 15:46:44.753 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 15:46:44.765 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 15:46:44.775 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 15:46:44.775 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 15:46:44.778 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 15:46:44.885 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 15:46:44.886 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2454 ms
2020-03-21 15:46:45.154 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 15:46:45.155 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 15:46:45.165 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@173ace31
2020-03-21 15:46:45.596 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 15:46:47.581 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 15:46:47.582 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 15:46:47.582 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 15:46:47.582 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 15:46:47.582 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 15:46:47.675 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 15:46:48.200 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 15:46:48 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@636d0714
2020-03-21 15:46:48.217 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 15:46:48.498 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 15:46:48.499 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 15:46:48.499 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 15:46:48.500 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 15:46:48.500 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.501 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.502 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.502 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.502 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.502 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.503 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.504 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.504 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.504 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.504 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.505 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.505 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 15:46:48.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 15:46:48.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 15:46:48.509 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 15:46:48.510 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 15:46:48.511 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 15:46:48.512 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 15:46:48.514 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.514 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 15:46:48.515 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 15:46:48.515 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.515 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 15:46:48.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.516 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.517 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.517 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 15:46:48.517 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.517 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.517 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.518 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 15:46:48.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 15:46:48.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.519 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.520 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 15:46:48.520 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.520 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 15:46:48.520 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 15:46:48.520 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 15:46:48.521 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.521 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 15:46:48.521 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.521 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 15:46:48.521 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.521 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.522 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.522 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 15:46:48.522 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.522 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 15:46:48.524 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 15:46:48.560 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 15:46:48.620 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@636d0714: startup date [Sat Mar 21 15:46:42 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ec04261
2020-03-21 15:46:48.663 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 15:46:48.798 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 15:46:48.800 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 15:46:49.902 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 15:46:49.902 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 15:46:50.801 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 15:46:50.949 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 15:46:50.962 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 15:46:50.963 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 15:46:50.963 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 15:46:51.021 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 15:46:51.023 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 15:46:51.030 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 15:46:51.032 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 15:46:51.033 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 15:46:51.035 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 15:46:51.044 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 15:46:51.054 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=636d0714,type=ConfigurationPropertiesRebinder]
2020-03-21 15:46:51.059 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 15:46:51.066 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 15:46:51.073 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 15:46:51.114 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 15:46:51.809 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 15:46:51.809 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 15:46:52.384 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 15:46:52.385 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 15:46:52.561 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 15:46:53.046 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 15:46:53.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 15:46:53.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 15:46:53.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 15:46:53.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 15:46:53.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 15:46:53.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 15:46:53.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 15:46:53.239 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 15:46:53.240 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 15:46:53.245 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584776813242 with initial instances count: 2
2020-03-21 15:46:53.251 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 15:46:53.252 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584776813251, current=UP, previous=STARTING]
2020-03-21 15:46:53.253 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 15:46:53.256 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 15:46:53.294 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 15:46:53.323 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 15:46:53.329 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 15:46:53.333 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 15:46:53.357 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 15:46:53.358 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 15:46:53.360 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 13.25 seconds (JVM running for 20.813)
2020-03-21 15:46:54.844 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 15:46:54.844 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 15:46:54.846 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 15:46:54.864 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-21 15:46:55.382 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 15:51:53.051 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 15:56:53.053 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:00:31.688 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m36s184ms611µs500ns).
2020-03-21 16:09:04.064 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3607e941: startup date [Sat Mar 21 16:09:04 CST 2020]; root of context hierarchy
2020-03-21 16:09:04.208 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:09:04.238 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9728ecd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:09:04.943 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 16:09:04.964 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48647dae: startup date [Sat Mar 21 16:09:04 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3607e941
2020-03-21 16:09:06.101 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 16:09:06.322 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 16:09:06.505 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=4fa1fb21-f294-3784-86e8-240c0d85185e
2020-03-21 16:09:06.535 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:09:06.645 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7b0ee9d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:09:06.681 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$5908fb7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:09:06.687 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/554757511] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:09:06.688 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 16:09:06.691 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:09:06.738 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9728ecd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:09:07.155 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 16:09:07.165 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 16:09:07.172 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 16:09:07.173 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 16:09:07.176 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 16:09:07.265 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 16:09:07.265 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2302 ms
2020-03-21 16:09:07.506 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 16:09:07.506 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 16:09:07.512 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2acbc2ed
2020-03-21 16:09:07.947 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 16:09:09.794 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 16:09:09.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 16:09:09.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 16:09:09.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 16:09:09.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 16:09:09.880 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 16:09:10.370 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 16:09:10 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48647dae
2020-03-21 16:09:10.393 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:09:10.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 16:09:10.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 16:09:10.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 16:09:10.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 16:09:10.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 16:09:10.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 16:09:10.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 16:09:10.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 16:09:10.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 16:09:10.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 16:09:10.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 16:09:10.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 16:09:10.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 16:09:10.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 16:09:10.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 16:09:10.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 16:09:10.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 16:09:10.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:09:10.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:09:10.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:09:10.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:09:10.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 16:09:10.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:09:10.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:09:10.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:09:10.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 16:09:10.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 16:09:10.721 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 16:09:10.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48647dae: startup date [Sat Mar 21 16:09:04 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3607e941
2020-03-21 16:09:10.796 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 16:09:10.967 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 16:09:10.970 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 16:09:13.865 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'enableRedisKeyspaceNotificationsInitializer' defined in org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
2020-03-21 16:09:13.866 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 16:09:10 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48647dae
2020-03-21 16:09:13.869 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-21 16:09:14.990 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 16:09:14.993 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 16:09:15.005 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 16:09:15.013 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'enableRedisKeyspaceNotificationsInitializer' defined in org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:966)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:934)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:786)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:300)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$EnableRedisKeyspaceNotificationsInitializer.afterPropertiesSet(RedisHttpSessionConfiguration.java:284)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1767)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 20 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:233)
	at io.lettuce.core.RedisClient.connectStandalone(RedisClient.java:253)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:202)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:56)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:959)
	... 26 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	... 11 common frames omitted
2020-03-21 16:11:13.424 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@23f67ddf: startup date [Sat Mar 21 16:11:13 CST 2020]; root of context hierarchy
2020-03-21 16:11:13.567 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:11:13.598 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ccd8cbcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:11:14.364 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 16:11:14.381 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e5b1082: startup date [Sat Mar 21 16:11:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@23f67ddf
2020-03-21 16:11:15.349 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 16:11:15.552 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 16:11:15.738 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=4fa1fb21-f294-3784-86e8-240c0d85185e
2020-03-21 16:11:15.769 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:11:15.879 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0bec8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:11:15.913 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8eb8da75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:11:15.919 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1424448375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:11:15.920 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 16:11:15.923 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:11:15.965 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ccd8cbcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:11:16.361 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 16:11:16.373 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 16:11:16.380 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 16:11:16.380 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 16:11:16.384 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 16:11:16.472 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 16:11:16.472 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2091 ms
2020-03-21 16:11:16.699 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 16:11:16.699 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 16:11:16.706 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@27a585d2
2020-03-21 16:11:17.082 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 16:11:18.886 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 16:11:18.886 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 16:11:18.886 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 16:11:18.886 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 16:11:18.887 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 16:11:18.967 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 16:11:19.365 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 16:11:19 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e5b1082
2020-03-21 16:11:19.381 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:11:19.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 16:11:19.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 16:11:19.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 16:11:19.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 16:11:19.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 16:11:19.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 16:11:19.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 16:11:19.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 16:11:19.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 16:11:19.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 16:11:19.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 16:11:19.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 16:11:19.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 16:11:19.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 16:11:19.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 16:11:19.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:11:19.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:11:19.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:11:19.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 16:11:19.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:11:19.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:11:19.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:11:19.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 16:11:19.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 16:11:19.709 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 16:11:19.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e5b1082: startup date [Sat Mar 21 16:11:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@23f67ddf
2020-03-21 16:11:19.782 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 16:11:19.905 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 16:11:19.906 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 16:11:20.816 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 16:11:20.816 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 16:11:21.696 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 16:11:21.815 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 16:11:21.825 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 16:11:21.826 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 16:11:21.827 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 16:11:21.884 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 16:11:21.886 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 16:11:21.893 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 16:11:21.895 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 16:11:21.896 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 16:11:21.900 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 16:11:21.908 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 16:11:21.919 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e5b1082,type=ConfigurationPropertiesRebinder]
2020-03-21 16:11:21.925 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 16:11:21.933 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 16:11:21.940 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 16:11:21.967 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 16:11:22.491 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 16:11:22.491 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 16:11:22.806 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 16:11:22.806 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 16:11:22.929 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 16:11:23.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 16:11:23.451 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 16:11:23.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 16:11:23.455 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 16:11:23.458 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584778283457 with initial instances count: 1
2020-03-21 16:11:23.464 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 16:11:23.465 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584778283465, current=UP, previous=STARTING]
2020-03-21 16:11:23.467 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 16:11:23.470 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 16:11:23.497 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 16:11:23.523 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 16:11:23.529 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 16:11:23.531 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 16:11:23.550 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 16:11:23.551 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 16:11:23.554 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.017 seconds (JVM running for 18.182)
2020-03-21 16:11:24.659 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 16:11:24.660 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 16:11:24.661 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 16:11:24.687 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2020-03-21 16:11:25.221 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 16:13:04.689 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 16:13:04 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e5b1082
2020-03-21 16:13:04.731 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:13:04.903 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 16:13:04.920 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 16:13:04.925 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 16:13:04.931 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 16:13:04.935 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2c6b9d58
2020-03-21 16:13:04.997 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 16:13:04.997 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 16:13:04.997 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 16:13:04.997 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 16:13:05.001 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@6f58e1a3
2020-03-21 16:13:05.016 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:06.020 [http-nio-9010-exec-9] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 16:13:06.059 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:26.684 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 16:13:26.781 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:27.611 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 16:13:27.613 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 16:13:27.615 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 16:13:27.615 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 16:13:27.618 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@54866142
2020-03-21 16:13:27.619 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 16:13:27.627 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 16:13:27.628 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2a6f2efe[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:13:27.695 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:27.702 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@39328b9f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:13:27.742 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:27.759 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:32.031 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:32.771 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@550fe825[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:13:32.784 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 16:13:32.784 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 16:13:32.784 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 16:13:32.784 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 16:13:32.787 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@6e12217a
2020-03-21 16:13:32.789 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 16:13:32.790 [http-nio-9010-exec-10] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 16:13:32.859 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:32.867 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@11864718[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:13:32.883 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:32.909 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:33.928 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:35.028 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 16:13:35.042 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:36.572 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:36.956 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6c380f70[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:13:36.959 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 16:13:36.959 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 16:13:36.960 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 16:13:36.960 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 16:13:36.961 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@309edd22
2020-03-21 16:13:36.962 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 16:13:36.962 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 16:13:36.970 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 16:13:36.990 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 16:13:36.991 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 16:13:36.993 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 16:13:36.996 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 16:13:36.996 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 16:13:36.996 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 16:13:37.000 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:37.031 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:37.043 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:41.693 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:42.130 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:42.248 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:45.890 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:49.338 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:49.730 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3d96df76[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:13:49.748 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:49.809 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@6c7d2d65[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:13:49.811 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@6c7d2d65[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:13:49.811 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:49.938 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:53.724 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:13:54.359 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:16:23.337 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:21:23.339 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:25:19.371 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:20.658 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 16:25:20.666 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:21.646 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:22.093 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@133ce55b[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:25:22.099 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 16:25:22.099 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 16:25:22.099 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 16:25:22.099 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 16:25:22.101 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@49e0ddec
2020-03-21 16:25:22.102 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 16:25:22.102 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 16:25:22.102 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 16:25:22.110 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 16:25:22.111 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 16:25:22.111 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 16:25:22.117 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 16:25:22.117 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 16:25:22.117 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 16:25:22.133 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:22.143 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:22.160 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:25.297 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m29s942ms940µs500ns).
2020-03-21 16:25:25.438 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:25.862 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@67c85a8c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:25:25.877 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:25.911 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@182a60c0[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:25.916 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@182a60c0[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:25.938 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:26.022 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:29.218 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7f3e07b3[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:29.221 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7f3e07b3[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:29.309 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:38.374 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:38.865 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1ef113a6[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:25:38.891 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:38.914 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@df23fb0[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:38.916 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@df23fb0[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:38.944 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:38.998 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:48.574 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:49.013 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@33356335[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:25:49.027 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:49.062 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7bb4716d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:49.065 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7bb4716d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:25:49.088 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:25:49.151 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:27:23.283 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:32:23.284 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:37:23.285 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:42:23.287 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:44:27.357 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7f64f4f4: startup date [Sat Mar 21 16:44:27 CST 2020]; root of context hierarchy
2020-03-21 16:44:27.503 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:44:27.534 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7b20db83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:44:28.258 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 16:44:28.274 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@397297a4: startup date [Sat Mar 21 16:44:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7f64f4f4
2020-03-21 16:44:29.351 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 16:44:29.541 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 16:44:29.719 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 16:44:29.744 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:44:29.848 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5f06d886] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:44:29.905 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3d00ea2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:44:29.911 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1777122768] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:44:29.913 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 16:44:29.916 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:44:29.961 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7b20db83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 16:44:30.406 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 16:44:30.417 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 16:44:30.425 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 16:44:30.425 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 16:44:30.429 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 16:44:30.520 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 16:44:30.520 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2246 ms
2020-03-21 16:44:30.759 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 16:44:30.759 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 16:44:30.767 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@41425b12
2020-03-21 16:44:31.152 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 16:44:32.946 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 16:44:32.947 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 16:44:32.947 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 16:44:32.947 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 16:44:32.947 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 16:44:33.024 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 16:44:33.451 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 16:44:33 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@397297a4
2020-03-21 16:44:33.466 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 16:44:33.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 16:44:33.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 16:44:33.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 16:44:33.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 16:44:33.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.731 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.732 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.732 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 16:44:33.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 16:44:33.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 16:44:33.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 16:44:33.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 16:44:33.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 16:44:33.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 16:44:33.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 16:44:33.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 16:44:33.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 16:44:33.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 16:44:33.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 16:44:33.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 16:44:33.744 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:44:33.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:44:33.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:44:33.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:44:33.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 16:44:33.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 16:44:33.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 16:44:33.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 16:44:33.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 16:44:33.790 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 16:44:33.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@397297a4: startup date [Sat Mar 21 16:44:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7f64f4f4
2020-03-21 16:44:33.861 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 16:44:33.982 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 16:44:33.983 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 16:44:35.069 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 16:44:35.069 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 16:44:35.903 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 16:44:36.034 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 16:44:36.047 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 16:44:36.048 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 16:44:36.049 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 16:44:36.103 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 16:44:36.105 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 16:44:36.113 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 16:44:36.115 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 16:44:36.115 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 16:44:36.118 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 16:44:36.127 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 16:44:36.138 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=397297a4,type=ConfigurationPropertiesRebinder]
2020-03-21 16:44:36.143 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 16:44:36.150 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 16:44:36.157 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 16:44:36.192 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 16:44:36.743 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 16:44:36.743 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 16:44:37.068 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 16:44:37.069 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 16:44:37.192 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 16:44:37.585 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 16:44:37.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 16:44:37.709 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 16:44:37.711 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 16:44:37.714 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584780277713 with initial instances count: 2
2020-03-21 16:44:37.721 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 16:44:37.721 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584780277721, current=UP, previous=STARTING]
2020-03-21 16:44:37.722 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 16:44:37.725 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 16:44:37.752 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 16:44:37.778 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 16:44:37.783 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 16:44:37.786 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 16:44:37.802 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 16:44:37.803 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 16:44:37.805 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.468 seconds (JVM running for 18.765)
2020-03-21 16:44:38.901 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 16:44:38.902 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 16:44:38.902 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 16:44:38.918 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 16:44:39.445 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 16:44:46.340 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:44:48.442 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6db1349a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:44:48.518 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@72a635b8[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:44:48.522 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@72a635b8[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:44:48.550 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:44:48.550 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:44:48.762 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:49:36.212 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:49:36.945 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@71c257b9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 16:49:36.993 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@2674316f[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:49:36.994 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@2674316f[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 16:49:37.005 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:49:37.014 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:49:37.078 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 16:49:37.586 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:54:37.589 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 16:59:37.590 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:01:09.751 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@29bc776: startup date [Sat Mar 21 17:01:09 CST 2020]; root of context hierarchy
2020-03-21 17:01:09.890 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:01:09.923 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aed66255] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:01:10.655 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 17:01:10.673 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15db332: startup date [Sat Mar 21 17:01:10 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29bc776
2020-03-21 17:01:11.642 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 17:01:11.840 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 17:01:12.021 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 17:01:12.047 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:01:12.152 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92bc5f58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:01:12.201 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$70b670ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:01:12.206 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/544204796] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:01:12.207 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 17:01:12.209 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:01:12.242 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aed66255] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:01:12.653 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 17:01:12.665 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 17:01:12.673 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 17:01:12.673 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 17:01:12.676 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 17:01:12.769 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 17:01:12.770 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2097 ms
2020-03-21 17:01:13.009 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 17:01:13.009 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 17:01:13.016 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@57a8e17b
2020-03-21 17:01:13.429 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 17:01:15.327 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 17:01:15.328 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 17:01:15.328 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 17:01:15.328 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 17:01:15.328 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 17:01:15.409 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 17:01:15.896 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 17:01:15 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15db332
2020-03-21 17:01:15.909 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:01:16.224 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 17:01:16.224 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 17:01:16.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 17:01:16.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 17:01:16.226 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.226 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.227 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.227 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.229 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.229 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.234 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 17:01:16.235 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 17:01:16.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 17:01:16.237 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 17:01:16.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 17:01:16.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 17:01:16.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 17:01:16.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 17:01:16.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 17:01:16.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 17:01:16.240 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 17:01:16.240 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.241 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 17:01:16.241 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.241 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 17:01:16.242 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.242 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.242 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.242 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.243 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:01:16.243 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.243 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.243 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.244 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.244 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.245 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:01:16.246 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:01:16.246 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 17:01:16.247 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.247 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:01:16.247 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:01:16.248 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.250 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 17:01:16.251 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 17:01:16.288 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 17:01:16.331 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15db332: startup date [Sat Mar 21 17:01:10 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29bc776
2020-03-21 17:01:16.368 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 17:01:16.467 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 17:01:16.468 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 17:01:17.384 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 17:01:17.384 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 17:01:18.247 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 17:01:18.389 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 17:01:18.401 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 17:01:18.402 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 17:01:18.403 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 17:01:18.459 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 17:01:18.460 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 17:01:18.468 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 17:01:18.469 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 17:01:18.470 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 17:01:18.473 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 17:01:18.479 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 17:01:18.512 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=15db332,type=ConfigurationPropertiesRebinder]
2020-03-21 17:01:18.517 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 17:01:18.524 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 17:01:18.529 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 17:01:18.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 17:01:19.192 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 17:01:19.192 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 17:01:19.508 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 17:01:19.508 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 17:01:19.628 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:01:20.015 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 17:01:20.015 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 17:01:20.016 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 17:01:20.016 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 17:01:20.016 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 17:01:20.016 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 17:01:20.016 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 17:01:20.132 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 17:01:20.134 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 17:01:20.136 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 17:01:20.139 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584781280138 with initial instances count: 2
2020-03-21 17:01:20.145 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 17:01:20.145 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584781280145, current=UP, previous=STARTING]
2020-03-21 17:01:20.146 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 17:01:20.150 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 17:01:20.175 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 17:01:20.204 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 17:01:20.208 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 17:01:20.211 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 17:01:20.226 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 17:01:20.227 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 17:01:20.229 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.52 seconds (JVM running for 18.972)
2020-03-21 17:01:21.384 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 17:01:21.384 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 17:01:21.385 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 17:01:21.402 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 17:01:21.910 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 17:01:31.295 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:01:32.857 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@50293652[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:01:32.917 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@77c7d3fe[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:01:32.919 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@77c7d3fe[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:01:32.961 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:01:33.012 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:01:33.092 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:03:03.724 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@798bae8: startup date [Sat Mar 21 17:03:03 CST 2020]; root of context hierarchy
2020-03-21 17:03:03.868 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:03:03.900 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f7f32821] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:03:04.615 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 17:03:04.633 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30c1ccac: startup date [Sat Mar 21 17:03:04 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@798bae8
2020-03-21 17:03:05.685 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 17:03:05.887 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 17:03:06.056 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 17:03:06.080 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:03:06.186 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbd92524] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:03:06.218 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b9d336cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:03:06.225 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2004680108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:03:06.226 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 17:03:06.229 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:03:06.268 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f7f32821] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:03:06.687 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 17:03:06.699 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 17:03:06.708 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 17:03:06.708 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 17:03:06.711 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 17:03:06.805 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 17:03:06.805 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2172 ms
2020-03-21 17:03:07.039 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 17:03:07.039 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 17:03:07.046 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@181a6a84
2020-03-21 17:03:07.442 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 17:03:09.213 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 17:03:09.214 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 17:03:09.214 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 17:03:09.214 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 17:03:09.214 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 17:03:09.296 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 17:03:09.789 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 17:03:09 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30c1ccac
2020-03-21 17:03:09.804 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:03:10.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 17:03:10.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 17:03:10.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 17:03:10.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 17:03:10.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.100 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.100 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.100 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.101 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.101 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.101 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.107 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 17:03:10.107 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.107 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 17:03:10.107 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 17:03:10.107 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 17:03:10.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 17:03:10.109 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 17:03:10.110 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 17:03:10.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 17:03:10.112 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 17:03:10.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 17:03:10.113 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:03:10.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.115 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:03:10.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:03:10.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:03:10.116 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:03:10.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:03:10.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 17:03:10.118 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 17:03:10.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 17:03:10.157 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 17:03:10.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30c1ccac: startup date [Sat Mar 21 17:03:04 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@798bae8
2020-03-21 17:03:10.232 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 17:03:10.323 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 17:03:10.324 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 17:03:11.395 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 17:03:11.395 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 17:03:12.256 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 17:03:12.386 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 17:03:12.397 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 17:03:12.398 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 17:03:12.398 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 17:03:12.453 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 17:03:12.455 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 17:03:12.463 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 17:03:12.465 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 17:03:12.466 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 17:03:12.469 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 17:03:12.476 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 17:03:12.486 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=30c1ccac,type=ConfigurationPropertiesRebinder]
2020-03-21 17:03:12.491 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 17:03:12.496 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 17:03:12.503 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 17:03:12.530 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 17:03:13.057 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 17:03:13.057 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 17:03:13.376 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 17:03:13.376 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 17:03:13.502 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 17:03:13.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 17:03:14.014 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 17:03:14.017 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 17:03:14.020 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 17:03:14.023 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584781394022 with initial instances count: 2
2020-03-21 17:03:14.029 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 17:03:14.029 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584781394029, current=UP, previous=STARTING]
2020-03-21 17:03:14.030 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 17:03:14.034 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 17:03:14.060 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 17:03:14.091 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 17:03:14.097 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 17:03:14.101 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 17:03:14.116 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 17:03:14.117 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 17:03:14.120 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.296 seconds (JVM running for 18.587)
2020-03-21 17:03:15.241 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 17:03:15.241 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 17:03:15.242 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 17:03:15.260 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-21 17:03:15.763 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 17:03:32.039 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:03:32.814 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5c90d566[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:03:32.877 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@6d3792da[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:03:32.880 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@6d3792da[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:03:32.932 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:03:32.983 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:03:33.071 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:06.425 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:07.205 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@59274ef8[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:04:07.252 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@63ca2848[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:04:07.254 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@63ca2848[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:04:07.276 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:07.280 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:07.358 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:12.661 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@81d0e00[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:04:12.663 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@81d0e00[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:04:12.881 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:16.971 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@25321e67[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-03
  orderQrUserList=<null>
]]
2020-03-21 17:04:16.973 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@25321e67[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-03
  orderQrUserList=<null>
]]
2020-03-21 17:04:17.059 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:17.828 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@63316c4e[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-03
  orderQrUserList=<null>
]]
2020-03-21 17:04:17.830 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@63316c4e[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-03
  orderQrUserList=<null>
]]
2020-03-21 17:04:17.918 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:18.022 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@5ca0f3ff[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-03
  orderQrUserList=<null>
]]
2020-03-21 17:04:18.024 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@5ca0f3ff[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-03
  orderQrUserList=<null>
]]
2020-03-21 17:04:18.118 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:39.954 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:40.526 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7844ac4c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:04:40.570 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@5e7e39db[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:04:40.573 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@5e7e39db[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:04:40.587 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:40.589 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:40.668 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:53.938 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:54.666 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:04:57.867 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:02.077 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:02.748 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7ff699f5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:05:02.762 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 17:05:02.763 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 17:05:02.763 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 17:05:02.766 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 17:05:02.768 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 17:05:02.769 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 17:05:02.776 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 17:05:02.776 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 17:05:02.777 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 17:05:02.804 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:02.825 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:02.999 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 17:05:02 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30c1ccac
2020-03-21 17:05:03.032 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:05:03.178 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 17:05:03.195 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 17:05:03.199 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 17:05:03.209 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 17:05:03.213 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@185fa49b
2020-03-21 17:05:03.274 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:05:03.274 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 17:05:03.274 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:05:03.274 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:05:03.276 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@6afcf4b3
2020-03-21 17:05:03.283 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:05.264 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:05.936 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:08.958 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:12.225 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:12.807 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 17:05:12.815 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:14.335 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:14.830 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:05:14.830 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 17:05:14.830 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:05:14.830 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:05:14.834 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3870772d
2020-03-21 17:05:14.834 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@67e36488[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:05:14.842 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 17:05:14.843 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 17:05:14.843 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 17:05:14.846 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 17:05:14.847 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 17:05:14.847 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 17:05:14.850 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 17:05:14.851 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 17:05:14.851 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 17:05:14.875 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:14.882 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:14.910 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:26.023 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:26.525 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@712ac819[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:05:26.583 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:26.602 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:37.061 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:37.599 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@b0b175d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:05:37.675 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:05:37.678 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:09.381 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:09.800 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@26dd5b71[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:08:09.861 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:09.862 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:11.763 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:12.245 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@68e3bfd7[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:08:12.292 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:12.302 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:08:13.896 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:12:11.323 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@585744f4: startup date [Sat Mar 21 17:12:11 CST 2020]; root of context hierarchy
2020-03-21 17:12:11.464 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:12:11.496 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed72014] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:12:12.212 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 17:12:12.228 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52e74911: startup date [Sat Mar 21 17:12:12 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@585744f4
2020-03-21 17:12:13.212 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 17:12:13.409 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 17:12:13.591 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 17:12:13.616 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:12:13.724 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2bd1d17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:12:13.765 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d0b72ebe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:12:13.770 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/594194461] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:12:13.771 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 17:12:13.774 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:12:13.806 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed72014] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 17:12:14.190 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 17:12:14.201 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 17:12:14.209 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 17:12:14.209 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 17:12:14.212 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 17:12:14.302 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 17:12:14.303 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2075 ms
2020-03-21 17:12:14.532 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 17:12:14.532 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 17:12:14.539 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3084d8a4
2020-03-21 17:12:14.922 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 17:12:16.923 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 17:12:16.924 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 17:12:16.925 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 17:12:16.925 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 17:12:16.926 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 17:12:17.069 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 17:12:17.602 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 17:12:17 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52e74911
2020-03-21 17:12:17.619 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:12:17.969 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 17:12:17.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 17:12:17.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 17:12:17.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 17:12:17.971 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.971 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.974 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.975 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.975 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.975 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.975 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.975 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.976 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.980 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 17:12:17.980 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.980 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 17:12:17.980 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 17:12:17.980 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 17:12:17.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 17:12:17.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 17:12:17.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 17:12:17.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 17:12:17.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 17:12:17.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 17:12:17.988 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.988 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.988 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.988 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:12:17.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:12:17.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:12:17.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 17:12:17.992 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 17:12:17.992 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 17:12:17.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.994 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 17:12:17.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 17:12:17.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 17:12:18.037 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 17:12:18.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52e74911: startup date [Sat Mar 21 17:12:12 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@585744f4
2020-03-21 17:12:18.134 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 17:12:18.241 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 17:12:18.242 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 17:12:19.175 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 17:12:19.175 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 17:12:20.035 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 17:12:20.193 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 17:12:20.205 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 17:12:20.206 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 17:12:20.207 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 17:12:20.258 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 17:12:20.259 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 17:12:20.266 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 17:12:20.267 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 17:12:20.268 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 17:12:20.271 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 17:12:20.278 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 17:12:20.288 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=52e74911,type=ConfigurationPropertiesRebinder]
2020-03-21 17:12:20.295 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 17:12:20.302 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 17:12:20.307 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 17:12:20.335 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 17:12:20.920 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 17:12:20.921 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 17:12:21.265 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 17:12:21.265 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 17:12:21.390 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:12:21.781 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 17:12:21.781 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 17:12:21.781 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 17:12:21.781 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 17:12:21.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 17:12:21.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 17:12:21.782 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 17:12:21.904 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 17:12:21.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 17:12:21.908 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 17:12:21.911 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584781941910 with initial instances count: 2
2020-03-21 17:12:21.917 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 17:12:21.918 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584781941918, current=UP, previous=STARTING]
2020-03-21 17:12:21.918 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 17:12:21.921 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 17:12:21.948 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 17:12:21.975 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 17:12:21.981 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 17:12:21.984 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 17:12:22.001 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 17:12:22.002 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 17:12:22.003 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.702 seconds (JVM running for 18.918)
2020-03-21 17:12:22.096 [http-nio-9010-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 17:12:22.096 [http-nio-9010-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 17:12:22.115 [http-nio-9010-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-21 17:12:22.172 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:12:22.767 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@73dd069[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:12:22.789 [http-nio-9010-exec-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 17:12:23.320 [http-nio-9010-exec-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 17:12:23.370 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7e9ce2aa[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:12:23.403 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:12:23.419 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:17:21.784 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:22:21.786 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:29:41.701 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m18s253ms863µs900ns).
2020-03-21 17:33:10.039 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:38:10.041 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:43:10.043 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:48:10.044 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:51:17.036 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 17:51:17 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52e74911
2020-03-21 17:51:17.079 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 17:51:17.225 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 17:51:17.251 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 17:51:17.256 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 17:51:17.265 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 17:51:17.269 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@142fc9f9
2020-03-21 17:51:17.329 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:51:17.329 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 17:51:17.329 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:51:17.329 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:51:17.332 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7760d917
2020-03-21 17:51:17.341 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:25.741 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 17:51:25.810 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:26.128 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@8bc79ab[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:51:26.136 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:51:26.136 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 17:51:26.136 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:51:26.136 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:51:26.138 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@2358a826
2020-03-21 17:51:26.139 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 17:51:26.149 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 17:51:26.162 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@750bf783[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:51:26.192 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:26.202 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4e440044[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:51:26.218 [http-nio-9010-exec-4] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 17:51:26.231 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@1fdb8b53[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:51:26.246 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:26.250 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:26.270 [http-nio-9010-exec-5] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 17:51:26.296 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:26.303 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:36.655 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:36.972 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2f3c1ce6[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:51:36.974 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:51:36.974 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 17:51:36.975 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:51:36.975 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:51:36.977 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@1df321f3
2020-03-21 17:51:36.983 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 17:51:36.983 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 17:51:36.990 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 17:51:37.007 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 17:51:37.007 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 17:51:37.008 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:37.009 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 17:51:37.015 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 17:51:37.015 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 17:51:37.016 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 17:51:37.027 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@217b083e[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:51:37.049 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:37.050 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:59.309 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:51:59.730 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:02.453 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:02.724 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2707e713[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:52:02.780 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@2953f30[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:52:02.783 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4dea94a1[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:52:02.785 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@2953f30[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 17:52:02.807 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:02.874 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:02.923 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:06.629 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:06.971 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:18.972 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:19.339 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:19.401 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:23.379 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:23.762 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:27.250 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:27.687 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:34.688 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:34.988 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@64ed259d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:52:35.038 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@24f80197[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:52:35.047 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:35.050 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:52.639 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:52.910 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@496d2e1[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:52:52.965 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@e238491[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:52:52.973 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:52.974 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:59.608 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:52:59.999 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@59da1ab7[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:53:00.012 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:53:00.012 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 17:53:00.012 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:53:00.012 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:53:00.015 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@20b627c4
2020-03-21 17:53:00.016 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 17:53:00.016 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 17:53:00.057 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7bbe47cf[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:53:00.070 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:00.077 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@46ee41f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:53:00.086 [http-nio-9010-exec-3] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 17:53:00.100 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:00.106 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@3b06f3bb[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:53:00.112 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:00.121 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:00.140 [http-nio-9010-exec-10] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 17:53:00.163 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:10.046 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 17:53:14.312 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:14.604 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2a99c75c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:53:14.608 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 17:53:14.608 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 17:53:14.608 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 17:53:14.608 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 17:53:14.610 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@3cc812cd
2020-03-21 17:53:14.611 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 17:53:14.614 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 17:53:14.662 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4b2fd307[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:53:14.671 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:14.676 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3f03bf4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 17:53:14.683 [http-nio-9010-exec-5] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 17:53:14.697 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:14.697 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:14.729 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@791b96de[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 17:53:14.737 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:53:14.745 [http-nio-9010-exec-6] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 17:53:14.754 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 17:58:10.048 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:03:10.050 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:08:10.051 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:13:10.052 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:18:21.441 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:23:21.442 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:28:21.443 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:33:21.444 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:38:21.446 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:43:21.448 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:48:21.449 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 18:54:17.302 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m24s20ms96µs800ns).
2020-03-21 18:55:15.469 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:00:15.470 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:05:15.471 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:10:15.474 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:12:41.273 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@44a87e6a: startup date [Sat Mar 21 19:12:41 CST 2020]; root of context hierarchy
2020-03-21 19:12:41.421 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:12:41.452 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4ea4d573] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:12:42.075 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 19:12:42.095 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390d520: startup date [Sat Mar 21 19:12:42 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44a87e6a
2020-03-21 19:12:43.166 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 19:12:43.369 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 19:12:43.545 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 19:12:43.573 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:12:43.695 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$328ad276] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:12:43.727 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1084e41d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:12:43.732 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1455601706] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:12:43.733 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 19:12:43.736 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:12:43.765 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4ea4d573] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:12:44.228 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 19:12:44.240 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 19:12:44.248 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 19:12:44.248 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 19:12:44.253 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 19:12:44.353 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 19:12:44.354 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2259 ms
2020-03-21 19:12:44.601 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:12:44.601 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:12:44.610 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2039f01e
2020-03-21 19:12:45.027 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 19:12:46.632 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 19:12:46.632 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 19:12:46.632 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 19:12:46.632 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 19:12:46.632 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 19:12:46.716 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 19:12:47.215 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 19:12:47 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390d520
2020-03-21 19:12:47.230 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:12:47.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:12:47.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:12:47.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 19:12:47.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 19:12:47.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 19:12:47.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 19:12:47.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 19:12:47.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 19:12:47.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 19:12:47.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 19:12:47.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 19:12:47.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 19:12:47.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:12:47.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:12:47.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:12:47.573 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:12:47.573 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 19:12:47.574 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:12:47.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.576 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.576 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 19:12:47.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:12:47.615 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 19:12:47.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390d520: startup date [Sat Mar 21 19:12:42 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44a87e6a
2020-03-21 19:12:47.692 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 19:12:47.792 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 19:12:47.793 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 19:12:48.615 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:12:48.615 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:12:49.481 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 19:12:49.643 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 19:12:49.654 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:12:49.656 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:12:49.657 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:12:49.707 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 19:12:49.708 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 19:12:49.716 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 19:12:49.718 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 19:12:49.719 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 19:12:49.723 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 19:12:49.730 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 19:12:49.741 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=390d520,type=ConfigurationPropertiesRebinder]
2020-03-21 19:12:49.748 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 19:12:49.756 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 19:12:49.761 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 19:12:49.894 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 19:12:50.475 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 19:12:50.476 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 19:12:50.808 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 19:12:50.808 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 19:12:50.940 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 19:12:51.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 19:12:51.389 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 19:12:51.391 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 19:12:51.393 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 19:12:51.396 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584789171395 with initial instances count: 2
2020-03-21 19:12:51.402 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 19:12:51.403 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584789171403, current=UP, previous=STARTING]
2020-03-21 19:12:51.404 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 19:12:51.407 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 19:12:51.438 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 19:12:51.462 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 19:12:51.468 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 19:12:51.470 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 19:12:51.487 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 19:12:51.488 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 19:12:51.490 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.088 seconds (JVM running for 18.571)
2020-03-21 19:12:52.211 [RMI TCP Connection(1)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 19:12:52.211 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 19:12:52.212 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 19:12:52.229 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-21 19:12:52.734 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 19:17:51.262 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:22:51.263 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:34:00.989 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11m38s128ms722µs).
2020-03-21 19:34:10.378 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 19:34:10 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390d520
2020-03-21 19:34:10.421 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:34:10.588 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 19:34:10.602 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 19:34:10.609 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 19:34:10.614 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 19:34:10.618 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@19db4a4c
2020-03-21 19:34:10.697 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:34:10.697 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 19:34:10.697 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:34:10.697 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:34:10.700 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@4669945f
2020-03-21 19:34:10.724 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:34:19.700 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 19:34:19.778 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:34:20.317 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:34:20.317 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 19:34:20.317 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:34:20.317 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:34:20.321 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@737277d5
2020-03-21 19:34:20.322 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 19:34:20.332 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 19:34:20.334 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2c3a5be4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:34:20.405 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4ba3216c[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:34:20.428 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:34:20.434 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5c069fc2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:34:20.462 [http-nio-9010-exec-1] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 19:34:20.467 [http-nio-9010-exec-10] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2857603a[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:34:20.477 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:34:20.478 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:34:20.493 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:34:20.509 [http-nio-9010-exec-2] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyTodayReceiveOrderSituation] in DispatcherServlet with name 'dispatcherServlet'
2020-03-21 19:34:20.532 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:14.593 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5e69eed5: startup date [Sat Mar 21 19:37:14 CST 2020]; root of context hierarchy
2020-03-21 19:37:14.734 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:37:14.765 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d869f7d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:37:15.378 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 19:37:15.395 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78e1ca6d: startup date [Sat Mar 21 19:37:15 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5e69eed5
2020-03-21 19:37:16.402 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 19:37:16.597 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 19:37:16.779 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 19:37:16.804 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:37:16.924 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc4ff4db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:37:16.954 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$9a4a0682] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:37:16.960 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/639459230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:37:16.961 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 19:37:16.963 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:37:16.994 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d869f7d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:37:17.381 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 19:37:17.392 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 19:37:17.400 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 19:37:17.400 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 19:37:17.404 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 19:37:17.493 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 19:37:17.493 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2098 ms
2020-03-21 19:37:17.721 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:37:17.721 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:37:17.729 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e3d69f9
2020-03-21 19:37:18.113 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 19:37:19.720 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 19:37:19.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 19:37:19.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 19:37:19.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 19:37:19.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 19:37:19.798 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 19:37:20.297 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 19:37:20 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78e1ca6d
2020-03-21 19:37:20.310 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:37:20.621 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:37:20.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:37:20.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 19:37:20.622 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 19:37:20.623 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.623 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.624 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.625 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.626 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.627 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 19:37:20.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 19:37:20.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 19:37:20.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 19:37:20.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 19:37:20.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 19:37:20.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 19:37:20.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 19:37:20.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 19:37:20.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 19:37:20.640 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.640 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:37:20.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:37:20.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:37:20.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:37:20.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:37:20.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 19:37:20.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:37:20.685 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 19:37:20.722 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78e1ca6d: startup date [Sat Mar 21 19:37:15 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5e69eed5
2020-03-21 19:37:20.759 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 19:37:20.851 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 19:37:20.852 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 19:37:21.709 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:37:21.709 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:37:22.574 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 19:37:22.731 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 19:37:22.741 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:37:22.742 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:37:22.743 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:37:22.791 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 19:37:22.792 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 19:37:22.799 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 19:37:22.801 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 19:37:22.801 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 19:37:22.804 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 19:37:22.811 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 19:37:22.819 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=78e1ca6d,type=ConfigurationPropertiesRebinder]
2020-03-21 19:37:22.824 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 19:37:22.831 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 19:37:22.837 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 19:37:22.862 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 19:37:23.323 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 19:37:23.324 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 19:37:23.626 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 19:37:23.626 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 19:37:23.749 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:37:24.061 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 19:37:24.061 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 19:37:24.062 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 19:37:24.062 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 19:37:24.062 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 19:37:24.062 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 19:37:24.062 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 19:37:24.180 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 19:37:24.183 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 19:37:24.185 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 19:37:24.187 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584790644187 with initial instances count: 3
2020-03-21 19:37:24.193 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 19:37:24.193 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584790644193, current=UP, previous=STARTING]
2020-03-21 19:37:24.194 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 19:37:24.196 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 19:37:24.222 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 19:37:24.260 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 19:37:24.270 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 19:37:24.273 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 19:37:24.290 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 19:37:24.294 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 19:37:24.297 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.58 seconds (JVM running for 17.743)
2020-03-21 19:37:24.986 [RMI TCP Connection(2)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 19:37:24.986 [RMI TCP Connection(1)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 19:37:24.986 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 19:37:25.004 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-21 19:37:25.504 [RMI TCP Connection(1)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 19:37:43.119 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:43.865 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5e9586df[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:37:43.984 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@39e90d41[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:37:44.019 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:44.037 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@202caac[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:37:44.040 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:44.058 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:37:44.063 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:37:44.069 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@624e8702[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:37:44.085 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:44.095 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取进入接单情况
2020-03-21 19:37:44.149 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:44.165 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:37:44.192 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:37:44.279 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 19:37:44 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78e1ca6d
2020-03-21 19:37:44.367 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:37:44.530 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 19:37:44.544 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 19:37:44.548 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 19:37:44.553 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 19:37:44.557 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3d366270
2020-03-21 19:37:44.612 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:37:44.612 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 19:37:44.612 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:37:44.612 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:37:44.615 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@41b85cf
2020-03-21 19:37:44.615 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 19:37:44.618 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 19:41:17.236 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:18.468 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@34df9665[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:41:18.472 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:41:18.472 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 19:41:18.473 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:41:18.473 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:41:18.477 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@361d7dce
2020-03-21 19:41:18.480 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 19:41:18.481 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 19:41:18.522 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@59a1aba6[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:41:18.527 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:18.535 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@395819d0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:41:18.543 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:41:18.560 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:18.566 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@773c6806[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:41:18.567 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:18.574 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:18.588 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:41:18.601 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:41.437 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:41.957 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5e03ae1c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:41:41.961 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:41:41.962 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 19:41:41.963 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:41:41.964 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:41:41.969 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@1f87ff95
2020-03-21 19:41:41.974 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 19:41:41.974 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 19:41:41.974 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 19:41:41.977 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 19:41:41.988 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:41.990 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 19:41:41.991 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 19:41:41.993 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 19:41:41.993 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 19:41:41.993 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 19:41:42.008 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:42.017 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4babe826[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:41:42.026 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:46.717 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:47.337 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:49.285 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:49.706 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@56766253[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:41:49.752 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@4ba5fb31[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:41:49.754 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@4ba5fb31[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:41:49.760 [http-nio-9010-exec-10] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7c9e90e9[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:41:49.768 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:49.819 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:49.842 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:55.057 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:41:55.637 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:05.458 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:11.440 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:11.919 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3ef8e1d5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:42:11.968 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7dd9c21a[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:42:11.971 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7dd9c21a[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:42:11.977 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@144cfa75[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:42:11.986 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:11.987 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:12.057 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:16.800 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:17.276 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7dbc52c0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:42:17.328 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7f187add[
  id=1
  userId=admin
  userName=4343434qqq
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:42:17.338 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:17.347 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:24.064 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:42:32.159 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 【当前添加银行卡用户：admin】
2020-03-21 19:42:32.163 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:42:32.247 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:43:18.202 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 【当前添加银行卡用户：admin】
2020-03-21 19:43:18.208 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:43:18.280 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:44:27.425 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:44:28.016 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:20.124 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:20.573 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3a2ff7ce[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:45:20.575 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:45:20.576 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 19:45:20.576 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:45:20.576 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:45:20.578 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@6e9e300a
2020-03-21 19:45:20.580 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 19:45:20.581 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 19:45:20.581 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 19:45:20.585 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 19:45:20.586 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 19:45:20.586 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 19:45:20.589 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 19:45:20.589 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 19:45:20.590 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 19:45:20.593 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:20.597 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:20.630 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7c7ed8f3[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:45:20.637 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:36.958 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:38.272 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5298d4b5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:45:38.324 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@10fb0710[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:45:38.329 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:45:38.329 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:01.803 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:02.543 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@69b749b4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:47:02.562 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:47:02.562 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 19:47:02.562 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:47:02.562 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:47:02.563 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@4631ef5e
2020-03-21 19:47:02.563 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 19:47:02.563 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 19:47:02.594 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2abb16c5[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:47:02.598 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:02.605 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6c23cc9e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:47:02.613 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:47:02.625 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:02.635 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@32bf485[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:47:02.642 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:02.643 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:02.650 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:47:02.656 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:47:24.066 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:52:24.067 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:55:52.937 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@505860f1: startup date [Sat Mar 21 19:55:52 CST 2020]; root of context hierarchy
2020-03-21 19:55:53.090 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:55:53.123 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$88159ac6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:55:53.755 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 19:55:53.773 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d208e79: startup date [Sat Mar 21 19:55:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@505860f1
2020-03-21 19:55:54.744 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 19:55:54.940 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 19:55:55.120 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 19:55:55.147 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:55:55.250 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6bfb97c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:55:55.293 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$49f5a970] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:55:55.299 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1707272001] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:55:55.300 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 19:55:55.303 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:55:55.333 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$88159ac6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:55:55.736 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 19:55:55.746 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 19:55:55.755 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 19:55:55.755 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 19:55:55.758 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 19:55:55.852 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 19:55:55.852 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2079 ms
2020-03-21 19:55:56.085 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:55:56.085 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:55:56.092 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7d7be7f3
2020-03-21 19:55:56.468 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 19:55:58.167 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 19:55:58.168 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 19:55:58.168 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 19:55:58.168 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 19:55:58.168 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 19:55:58.247 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 19:55:58.738 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 19:55:58 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d208e79
2020-03-21 19:55:58.752 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:55:59.073 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:55:59.073 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:55:59.074 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 19:55:59.074 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 19:55:59.074 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.075 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.077 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.077 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.077 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.077 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.077 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.077 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.079 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.079 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.079 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.079 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.079 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.079 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.083 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 19:55:59.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 19:55:59.085 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 19:55:59.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 19:55:59.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 19:55:59.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 19:55:59.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 19:55:59.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 19:55:59.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 19:55:59.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 19:55:59.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 19:55:59.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.090 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.091 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.092 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:55:59.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:55:59.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:55:59.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 19:55:59.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:55:59.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 19:55:59.100 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:55:59.138 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 19:55:59.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d208e79: startup date [Sat Mar 21 19:55:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@505860f1
2020-03-21 19:55:59.213 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 19:55:59.307 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 19:55:59.308 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 19:56:00.074 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:56:00.075 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:56:00.922 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 19:56:01.063 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 19:56:01.076 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:56:01.078 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:56:01.078 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:56:01.154 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 19:56:01.155 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 19:56:01.164 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 19:56:01.165 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 19:56:01.166 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 19:56:01.169 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 19:56:01.176 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 19:56:01.187 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3d208e79,type=ConfigurationPropertiesRebinder]
2020-03-21 19:56:01.194 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 19:56:01.202 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 19:56:01.208 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 19:56:01.235 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 19:56:01.701 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 19:56:01.701 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 19:56:02.006 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 19:56:02.006 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 19:56:02.126 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 19:56:02.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 19:56:02.570 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 19:56:02.572 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 19:56:02.574 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 19:56:02.577 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584791762576 with initial instances count: 1
2020-03-21 19:56:02.583 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 19:56:02.584 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584791762584, current=UP, previous=STARTING]
2020-03-21 19:56:02.585 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 19:56:02.588 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 19:56:02.615 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 19:56:02.641 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 19:56:02.646 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 19:56:02.649 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 19:56:02.664 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 19:56:02.665 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 19:56:02.667 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.657 seconds (JVM running for 17.943)
2020-03-21 19:56:03.802 [RMI TCP Connection(6)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 19:56:03.802 [RMI TCP Connection(7)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 19:56:03.802 [RMI TCP Connection(7)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 19:56:03.818 [RMI TCP Connection(7)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 19:56:04.319 [RMI TCP Connection(6)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 19:56:31.234 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:31.885 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@735f7317[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:56:32.003 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@58960eba[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:56:32.053 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:32.070 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1acc7acb[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:56:32.103 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7ae38584[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:56:32.179 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:56:32.186 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:32.192 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:32.215 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:32.248 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:56:32.273 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:32.300 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 19:56:32 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d208e79
2020-03-21 19:56:32.406 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:56:32.551 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 19:56:32.566 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 19:56:32.570 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 19:56:32.575 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 19:56:32.580 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1569ca70
2020-03-21 19:56:32.636 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:56:32.636 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 19:56:32.636 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:56:32.636 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:56:32.639 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@10da431
2020-03-21 19:56:32.639 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 19:56:32.642 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 19:56:56.570 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 19:56:56.571 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 19:56:56.621 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取累计接单情况
2020-03-21 19:56:56.639 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:56:58.026 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:56:58.039 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:57:02.727 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 19:57:02.744 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:57:09.233 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:57:09.245 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:57:48.856 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fad5316: startup date [Sat Mar 21 19:57:48 CST 2020]; root of context hierarchy
2020-03-21 19:57:49.000 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:57:49.033 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dfd74b2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:57:49.643 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 19:57:49.660 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15003df6: startup date [Sat Mar 21 19:57:49 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fad5316
2020-03-21 19:57:50.630 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 19:57:50.827 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 19:57:51.011 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 19:57:51.036 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:57:51.142 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c3bd482e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:57:51.184 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a1b759d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:57:51.189 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1518565311] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:57:51.190 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 19:57:51.193 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:57:51.224 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dfd74b2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 19:57:51.612 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 19:57:51.624 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 19:57:51.632 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 19:57:51.633 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 19:57:51.636 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 19:57:51.725 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 19:57:51.725 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2065 ms
2020-03-21 19:57:51.953 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:57:51.953 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:57:51.961 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@450cc549
2020-03-21 19:57:52.345 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 19:57:53.995 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 19:57:53.995 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 19:57:53.995 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 19:57:53.995 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 19:57:53.995 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 19:57:54.088 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 19:57:54.572 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 19:57:54 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15003df6
2020-03-21 19:57:54.586 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:57:54.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:57:54.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 19:57:54.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 19:57:54.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 19:57:54.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.920 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 19:57:54.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 19:57:54.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 19:57:54.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 19:57:54.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 19:57:54.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 19:57:54.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 19:57:54.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 19:57:54.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 19:57:54.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 19:57:54.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 19:57:54.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 19:57:54.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 19:57:54.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 19:57:54.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 19:57:54.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 19:57:54.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 19:57:54.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:57:54.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 19:57:54.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 19:57:54.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 19:57:54.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 19:57:54.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:57:54.978 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 19:57:55.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15003df6: startup date [Sat Mar 21 19:57:49 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fad5316
2020-03-21 19:57:55.053 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 19:57:55.145 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 19:57:55.147 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 19:57:55.904 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 19:57:55.904 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 19:57:56.745 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 19:57:56.905 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 19:57:56.917 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:57:56.918 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 19:57:56.918 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 19:57:56.971 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 19:57:56.972 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 19:57:56.979 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 19:57:56.980 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 19:57:56.981 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 19:57:56.986 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 19:57:56.992 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 19:57:57.002 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=15003df6,type=ConfigurationPropertiesRebinder]
2020-03-21 19:57:57.008 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 19:57:57.014 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 19:57:57.021 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 19:57:57.048 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 19:57:57.505 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 19:57:57.505 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 19:57:57.810 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 19:57:57.810 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 19:57:57.931 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 19:57:58.274 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 19:57:58.274 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 19:57:58.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 19:57:58.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 19:57:58.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 19:57:58.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 19:57:58.275 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 19:57:58.397 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 19:57:58.399 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 19:57:58.401 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 19:57:58.404 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584791878403 with initial instances count: 2
2020-03-21 19:57:58.411 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 19:57:58.411 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584791878411, current=UP, previous=STARTING]
2020-03-21 19:57:58.412 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 19:57:58.415 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 19:57:58.446 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 19:57:58.470 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 19:57:58.475 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 19:57:58.478 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 19:57:58.494 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 19:57:58.495 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 19:57:58.497 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.581 seconds (JVM running for 17.746)
2020-03-21 19:57:59.151 [RMI TCP Connection(1)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 19:57:59.151 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 19:57:59.152 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 19:57:59.174 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-21 19:57:59.692 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 19:58:04.926 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:05.533 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@487f59b[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:58:05.659 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@5bda31ae[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:58:05.698 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:05.723 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@48f5e7f0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:58:05.734 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:05.739 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:58:05.758 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@28da18bf[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:58:05.784 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:05.785 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:05.813 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:58:05.843 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:05.857 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 19:58:05 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15003df6
2020-03-21 19:58:05.917 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 19:58:06.075 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 19:58:06.090 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 19:58:06.094 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 19:58:06.098 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 19:58:06.102 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7008d2b0
2020-03-21 19:58:06.163 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:58:06.163 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 19:58:06.163 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:58:06.163 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:58:06.165 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@5f44ef3c
2020-03-21 19:58:06.166 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 19:58:06.168 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 19:58:24.524 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 19:58:24.542 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:58:29.561 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 19:58:29.578 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:05.406 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:05.979 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@52ea2784[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:59:05.985 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 19:59:05.985 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 19:59:05.985 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 19:59:05.985 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 19:59:05.990 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@13ed3a22
2020-03-21 19:59:05.995 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 19:59:05.996 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 19:59:05.996 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 19:59:06.006 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 19:59:06.015 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 19:59:06.017 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 19:59:06.020 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 19:59:06.020 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 19:59:06.021 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 19:59:06.028 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:06.041 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@3e9dd39f[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:59:06.050 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:06.059 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:07.504 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:07.824 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@68393df6[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:59:07.875 [http-nio-9010-exec-10] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@42927b92[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:59:07.889 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.RechargeContorller - 获取集合》》》》[alipay.manage.bean.Recharge@2c5541a3[
  id=1
  orderId=1
  userId=1
  rechargeType=ailipay_qr
  isTripartite=1
  orderStatus=0
  chargeReason=<null>
  depositor=张三
  amount=200.00
  orderType=1
  fee=0.20
  actualAmount=40.00
  chargeBankcard=123456789876543
  phone=87654345678
  notfiy=<null>
  chargeCard=1254
  chargePerson=admin
  createTime=Sat Mar 21 16:49:30 CST 2020
  submitTime=Sat Mar 21 16:49:30 CST 2020
  status=1
  retain1=<null>
  Time=<null>
]]
2020-03-21 19:59:07.895 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@6dd4319d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:59:07.898 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@6dd4319d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:59:07.902 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:07.910 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:08.073 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:13.859 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:14.196 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@72eefaa4[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:59:14.240 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@46133873[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:59:14.241 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.RechargeContorller - 获取集合》》》》[alipay.manage.bean.Recharge@479da9fd[
  id=1
  orderId=1
  userId=1
  rechargeType=ailipay_qr
  isTripartite=1
  orderStatus=0
  chargeReason=<null>
  depositor=张三
  amount=200.00
  orderType=1
  fee=0.20
  actualAmount=40.00
  chargeBankcard=123456789876543
  phone=87654345678
  notfiy=<null>
  chargeCard=1254
  chargePerson=admin
  createTime=Sat Mar 21 16:49:30 CST 2020
  submitTime=Sat Mar 21 16:49:30 CST 2020
  status=1
  retain1=<null>
  Time=<null>
]]
2020-03-21 19:59:14.243 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@46133873[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:59:14.255 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@598f9065[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:59:14.270 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:14.279 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:14.340 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:49.907 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:50.155 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@36b07443[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 19:59:50.201 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.RechargeContorller - 获取集合》》》》[alipay.manage.bean.Recharge@61dfec62[
  id=1
  orderId=1
  userId=1
  rechargeType=ailipay_qr
  isTripartite=1
  orderStatus=0
  chargeReason=<null>
  depositor=张三
  amount=200.00
  orderType=1
  fee=0.20
  actualAmount=40.00
  chargeBankcard=123456789876543
  phone=87654345678
  notfiy=<null>
  chargeCard=1254
  chargePerson=admin
  createTime=Sat Mar 21 16:49:30 CST 2020
  submitTime=Sat Mar 21 16:49:30 CST 2020
  status=1
  retain1=<null>
  Time=<null>
]]
2020-03-21 19:59:50.202 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@738690e0[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:59:50.205 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@738690e0[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 19:59:50.212 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:50.214 [http-nio-9010-exec-10] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2d458bac[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 19:59:50.227 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 19:59:50.290 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:00:31.941 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@45ed2ec[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-02-01
  orderQrUserList=<null>
]]
2020-03-21 20:00:31.944 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@45ed2ec[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-02-01
  orderQrUserList=<null>
]]
2020-03-21 20:00:32.030 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:02:51.731 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c56bd1f: startup date [Sat Mar 21 20:02:51 CST 2020]; root of context hierarchy
2020-03-21 20:02:51.871 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:02:51.903 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$620ff527] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:02:52.525 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 20:02:52.544 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35fe9059: startup date [Sat Mar 21 20:02:52 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5c56bd1f
2020-03-21 20:02:53.528 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 20:02:53.731 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 20:02:53.915 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 20:02:53.946 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:02:54.094 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$45f5f22a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:02:54.128 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$23f003d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:02:54.133 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/980720109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:02:54.134 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 20:02:54.137 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:02:54.179 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$620ff527] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:02:54.599 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 20:02:54.611 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 20:02:54.619 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 20:02:54.619 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 20:02:54.623 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 20:02:54.712 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 20:02:54.712 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2168 ms
2020-03-21 20:02:54.939 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 20:02:54.940 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 20:02:54.948 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4824f433
2020-03-21 20:02:55.336 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 20:02:56.917 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 20:02:56.917 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 20:02:56.918 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 20:02:56.918 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 20:02:56.918 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 20:02:56.999 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 20:02:57.495 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 20:02:57 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35fe9059
2020-03-21 20:02:57.510 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:02:57.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 20:02:57.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 20:02:57.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 20:02:57.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 20:02:57.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.833 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 20:02:57.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 20:02:57.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 20:02:57.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 20:02:57.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 20:02:57.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 20:02:57.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 20:02:57.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 20:02:57.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 20:02:57.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:02:57.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:02:57.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:02:57.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:02:57.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 20:02:57.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 20:02:57.891 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 20:02:57.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35fe9059: startup date [Sat Mar 21 20:02:52 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5c56bd1f
2020-03-21 20:02:57.967 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 20:02:58.059 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 20:02:58.061 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 20:02:58.834 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 20:02:58.834 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 20:02:59.704 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 20:02:59.874 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 20:02:59.887 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 20:02:59.889 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 20:02:59.890 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 20:02:59.948 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 20:02:59.949 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 20:02:59.956 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 20:02:59.957 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 20:02:59.958 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 20:02:59.961 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 20:02:59.968 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 20:02:59.980 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=35fe9059,type=ConfigurationPropertiesRebinder]
2020-03-21 20:02:59.986 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 20:02:59.993 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 20:02:59.999 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 20:03:00.029 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 20:03:00.489 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 20:03:00.489 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 20:03:00.799 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 20:03:00.799 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 20:03:00.923 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 20:03:01.237 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 20:03:01.237 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 20:03:01.237 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 20:03:01.237 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 20:03:01.238 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 20:03:01.238 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 20:03:01.238 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 20:03:01.358 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 20:03:01.361 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 20:03:01.363 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 20:03:01.366 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584792181366 with initial instances count: 2
2020-03-21 20:03:01.371 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 20:03:01.372 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584792181372, current=UP, previous=STARTING]
2020-03-21 20:03:01.373 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 20:03:01.376 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 20:03:01.400 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 20:03:01.429 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 20:03:01.434 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 20:03:01.436 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 20:03:01.451 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 20:03:01.452 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 20:03:01.454 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.57 seconds (JVM running for 17.686)
2020-03-21 20:03:02.153 [RMI TCP Connection(2)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 20:03:02.153 [RMI TCP Connection(1)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 20:03:02.153 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 20:03:02.176 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-21 20:03:03.099 [RMI TCP Connection(1)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 20:03:20.350 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:21.185 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@623e1f8c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:03:21.255 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@1583f49d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 20:03:21.258 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@1583f49d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 20:03:21.272 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@50359e6[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:03:21.306 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:21.353 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:21.457 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:36.983 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:37.433 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7b2ed052[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:03:37.478 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7f4f7a61[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 20:03:37.482 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@7f4f7a61[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 20:03:37.485 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@5e03ae1c[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:03:37.505 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:37.505 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:03:37.569 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:08:01.240 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 20:13:01.242 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 20:38:08.002 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=24m4s775ms101µs499ns).
2020-03-21 20:38:28.328 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 20:38:28 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35fe9059
2020-03-21 20:38:28.374 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:38:28.535 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 20:38:28.554 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 20:38:28.557 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 20:38:28.562 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 20:38:28.567 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@21d7d7a9
2020-03-21 20:38:28.620 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:38:28.620 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 20:38:28.620 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:38:28.620 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:38:28.623 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@4cf1b70a
2020-03-21 20:38:28.633 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:34.744 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 20:38:34.810 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:35.323 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5a4d14a6[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:38:35.337 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:38:35.338 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:38:35.339 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:38:35.339 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:38:35.341 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@20f85b7a
2020-03-21 20:38:35.341 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:38:35.346 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:38:35.377 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7a802027[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:38:35.402 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:35.410 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@752afdb7[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:38:35.425 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:38:35.440 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@6cc1e8cf[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:38:35.448 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:35.468 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:35.471 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:35.494 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:38:35.512 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:37.303 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:37.793 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:38:37.794 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 20:38:37.794 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:38:37.794 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:38:37.794 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7ab2be4c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:38:37.795 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@53fd5450
2020-03-21 20:38:37.806 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 20:38:37.806 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 20:38:37.807 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 20:38:37.810 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 20:38:37.811 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 20:38:37.812 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 20:38:37.819 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 20:38:37.819 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 20:38:37.820 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 20:38:37.823 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:37.850 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:37.851 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@3bc8961[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:38:37.875 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:38.954 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:39.392 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7e7946b[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:38:39.442 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@47ca2acd[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 20:38:39.444 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@47ca2acd[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 20:38:39.447 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@19b33be3[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:38:39.459 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:39.463 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:39.538 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:40.736 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:41.246 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2d3938d3[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:38:41.255 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:38:41.255 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:38:41.255 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:38:41.255 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:38:41.256 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@6ebc4fbc
2020-03-21 20:38:41.256 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:38:41.257 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:38:41.301 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@1469987f[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:38:41.309 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:41.315 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5063d1c0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:38:41.321 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:38:41.340 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:41.344 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@40e5ac9c[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=0.0000
  rechargeNumber=0.0000
  freezeBalance=0.0000
  accountBalance=0.0000
  sumDealAmount=0.0000
  sumRechargeAmount=0.0000
  sumProfit=0.0000
  sumAgentProfit=0.0000
  sumOrderCount=0
  todayDealAmount=0.0000
  todayProfit=0.0000
  todayOrderCount=0
  todayAgentProfit=0.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:38:41.359 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:41.364 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:41.383 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:38:41.402 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:44.372 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:38:44.387 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:44.898 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:38:44.907 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:38:47.307 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:38:47.323 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:32.924 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:33.723 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3677bb43[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:40:33.738 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:40:33.738 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:40:33.738 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:40:33.738 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:40:33.740 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@6b5890db
2020-03-21 20:40:33.741 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:40:33.742 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:40:33.779 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@11e6a23e[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:40:33.793 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:33.803 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6384bc77[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:40:33.810 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:33.826 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:33.831 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@6a38be8d[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:40:33.835 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:33.846 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:33.866 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:33.883 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:37.325 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:38.906 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7300cbf5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:40:38.911 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:40:38.911 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:40:38.911 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:40:38.911 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:40:38.912 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@3a7d461c
2020-03-21 20:40:38.912 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:40:38.913 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:40:38.960 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@26ae953f[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:40:38.971 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:38.982 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3e436711[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:40:38.998 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:39.013 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:39.016 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:39.033 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@72fa309d[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:40:39.055 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:39.069 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:39.085 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:40.093 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:40:40.101 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:43.880 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:43.892 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:58.198 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:59.148 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1600f829[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:40:59.151 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:40:59.151 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:40:59.151 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:40:59.151 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:40:59.154 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@3af44084
2020-03-21 20:40:59.155 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:40:59.155 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:40:59.200 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@b35f676[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:40:59.211 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:59.217 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6bbd04ba[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:40:59.221 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:59.226 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:59.234 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:59.245 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@d1ec8fe[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:40:59.249 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:40:59.261 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:40:59.271 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:14.228 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@335519ab: startup date [Sat Mar 21 20:41:14 CST 2020]; root of context hierarchy
2020-03-21 20:41:14.368 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:41:14.399 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$842503ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:41:15.005 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 20:41:15.023 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@eabe133: startup date [Sat Mar 21 20:41:15 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@335519ab
2020-03-21 20:41:16.016 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 20:41:16.240 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 20:41:16.425 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 20:41:16.450 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:41:16.565 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$680b00d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:41:16.596 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$46051278] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:41:16.602 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1232739139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:41:16.603 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 20:41:16.605 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:41:16.635 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$842503ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:41:17.030 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 20:41:17.039 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 20:41:17.048 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 20:41:17.048 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 20:41:17.052 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 20:41:17.140 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 20:41:17.140 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2117 ms
2020-03-21 20:41:17.372 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 20:41:17.372 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 20:41:17.380 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5ab57731
2020-03-21 20:41:17.773 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 20:41:19.445 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 20:41:19.446 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 20:41:19.446 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 20:41:19.446 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 20:41:19.446 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 20:41:19.524 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 20:41:20.039 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 20:41:20 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@eabe133
2020-03-21 20:41:20.054 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:41:20.373 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 20:41:20.374 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 20:41:20.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 20:41:20.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 20:41:20.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.376 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.377 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.377 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.378 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.378 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.378 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.378 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 20:41:20.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 20:41:20.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 20:41:20.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 20:41:20.384 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 20:41:20.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 20:41:20.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 20:41:20.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 20:41:20.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 20:41:20.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 20:41:20.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 20:41:20.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:41:20.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:41:20.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:41:20.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:41:20.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.398 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:41:20.398 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 20:41:20.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 20:41:20.438 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 20:41:20.475 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@eabe133: startup date [Sat Mar 21 20:41:15 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@335519ab
2020-03-21 20:41:20.512 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 20:41:20.606 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 20:41:20.607 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 20:41:21.367 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 20:41:21.368 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 20:41:22.226 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 20:41:22.375 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 20:41:22.386 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 20:41:22.387 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 20:41:22.387 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 20:41:22.437 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 20:41:22.438 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 20:41:22.444 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 20:41:22.446 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 20:41:22.446 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 20:41:22.449 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 20:41:22.456 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 20:41:22.465 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=eabe133,type=ConfigurationPropertiesRebinder]
2020-03-21 20:41:22.471 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 20:41:22.476 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 20:41:22.481 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 20:41:22.512 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 20:41:22.976 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 20:41:22.976 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 20:41:23.296 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 20:41:23.296 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 20:41:23.417 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 20:41:23.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 20:41:23.856 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 20:41:23.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 20:41:23.860 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 20:41:23.864 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584794483863 with initial instances count: 2
2020-03-21 20:41:23.870 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 20:41:23.870 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584794483870, current=UP, previous=STARTING]
2020-03-21 20:41:23.872 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 20:41:23.875 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 20:41:23.905 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 20:41:23.931 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 20:41:23.936 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 20:41:23.940 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 20:41:23.955 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 20:41:23.956 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 20:41:23.959 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.656 seconds (JVM running for 17.818)
2020-03-21 20:41:25.084 [RMI TCP Connection(3)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 20:41:25.084 [RMI TCP Connection(2)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 20:41:25.084 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 20:41:25.104 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-21 20:41:25.623 [RMI TCP Connection(3)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 20:41:34.834 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:35.516 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@79095a32[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:41:35.614 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@fe14238[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:41:35.660 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:35.674 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@450b529d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:41:35.691 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:35.704 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:41:35.705 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2524add2[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:41:35.727 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:35.743 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:35.750 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:41:35.768 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:35.783 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 20:41:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@eabe133
2020-03-21 20:41:35.823 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:41:35.965 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 20:41:35.989 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 20:41:35.993 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 20:41:36.000 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 20:41:36.006 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@fa38887
2020-03-21 20:41:36.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:41:36.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:41:36.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:41:36.061 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:41:36.063 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@2d437493
2020-03-21 20:41:36.064 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:41:36.066 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:41:37.687 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:41:37.700 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:38.869 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:41:38.877 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:41:41.843 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:41:41.859 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:34.956 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:35.454 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3d722540[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:42:35.462 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:42:35.462 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:42:35.462 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:42:35.462 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:42:35.463 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@23493af7
2020-03-21 20:42:35.463 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:42:35.464 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:42:35.508 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@27b6f147[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:42:35.518 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:35.526 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@743f1ab2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:42:35.531 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:42:35.551 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:35.556 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@6b0aff2e[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:42:35.560 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:35.569 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:35.591 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:42:35.612 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:42:39.985 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:42:39.997 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:12.656 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:13.159 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@334a38f9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:43:13.164 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:43:13.164 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:43:13.164 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:43:13.164 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:43:13.167 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@504d654
2020-03-21 20:43:13.167 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:43:13.169 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:43:13.213 [http-nio-9010-exec-1] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@69a95e70[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:43:13.220 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:13.230 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6923b191[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:43:13.235 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:43:13.257 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@3e98e6ea[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:43:13.258 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:13.260 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:13.267 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:13.287 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:43:13.303 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:43:23.237 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:43:23.246 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:45:26.112 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d6c83e1: startup date [Sat Mar 21 20:45:26 CST 2020]; root of context hierarchy
2020-03-21 20:45:26.252 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:45:26.283 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e2b8c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:45:26.888 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 20:45:26.906 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72108f48: startup date [Sat Mar 21 20:45:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d6c83e1
2020-03-21 20:45:27.897 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 20:45:28.119 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 20:45:28.329 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 20:45:28.358 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:45:28.474 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$12118962] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:45:28.521 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$f00b9b09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:45:28.527 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2129878554] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:45:28.528 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 20:45:28.531 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:45:28.565 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e2b8c5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 20:45:28.953 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 20:45:28.966 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 20:45:28.973 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 20:45:28.974 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 20:45:28.978 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 20:45:29.069 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 20:45:29.069 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2164 ms
2020-03-21 20:45:29.300 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 20:45:29.300 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 20:45:29.306 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@44f92a63
2020-03-21 20:45:29.685 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 20:45:31.245 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 20:45:31.246 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 20:45:31.246 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 20:45:31.246 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 20:45:31.246 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 20:45:31.324 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 20:45:31.812 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 20:45:31 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72108f48
2020-03-21 20:45:31.828 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:45:32.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 20:45:32.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 20:45:32.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 20:45:32.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 20:45:32.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 20:45:32.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 20:45:32.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 20:45:32.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 20:45:32.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 20:45:32.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 20:45:32.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 20:45:32.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 20:45:32.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 20:45:32.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 20:45:32.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 20:45:32.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:45:32.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:45:32.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:45:32.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 20:45:32.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 20:45:32.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 20:45:32.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:45:32.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:45:32.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 20:45:32.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.170 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 20:45:32.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 20:45:32.211 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 20:45:32.251 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72108f48: startup date [Sat Mar 21 20:45:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d6c83e1
2020-03-21 20:45:32.290 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 20:45:32.397 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 20:45:32.398 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 20:45:33.191 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 20:45:33.191 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 20:45:34.067 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 20:45:34.201 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 20:45:34.212 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 20:45:34.213 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 20:45:34.214 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 20:45:34.286 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 20:45:34.287 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 20:45:34.294 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 20:45:34.295 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 20:45:34.296 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 20:45:34.298 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 20:45:34.305 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 20:45:34.314 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=72108f48,type=ConfigurationPropertiesRebinder]
2020-03-21 20:45:34.319 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 20:45:34.325 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 20:45:34.331 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 20:45:34.355 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 20:45:34.827 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 20:45:34.827 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 20:45:35.147 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 20:45:35.147 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 20:45:35.267 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 20:45:35.580 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 20:45:35.580 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 20:45:35.580 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 20:45:35.580 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 20:45:35.581 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 20:45:35.581 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 20:45:35.581 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 20:45:35.700 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 20:45:35.703 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 20:45:35.705 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 20:45:35.708 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584794735707 with initial instances count: 2
2020-03-21 20:45:35.714 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 20:45:35.714 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584794735714, current=UP, previous=STARTING]
2020-03-21 20:45:35.716 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 20:45:35.720 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 20:45:35.747 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 20:45:35.775 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 20:45:35.781 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 20:45:35.784 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 20:45:35.799 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 20:45:35.799 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 20:45:35.801 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.48 seconds (JVM running for 18.025)
2020-03-21 20:45:36.511 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 20:45:36.512 [RMI TCP Connection(1)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 20:45:36.512 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 20:45:36.534 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-03-21 20:45:37.033 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 20:46:29.387 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:46:30.168 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2aa8117a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:46:30.278 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@1ef5ca04[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:46:30.329 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:46:30.342 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3e2c5153[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:46:30.347 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:46:30.364 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:46:30.376 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@5e03ae1c[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:46:30.415 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:46:30.415 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:46:30.436 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:46:30.463 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 20:46:30 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72108f48
2020-03-21 20:46:30.464 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:46:30.528 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 20:46:30.679 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 20:46:30.695 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 20:46:30.698 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 20:46:30.703 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 20:46:30.706 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2ba45e82
2020-03-21 20:46:30.759 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:46:30.759 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:46:30.759 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:46:30.759 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:46:30.762 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@66f373e8
2020-03-21 20:46:30.762 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:46:30.765 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:47:32.698 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:47:33.182 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@60071dec[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:47:33.186 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 20:47:33.187 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 20:47:33.187 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 20:47:33.187 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 20:47:33.193 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@503c44c8
2020-03-21 20:47:33.194 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 20:47:33.194 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 20:47:33.238 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@28222cf4[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:47:33.253 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:47:33.265 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1381a3cd[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 20:47:33.269 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:47:33.287 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:47:33.292 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@60bbb95[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 20:47:33.317 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:47:33.323 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:47:33.337 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 20:47:33.369 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:47:35.803 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 20:47:35.819 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 20:50:35.585 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 20:55:35.588 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:36:15.579 [redisMessageListenerContainer-7] WARN  o.s.s.data.redis.RedisOperationsSessionRepository - Unable to publish SessionDestroyedEvent for session 130c5145-d78c-4a2e-afe2-512228de048e
2020-03-21 21:36:34.761 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=38m27s597ms411µs100ns).
2020-03-21 21:37:48.999 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7f712824: startup date [Sat Mar 21 21:37:48 CST 2020]; root of context hierarchy
2020-03-21 21:37:49.144 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:37:49.174 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4d0d60e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:37:49.825 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 21:37:49.842 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2aa1b6b6: startup date [Sat Mar 21 21:37:49 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7f712824
2020-03-21 21:37:50.862 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 21:37:51.057 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 21:37:51.241 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 21:37:51.266 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:37:51.381 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30f35dec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:37:51.412 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$eed6f93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:37:51.417 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1286338342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:37:51.419 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 21:37:51.421 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:37:51.450 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4d0d60e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:37:51.928 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 21:37:51.940 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 21:37:51.950 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 21:37:51.950 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 21:37:51.955 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 21:37:52.052 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 21:37:52.053 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2211 ms
2020-03-21 21:37:52.282 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:37:52.282 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:37:52.290 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@992c2e1
2020-03-21 21:37:52.683 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 21:37:54.258 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 21:37:54.259 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 21:37:54.259 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 21:37:54.259 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 21:37:54.259 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 21:37:54.340 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 21:37:54.860 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 21:37:54 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2aa1b6b6
2020-03-21 21:37:54.874 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:37:55.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:37:55.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:37:55.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 21:37:55.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 21:37:55.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.217 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 21:37:55.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 21:37:55.219 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 21:37:55.220 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 21:37:55.221 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 21:37:55.223 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.223 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 21:37:55.223 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 21:37:55.224 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 21:37:55.224 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.225 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.226 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.226 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:37:55.227 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:37:55.227 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:37:55.227 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.227 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.228 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.229 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:37:55.229 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 21:37:55.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:37:55.230 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.231 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.234 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 21:37:55.234 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:37:55.274 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 21:37:55.312 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2aa1b6b6: startup date [Sat Mar 21 21:37:49 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7f712824
2020-03-21 21:37:55.352 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 21:37:55.450 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 21:37:55.452 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 21:37:56.211 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:37:56.211 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:37:57.105 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 21:37:57.271 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 21:37:57.282 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:37:57.283 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:37:57.284 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:37:57.338 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 21:37:57.339 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 21:37:57.348 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 21:37:57.350 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 21:37:57.350 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 21:37:57.353 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 21:37:57.362 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 21:37:57.372 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2aa1b6b6,type=ConfigurationPropertiesRebinder]
2020-03-21 21:37:57.380 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 21:37:57.386 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 21:37:57.392 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 21:37:57.427 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 21:37:57.927 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 21:37:57.927 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 21:37:58.257 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 21:37:58.257 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 21:37:58.377 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 21:37:58.707 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 21:37:58.827 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 21:37:58.829 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 21:37:58.831 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 21:37:58.834 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584797878833 with initial instances count: 2
2020-03-21 21:37:58.840 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 21:37:58.840 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584797878840, current=UP, previous=STARTING]
2020-03-21 21:37:58.842 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 21:37:58.845 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 21:37:58.870 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 21:37:58.895 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 21:37:58.900 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 21:37:58.903 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 21:37:58.918 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 21:37:58.919 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 21:37:58.921 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.8 seconds (JVM running for 18.094)
2020-03-21 21:37:59.940 [RMI TCP Connection(2)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 21:37:59.940 [RMI TCP Connection(3)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 21:37:59.940 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 21:37:59.959 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-21 21:38:00.619 [RMI TCP Connection(3)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 21:39:19.951 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 21:39:19 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2aa1b6b6
2020-03-21 21:39:19.992 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:39:20.165 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 21:39:20.185 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 21:39:20.190 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 21:39:20.199 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 21:39:20.203 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@9fa8846
2020-03-21 21:39:20.263 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 21:39:20.263 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 21:39:20.263 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 21:39:20.263 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 21:39:20.266 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@1063c17e
2020-03-21 21:39:20.292 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:25.901 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 21:39:26.031 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:28.819 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 21:39:28.820 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 21:39:28.820 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 21:39:28.820 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 21:39:28.823 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@34a267c3
2020-03-21 21:39:28.823 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 21:39:28.834 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:39:28.840 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7d8a1d10[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:39:28.927 [http-nio-9010-exec-10] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@217b754e[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:39:28.941 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:28.949 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4ac37791[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:39:28.964 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:39:28.980 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:28.986 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@55680ce6[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:39:29.001 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:29.012 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:39:29.023 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:29.268 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:35.131 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:39:35.153 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:36.061 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:39:36.081 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:36.675 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:39:36.690 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:39:40.297 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:39:40.308 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:00.275 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:02.593 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@35d6cd26[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:41:02.598 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 21:41:02.598 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 21:41:02.598 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 21:41:02.598 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 21:41:02.600 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@75f394f4
2020-03-21 21:41:02.601 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 21:41:02.601 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:41:02.665 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@10fbbab7[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:41:02.672 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:02.677 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@40433993[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:41:02.688 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:41:02.702 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:02.717 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:02.717 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2333ad14[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:41:02.730 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:02.765 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:41:02.773 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:41:10.121 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:41:10.130 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:42:58.709 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:47:46.428 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:47:46.441 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:47:46.907 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:47:46.916 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:47:58.710 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:48:14.882 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3cc6c3a3: startup date [Sat Mar 21 21:48:14 CST 2020]; root of context hierarchy
2020-03-21 21:48:15.031 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:48:15.064 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc422789] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:48:15.693 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 21:48:15.712 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65bdaf12: startup date [Sat Mar 21 21:48:15 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3cc6c3a3
2020-03-21 21:48:16.757 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 21:48:16.951 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 21:48:17.122 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 21:48:17.146 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:48:17.253 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e028248c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:48:17.296 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$be223633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:48:17.302 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1193266373] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:48:17.303 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 21:48:17.305 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:48:17.336 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc422789] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:48:17.810 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 21:48:17.822 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 21:48:17.831 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 21:48:17.831 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 21:48:17.835 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 21:48:17.929 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 21:48:17.929 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2217 ms
2020-03-21 21:48:18.167 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:48:18.167 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:48:18.175 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@35630000
2020-03-21 21:48:18.574 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 21:48:20.247 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 21:48:20.248 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 21:48:20.248 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 21:48:20.248 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 21:48:20.248 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 21:48:20.335 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 21:48:20.865 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 21:48:20 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65bdaf12
2020-03-21 21:48:20.881 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:48:21.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:48:21.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:48:21.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 21:48:21.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 21:48:21.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 21:48:21.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 21:48:21.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 21:48:21.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 21:48:21.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 21:48:21.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 21:48:21.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 21:48:21.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 21:48:21.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 21:48:21.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:48:21.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:48:21.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:48:21.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 21:48:21.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:48:21.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:48:21.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:48:21.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 21:48:21.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:48:21.250 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 21:48:21.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65bdaf12: startup date [Sat Mar 21 21:48:15 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3cc6c3a3
2020-03-21 21:48:21.325 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 21:48:21.426 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 21:48:21.428 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 21:48:22.222 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:48:22.222 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:48:23.103 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 21:48:23.231 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 21:48:23.242 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:48:23.243 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:48:23.244 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:48:23.295 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 21:48:23.296 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 21:48:23.303 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 21:48:23.305 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 21:48:23.306 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 21:48:23.309 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 21:48:23.316 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 21:48:23.325 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=65bdaf12,type=ConfigurationPropertiesRebinder]
2020-03-21 21:48:23.331 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 21:48:23.337 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 21:48:23.343 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 21:48:23.378 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 21:48:23.865 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 21:48:23.865 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 21:48:24.193 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 21:48:24.193 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 21:48:24.311 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 21:48:24.687 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 21:48:24.822 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 21:48:24.825 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 21:48:24.827 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 21:48:24.830 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584798504829 with initial instances count: 2
2020-03-21 21:48:24.837 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 21:48:24.837 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584798504837, current=UP, previous=STARTING]
2020-03-21 21:48:24.839 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 21:48:24.842 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 21:48:24.873 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 21:48:24.908 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 21:48:24.914 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 21:48:24.917 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 21:48:24.934 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 21:48:24.935 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 21:48:24.938 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.967 seconds (JVM running for 18.227)
2020-03-21 21:48:25.877 [RMI TCP Connection(3)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 21:48:25.877 [RMI TCP Connection(2)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 21:48:25.877 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 21:48:25.895 [RMI TCP Connection(2)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-21 21:48:26.413 [RMI TCP Connection(3)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 21:48:30.197 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:30.984 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2509c763[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:48:31.097 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@5456ac62[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:48:31.123 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:31.139 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@67477ffc[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:48:31.152 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:48:31.156 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:31.174 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@79740781[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:48:31.196 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:31.196 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:31.219 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:48:31.251 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:31.268 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 21:48:31 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65bdaf12
2020-03-21 21:48:31.362 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:48:31.515 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 21:48:31.530 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 21:48:31.534 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 21:48:31.541 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 21:48:31.545 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@77d0bdfd
2020-03-21 21:48:31.605 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 21:48:31.605 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 21:48:31.605 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 21:48:31.605 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 21:48:31.609 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@3afcbd7d
2020-03-21 21:48:31.609 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 21:48:31.612 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:48:36.036 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:48:36.048 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:48:36.731 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:48:36.740 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:20.004 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@258d452a: startup date [Sat Mar 21 21:50:20 CST 2020]; root of context hierarchy
2020-03-21 21:50:20.182 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:50:20.217 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$568fd9a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:50:20.864 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 21:50:20.884 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff: startup date [Sat Mar 21 21:50:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@258d452a
2020-03-21 21:50:22.247 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 21:50:22.514 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 21:50:22.742 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 21:50:22.767 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:50:22.888 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a75d6ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:50:22.926 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$186fe852] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:50:22.932 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1495817382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:50:22.933 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 21:50:22.937 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:50:22.979 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$568fd9a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:50:23.525 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 21:50:23.537 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 21:50:23.546 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 21:50:23.547 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 21:50:23.550 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 21:50:23.649 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 21:50:23.649 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2765 ms
2020-03-21 21:50:23.926 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:50:23.926 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:50:23.934 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2aa0f230
2020-03-21 21:50:24.420 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 21:50:26.136 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 21:50:26.137 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 21:50:26.137 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 21:50:26.137 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 21:50:26.137 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 21:50:26.235 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 21:50:27.147 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 21:50:27 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff
2020-03-21 21:50:27.173 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:50:27.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:50:27.640 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:50:27.640 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 21:50:27.640 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 21:50:27.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 21:50:27.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 21:50:27.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 21:50:27.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 21:50:27.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 21:50:27.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 21:50:27.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 21:50:27.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 21:50:27.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 21:50:27.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 21:50:27.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 21:50:27.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 21:50:27.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 21:50:27.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 21:50:27.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 21:50:27.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 21:50:27.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 21:50:27.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 21:50:27.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 21:50:27.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 21:50:27.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 21:50:27.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 21:50:27.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 21:50:27.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 21:50:27.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 21:50:27.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 21:50:27.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:50:27.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:50:27.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:50:27.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 21:50:27.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:50:27.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:50:27.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:50:27.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 21:50:27.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:50:27.720 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 21:50:27.769 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff: startup date [Sat Mar 21 21:50:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@258d452a
2020-03-21 21:50:27.816 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 21:50:27.960 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 21:50:27.962 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 21:50:28.765 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:50:28.765 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:50:29.922 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 21:50:30.089 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 21:50:30.105 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:50:30.106 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:50:30.107 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:50:30.178 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 21:50:30.180 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 21:50:30.191 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 21:50:30.193 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 21:50:30.194 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 21:50:30.198 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 21:50:30.207 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 21:50:30.220 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6b476eff,type=ConfigurationPropertiesRebinder]
2020-03-21 21:50:30.227 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 21:50:30.234 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 21:50:30.241 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 21:50:30.276 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 21:50:30.765 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 21:50:30.765 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 21:50:31.109 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 21:50:31.109 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 21:50:31.297 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 21:50:31.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 21:50:31.787 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 21:50:31.790 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 21:50:31.794 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 21:50:31.797 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584798631796 with initial instances count: 2
2020-03-21 21:50:31.803 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 21:50:31.804 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584798631804, current=UP, previous=STARTING]
2020-03-21 21:50:31.805 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 21:50:31.809 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 21:50:31.851 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 21:50:31.883 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 21:50:31.891 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 21:50:31.897 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 21:50:31.922 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 21:50:31.924 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 21:50:31.927 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.833 seconds (JVM running for 21.292)
2020-03-21 21:50:32.731 [RMI TCP Connection(3)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 21:50:32.731 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 21:50:32.733 [RMI TCP Connection(4)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 21:50:32.765 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2020-03-21 21:50:33.329 [RMI TCP Connection(4)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 21:50:48.004 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:48.705 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@89bc596[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:50:48.814 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@571f22f1[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:50:48.856 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:48.867 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@33c87595[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:50:48.884 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:50:48.889 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:48.898 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2fc5e6ac[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:50:48.938 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:48.940 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:48.965 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:50:48.991 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 21:50:48 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff
2020-03-21 21:50:49.001 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:50:49.083 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:50:49.359 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 21:50:49.386 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 21:50:49.394 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 21:50:49.403 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 21:50:49.408 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4d356929
2020-03-21 21:50:49.500 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 21:50:49.500 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 21:50:49.500 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 21:50:49.500 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 21:50:49.505 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@46dd3c5c
2020-03-21 21:50:49.505 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 21:50:49.509 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:50:55.767 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:51:06.157 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:51:13.078 [lettuce-nioEventLoop-4-3] INFO  io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:51:13.078 [lettuce-nioEventLoop-4-2] INFO  io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:51:13.078 [lettuce-nioEventLoop-4-1] INFO  io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:51:13.191 [lettuce-eventExecutorLoop-1-4] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /127.0.0.1:6379
2020-03-21 21:51:13.192 [lettuce-eventExecutorLoop-1-3] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /127.0.0.1:6379
2020-03-21 21:51:13.192 [lettuce-eventExecutorLoop-1-2] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /127.0.0.1:6379
2020-03-21 21:51:15.200 [lettuce-nioEventLoop-4-4] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 127.0.0.1:6379
2020-03-21 21:51:15.201 [lettuce-nioEventLoop-4-6] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 127.0.0.1:6379
2020-03-21 21:51:15.202 [lettuce-nioEventLoop-4-5] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 127.0.0.1:6379
2020-03-21 21:51:27.543 [Thread-66] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-21 21:51:27.545 [Thread-54] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff: startup date [Sat Mar 21 21:50:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@258d452a
2020-03-21 21:51:27.546 [Thread-54] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application otc-alipay-server with eureka with status DOWN
2020-03-21 21:51:27.547 [Thread-54] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584798687547, current=DOWN, previous=UP]
2020-03-21 21:51:27.547 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 21:51:27.549 [Thread-54] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
2020-03-21 21:51:27.553 [Thread-54] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-03-21 21:51:27.554 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 21:51:27.556 [Thread-54] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-03-21 21:51:27.557 [Thread-54] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-03-21 21:51:27.559 [Thread-54] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 21:50:48 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff
2020-03-21 21:51:27.560 [Thread-54] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 21:51:27.560 [Thread-54] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2020-03-21 21:51:27.562 [Thread-54] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Sat Mar 21 21:50:27 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b476eff
2020-03-21 21:51:27.564 [Thread-54] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-21 21:51:30.565 [Thread-54] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-21 21:51:30.576 [Thread-54] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - deregister  status: 200
2020-03-21 21:51:30.582 [Thread-54] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-21 21:51:31.724 [Thread-54] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-03-21 21:51:31.739 [Thread-54] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-03-21 21:51:45.285 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@19fa792b: startup date [Sat Mar 21 21:51:45 CST 2020]; root of context hierarchy
2020-03-21 21:51:45.432 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:51:45.465 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5078366a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:51:46.230 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 21:51:46.247 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e3d994c: startup date [Sat Mar 21 21:51:46 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@19fa792b
2020-03-21 21:51:47.219 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 21:51:47.452 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 21:51:47.632 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=7729c25a-acff-379e-999d-9f9a2c41e1f6
2020-03-21 21:51:47.657 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:51:47.777 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$345e336d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:51:47.807 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$12584514] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:51:47.812 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2106239360] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:51:47.814 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 21:51:47.816 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:51:47.845 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5078366a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 21:51:48.239 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 21:51:48.250 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 21:51:48.257 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 21:51:48.257 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 21:51:48.261 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 21:51:48.352 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 21:51:48.353 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2106 ms
2020-03-21 21:51:48.585 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:51:48.585 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:51:48.592 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@b27218f
2020-03-21 21:51:48.971 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 21:51:50.553 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 21:51:50.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 21:51:50.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 21:51:50.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 21:51:50.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 21:51:50.634 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 21:51:51.160 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 21:51:51 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e3d994c
2020-03-21 21:51:51.178 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:51:51.533 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 21:51:51.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:51:51.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 21:51:51.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 21:51:51.535 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.535 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.538 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.545 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 21:51:51.545 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.545 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 21:51:51.545 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 21:51:51.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 21:51:51.547 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 21:51:51.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 21:51:51.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 21:51:51.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 21:51:51.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 21:51:51.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 21:51:51.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 21:51:51.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:51:51.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:51:51.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 21:51:51.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:51:51.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTotalReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.showTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyTodayReceiveOrderSituation],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyTodayReceiveOrderSituation(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:51:51.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 21:51:51.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 21:51:51.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:51:51.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:51:51.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 21:51:51.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 21:51:51.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:51:51.608 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 21:51:51.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e3d994c: startup date [Sat Mar 21 21:51:46 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@19fa792b
2020-03-21 21:51:51.697 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 21:51:51.800 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 21:51:51.802 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 21:51:52.575 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 21:51:52.575 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 21:51:53.432 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 21:51:53.595 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 21:51:53.605 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:51:53.606 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 21:51:53.606 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 21:51:53.658 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 21:51:53.659 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 21:51:53.665 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 21:51:53.667 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 21:51:53.667 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 21:51:53.671 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 21:51:53.678 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 21:51:53.687 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e3d994c,type=ConfigurationPropertiesRebinder]
2020-03-21 21:51:53.692 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 21:51:53.698 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 21:51:53.703 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 21:51:53.730 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 21:51:54.198 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 21:51:54.198 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 21:51:54.500 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 21:51:54.500 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 21:51:54.622 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 21:51:54.949 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 21:51:54.950 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 21:51:54.950 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 21:51:54.950 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 21:51:54.950 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 21:51:54.950 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 21:51:54.950 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 21:51:55.068 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 21:51:55.070 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 21:51:55.072 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 21:51:55.075 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584798715074 with initial instances count: 1
2020-03-21 21:51:55.081 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 21:51:55.081 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584798715081, current=UP, previous=STARTING]
2020-03-21 21:51:55.082 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 21:51:55.086 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 21:51:55.114 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 21:51:55.141 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 21:51:55.146 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 21:51:55.149 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 21:51:55.164 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 21:51:55.165 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 21:51:55.168 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.697 seconds (JVM running for 17.884)
2020-03-21 21:51:56.438 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 21:51:56.438 [RMI TCP Connection(3)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 21:51:56.438 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 21:51:56.456 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-21 21:51:57.158 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 21:52:51.685 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:52.339 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7339c795[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:52:52.458 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@cac2716[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:52:52.495 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:52.506 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@716a60e9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 21:52:52.526 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:52:52.545 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@11459fa6[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 21:52:52.547 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:52.576 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:52.584 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:52.605 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 21:52:52 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e3d994c
2020-03-21 21:52:52.608 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:52:52.629 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:52.674 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 21:52:52.831 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 21:52:52.852 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 21:52:52.857 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 21:52:52.862 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 21:52:52.868 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@426c6f02
2020-03-21 21:52:52.928 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 21:52:52.928 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 21:52:52.928 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 21:52:52.928 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 21:52:52.931 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@4c569bf2
2020-03-21 21:52:52.931 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 21:52:52.934 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 21:52:57.092 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:52:57.109 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:52:58.141 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:52:58.154 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:53:57.707 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:53:57.726 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:53:58.319 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:53:58.329 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:53:58.761 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:53:58.772 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:54:01.852 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:54:01.870 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:54:02.186 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:54:02.195 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:54:02.379 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:54:02.391 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:54:02.582 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 21:54:02.598 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:54:02.750 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 21:54:02.759 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 21:56:54.952 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:01:54.954 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:06:54.955 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:09:16.793 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:18.205 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@732cd9b3[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:09:18.208 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:09:18.208 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 22:09:18.208 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:09:18.208 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:09:18.210 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@55680ce6
2020-03-21 22:09:18.211 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 22:09:18.211 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 22:09:18.274 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@63e0f20c[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:09:18.284 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:18.292 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@53b9965[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:09:18.300 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:09:18.316 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:18.323 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:18.326 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@2c6f801c[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:09:18.338 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:18.349 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:09:18.360 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:23.651 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 22:09:23.666 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:24.296 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:09:24.309 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:33.275 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:showTodayReceiveOrderSituation:admin]
2020-03-21 22:09:33.296 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:33.754 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:09:33.771 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:35.955 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:36.534 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1f275b3[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:09:36.539 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:09:36.539 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 22:09:36.539 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:09:36.540 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:09:36.540 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 22:09:36.540 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 22:09:36.540 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 22:09:36.542 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@4b05520f
2020-03-21 22:09:36.546 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 22:09:36.557 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 22:09:36.560 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 22:09:36.584 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 22:09:36.585 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 22:09:36.589 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 22:09:36.591 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:36.606 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@269c2916[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:09:36.611 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:36.624 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:44.881 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:09:45.608 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:00.059 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:03.200 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:06.495 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:13.004 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:13.753 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:16.431 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:10:20.868 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:11:54.956 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:16:54.958 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:21:54.959 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:26:54.961 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:28:25.918 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:28:26.700 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:28:28.720 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:28:29.395 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:41.165 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:41.855 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:43.348 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:43.784 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:46.934 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:47.605 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:30:52.044 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:31:54.962 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:32:09.289 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:32:09.979 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:32:11.769 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:32:12.233 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:32:17.100 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:32:37.221 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:33:56.106 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:33:56.387 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7097aed0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:33:56.454 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@29f01692[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 22:33:56.460 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4afc0179[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:33:56.461 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@29f01692[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 22:33:56.479 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:33:56.564 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:33:56.608 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:33:59.721 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:00.091 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@70fca6e6[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:34:00.174 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@4568330d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 22:34:00.176 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@6216112b[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:34:00.182 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@4568330d[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 22:34:00.208 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:00.208 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:00.575 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:04.654 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@857794f[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 22:34:04.656 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy148:findMyOrder:alipay.manage.bean.DealOrder@857794f[
  id=<null>
  orderId=<null>
  associatedId=<null>
  orderStatus=<null>
  dealAmount=<null>
  dealFee=<null>
  actualAmount=<null>
  orderType=<null>
  orderAccount=<null>
  orderQrUser=admin
  orderQr=<null>
  externalOrderId=<null>
  generationIp=<null>
  notify=<null>
  back=<null>
  isNotify=<null>
  dealDescribe=<null>
  createTime=<null>
  submitTime=<null>
  payType=<null>
  feeId=<null>
  status=<null>
  retain1=<null>
  retain2=<null>
  retain3=<null>
  retain4=<null>
  Time=2020-03-21
  orderQrUserList=<null>
]]
2020-03-21 22:34:04.769 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:26.252 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:26.663 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:30.776 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:31.205 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:34:31.214 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:34:34.560 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:34:34.565 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:36:39.001 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:36:39.375 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:36:39.381 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:36:41.290 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:36:41.708 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:36:41.722 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:36:46.671 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:36:46.678 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:36:54.963 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:36:55.412 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:36:55.418 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:41.579 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:37:41.585 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:43.035 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:43.329 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3ea44e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:37:43.352 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:37:43.352 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 22:37:43.352 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:37:43.352 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:37:43.354 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@54c23200
2020-03-21 22:37:43.355 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 22:37:43.356 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 22:37:43.447 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:43.648 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@559d1799[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:37:43.655 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:43.661 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@51049907[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:37:43.668 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:37:43.692 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:43.731 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@5c5d479f[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:37:43.738 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:43.750 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:37:43.758 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:46.971 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:47.255 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@347ea86[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:37:47.263 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:37:47.263 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 22:37:47.263 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 22:37:47.263 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 22:37:47.263 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:37:47.263 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:37:47.263 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 22:37:47.264 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@28222cf4
2020-03-21 22:37:47.276 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 22:37:47.276 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 22:37:47.277 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 22:37:47.283 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 22:37:47.284 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 22:37:47.284 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 22:37:47.313 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:47.318 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:47.333 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@17ad1d98[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:37:47.348 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:54.079 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:54.366 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@631252c3[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:37:54.435 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4c83c5b1[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:37:54.449 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:37:54.465 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:38:21.517 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.UserContorller.modifyMoneyPwd(UserContorller.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 22:41:54.964 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:46:54.966 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:48:19.522 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:21.660 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@44c2fcf6[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:48:21.694 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:21.733 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@7e0acf4d[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:48:21.748 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:21.748 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:23.751 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:24.290 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1e0ef760[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:48:24.311 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:24.361 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@1469987f[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:48:24.368 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:24.615 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:33.714 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:34.329 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:42.730 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:43.341 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.OrderContorller - 获取的集合:Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=0, pages=0, reasonable=false, pageSizeZero=false}[]
2020-03-21 22:48:43.346 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:44.569 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:45.079 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@377792b2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:48:45.088 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:48:45.088 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 22:48:45.088 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:48:45.088 [hystrix-otc-task-config-server-6] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:48:45.089 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@1f1a42ee
2020-03-21 22:48:45.089 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 22:48:45.090 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 22:48:45.147 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4cd22ad9[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:48:45.161 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:45.167 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5e6b8e0c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:48:45.177 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:48:45.193 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:45.227 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:45.245 [http-nio-9010-exec-10] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@227b35f3[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:48:45.262 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:45.270 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:48:45.283 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:52.266 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:52.810 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7c32479d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:48:52.813 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:48:52.813 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 22:48:52.813 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 22:48:52.813 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:48:52.813 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 22:48:52.813 [hystrix-otc-task-config-server-7] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:48:52.813 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 22:48:52.814 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@5aeb3eb3
2020-03-21 22:48:52.815 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 22:48:52.816 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 22:48:52.816 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 22:48:52.823 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 22:48:52.823 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 22:48:52.823 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 22:48:52.853 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:52.859 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:48:52.890 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@4c2cf5c[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:48:52.902 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:14.435 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:15.021 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:19.632 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:22.752 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:26.777 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:27.321 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7ab2be4c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:49:27.331 [hystrix-otc-task-config-server-8] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:49:27.331 [hystrix-otc-task-config-server-8] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 22:49:27.332 [hystrix-otc-task-config-server-8] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:49:27.332 [hystrix-otc-task-config-server-8] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:49:27.333 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@182ef3
2020-03-21 22:49:27.333 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 22:49:27.338 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 22:49:27.396 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@3bc8961[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:49:27.416 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:27.425 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@27c4d4f9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:49:27.430 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:49:27.464 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:27.465 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:27.750 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@387037a8[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:49:27.753 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:49:27.763 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserFundServiceImpl:findMyTodayReceiveOrder:admin]
2020-03-21 22:49:27.774 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:50:22.902 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:50:23.463 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@1fe5d0f9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 22:50:23.468 [hystrix-otc-task-config-server-9] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 22:50:23.468 [hystrix-otc-task-config-server-9] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 22:50:23.468 [hystrix-otc-task-config-server-9] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 22:50:23.468 [hystrix-otc-task-config-server-9] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 22:50:23.469 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@5d080efb
2020-03-21 22:50:23.473 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 22:50:23.473 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 22:50:23.473 [http-nio-9010-exec-10] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 22:50:23.477 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 22:50:23.478 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 22:50:23.478 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 22:50:23.483 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 22:50:23.483 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 22:50:23.483 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 22:50:23.507 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:50:23.516 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:50:23.542 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.UserFundServiceImpl - 获取用户个人信息 alipay.manage.bean.UserFund@26c659c0[
  id=1
  userId=admin
  userName=刘光强
  cashBalance=1.0000
  rechargeNumber=2.0000
  freezeBalance=3.0000
  accountBalance=4.0000
  sumDealAmount=5.0000
  sumRechargeAmount=6.0000
  sumProfit=7.0000
  sumAgentProfit=8.0000
  sumOrderCount=9
  todayDealAmount=10.0000
  todayProfit=11.0000
  todayOrderCount=12
  todayAgentProfit=13.0000
  userType=2
  agent=
  isAgent=1
  createTime=Wed Mar 11 19:54:19 CST 2020
  submitTime=Wed Mar 11 19:54:19 CST 2020
  status=1
  version=0
]
2020-03-21 22:50:23.563 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 22:51:54.968 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 22:52:32.971 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@524d3030: startup date [Sat Mar 21 22:52:32 CST 2020]; root of context hierarchy
2020-03-21 22:52:33.120 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 22:52:33.150 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$363355c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 22:52:33.714 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 22:54:52.081 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3e11df9a: startup date [Sat Mar 21 22:54:52 CST 2020]; root of context hierarchy
2020-03-21 22:54:52.228 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 22:54:52.258 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$83be8b27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 22:54:52.813 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 22:56:10.016 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3291aa61: startup date [Sat Mar 21 22:56:10 CST 2020]; root of context hierarchy
2020-03-21 22:56:10.168 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 22:56:10.204 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e09a6d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 22:56:10.774 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 22:57:29.673 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3074cc44: startup date [Sat Mar 21 22:57:29 CST 2020]; root of context hierarchy
2020-03-21 22:57:29.829 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 22:57:29.859 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a66b6627] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 22:57:30.421 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 22:59:09.195 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2b8d43c: startup date [Sat Mar 21 22:59:09 CST 2020]; root of context hierarchy
2020-03-21 22:59:09.344 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 22:59:09.373 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6f39d1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 22:59:09.932 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 22:59:51.715 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@299c0198: startup date [Sat Mar 21 22:59:51 CST 2020]; root of context hierarchy
2020-03-21 22:59:51.860 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 22:59:51.895 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd18d5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 22:59:52.513 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 23:00:08.713 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7e999583: startup date [Sat Mar 21 23:00:08 CST 2020]; root of context hierarchy
2020-03-21 23:00:08.858 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:00:08.892 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5d89838e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:00:09.466 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 23:00:36.325 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@194c0b14: startup date [Sat Mar 21 23:00:36 CST 2020]; root of context hierarchy
2020-03-21 23:00:36.475 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:00:36.511 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$95fecd42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:00:37.095 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 23:01:05.073 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630: startup date [Sat Mar 21 23:01:05 CST 2020]; root of context hierarchy
2020-03-21 23:01:05.221 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:01:05.254 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$635d1a99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:05.842 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 23:01:31.321 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630: startup date [Sat Mar 21 23:01:31 CST 2020]; root of context hierarchy
2020-03-21 23:01:31.468 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:01:31.496 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$635d1a99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:32.282 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 23:01:32.298 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7118a389: startup date [Sat Mar 21 23:01:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630
2020-03-21 23:01:33.308 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 23:01:33.521 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 23:01:33.706 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 23:01:33.731 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:01:33.840 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4743179c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:33.878 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$253d2943] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:33.884 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/472943803] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:33.885 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 23:01:33.888 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:33.938 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$635d1a99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:01:34.385 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 23:01:34.397 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 23:01:34.405 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 23:01:34.406 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 23:01:34.409 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 23:01:34.502 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 23:01:34.502 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2204 ms
2020-03-21 23:01:34.746 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 23:01:34.746 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 23:01:34.754 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@cd95de
2020-03-21 23:01:35.177 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 23:01:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 23:01:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 23:01:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 23:01:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 23:01:36.757 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 23:01:36.840 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 23:01:37.358 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 23:01:37 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7118a389
2020-03-21 23:01:37.377 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:01:37.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 23:01:37.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 23:01:37.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 23:01:37.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 23:01:37.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 23:01:37.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 23:01:37.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 23:01:37.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 23:01:37.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 23:01:37.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 23:01:37.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 23:01:37.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 23:01:37.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 23:01:37.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 23:01:37.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 23:01:37.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 23:01:37.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 23:01:37.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 23:01:37.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 23:01:37.704 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 23:01:37.704 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.704 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 23:01:37.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.706 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:01:37.707 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.707 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.707 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.707 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.709 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:01:37.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:01:37.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:01:37.710 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:01:37.711 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:01:37.711 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 23:01:37.712 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.712 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.713 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 23:01:37.716 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 23:01:37.756 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 23:01:37.792 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7118a389: startup date [Sat Mar 21 23:01:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630
2020-03-21 23:01:37.827 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 23:01:37.967 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 23:01:37.968 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 23:01:38.747 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 23:01:38.747 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 23:01:39.716 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 23:01:39.842 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 23:01:39.855 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 23:01:39.856 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 23:01:39.856 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 23:01:39.908 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 23:01:39.910 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 23:01:39.917 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 23:01:39.919 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 23:01:39.920 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 23:01:39.923 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 23:01:39.931 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 23:01:39.943 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7118a389,type=ConfigurationPropertiesRebinder]
2020-03-21 23:01:39.948 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 23:01:39.955 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 23:01:39.962 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 23:01:39.996 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 23:01:40.498 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 23:01:40.498 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 23:01:40.865 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 23:01:40.865 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 23:01:40.994 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 23:01:41.318 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 23:01:41.440 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 23:01:41.443 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 23:01:41.444 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 23:01:41.449 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584802901446 with initial instances count: 2
2020-03-21 23:01:41.455 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 23:01:41.455 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584802901455, current=UP, previous=STARTING]
2020-03-21 23:01:41.457 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 23:01:41.460 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 23:01:41.489 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 23:01:41.515 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 23:01:41.522 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 23:01:41.525 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 23:01:41.541 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 23:01:41.542 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 23:01:41.544 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.059 seconds (JVM running for 18.097)
2020-03-21 23:01:42.188 [RMI TCP Connection(1)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 23:01:42.188 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 23:01:42.189 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 23:01:42.213 [RMI TCP Connection(1)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2020-03-21 23:01:42.779 [RMI TCP Connection(2)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 23:02:03.056 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@26432f26: startup date [Sat Mar 21 23:02:03 CST 2020]; root of context hierarchy
2020-03-21 23:02:03.199 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:02:03.231 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c8b317c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:02:03.861 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 23:02:03.876 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e25ba11: startup date [Sat Mar 21 23:02:03 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@26432f26
2020-03-21 23:02:04.829 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 23:02:05.017 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 23:02:05.195 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 23:02:05.219 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:02:05.324 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac9914cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:02:05.365 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8a932673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:02:05.371 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1181339336] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:02:05.372 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 23:02:05.376 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:02:05.413 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c8b317c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:02:05.913 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 23:02:05.924 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 23:02:05.935 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 23:02:05.935 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 23:02:05.939 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 23:02:06.026 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 23:02:06.026 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2150 ms
2020-03-21 23:02:06.254 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 23:02:06.255 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 23:02:06.262 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@aa99828
2020-03-21 23:02:06.637 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 23:02:08.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 23:02:08.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 23:02:08.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 23:02:08.212 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 23:02:08.212 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 23:02:08.286 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 23:02:08.677 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 23:02:08 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e25ba11
2020-03-21 23:02:08.692 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:02:08.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 23:02:08.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 23:02:08.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 23:02:08.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 23:02:08.946 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.946 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.954 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 23:02:08.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 23:02:08.956 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 23:02:08.957 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 23:02:08.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 23:02:08.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 23:02:08.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 23:02:08.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 23:02:08.958 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 23:02:08.960 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.960 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 23:02:08.960 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.960 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 23:02:08.961 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:02:08.962 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.963 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:02:08.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:02:08.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:02:08.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:02:08.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 23:02:08.966 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.966 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:02:08.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.969 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 23:02:08.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 23:02:09.007 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 23:02:09.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e25ba11: startup date [Sat Mar 21 23:02:03 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@26432f26
2020-03-21 23:02:09.082 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 23:02:09.177 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 23:02:09.178 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 23:02:09.979 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 23:02:09.979 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 23:02:10.821 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 23:02:10.953 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 23:02:10.967 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 23:02:10.968 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 23:02:10.969 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 23:02:11.036 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 23:02:11.039 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 23:02:11.049 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 23:02:11.051 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 23:02:11.052 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 23:02:11.055 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 23:02:11.070 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 23:02:11.083 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3e25ba11,type=ConfigurationPropertiesRebinder]
2020-03-21 23:02:11.092 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 23:02:11.101 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 23:02:11.110 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 23:02:11.146 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 23:02:11.715 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 23:02:11.715 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 23:02:12.032 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 23:02:12.032 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 23:02:12.159 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 23:02:12.480 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 23:02:12.603 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 23:02:12.605 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 23:02:12.608 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 23:02:12.611 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584802932610 with initial instances count: 3
2020-03-21 23:02:12.616 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 23:02:12.617 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584802932617, current=UP, previous=STARTING]
2020-03-21 23:02:12.618 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 23:02:12.621 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 23:02:12.648 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 23:02:12.674 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 23:02:12.679 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 23:02:12.681 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 23:02:12.695 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 23:02:12.696 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 23:02:12.698 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.435 seconds (JVM running for 17.587)
2020-03-21 23:02:13.039 [RMI TCP Connection(1)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 23:02:13.549 [RMI TCP Connection(1)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 23:02:13.674 [RMI TCP Connection(3)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 23:02:13.675 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 23:02:13.689 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-03-21 23:03:15.520 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1828f2a1: startup date [Sat Mar 21 23:03:15 CST 2020]; root of context hierarchy
2020-03-21 23:03:15.666 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:03:15.695 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4530a285] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:16.266 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:538)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:497)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:465)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$6(ConfigFileApplicationListener.java:447)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$7(ConfigFileApplicationListener.java:446)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:443)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:197)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:184)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:170)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 4, column 14:
          timeout: 3600s
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:872)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:360)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:557)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:157)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:147)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:249)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:240)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:228)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:154)
	at org.yaml.snakeyaml.composer.Composer.composeDocument(Composer.java:122)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:84)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:166)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:139)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:556)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 27 common frames omitted
2020-03-21 23:03:40.437 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3fb1203f: startup date [Sat Mar 21 23:03:40 CST 2020]; root of context hierarchy
2020-03-21 23:03:40.607 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:03:40.638 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b8e86b5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:41.260 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 23:03:41.276 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15d79cfb: startup date [Sat Mar 21 23:03:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3fb1203f
2020-03-21 23:03:42.229 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 23:03:42.421 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 23:03:42.604 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b95289e3-8009-30b4-a0bf-6b73044cade5
2020-03-21 23:03:42.628 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:03:42.730 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9cce6860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:42.763 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$7ac87a07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:42.771 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2005504897] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:42.772 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 23:03:42.775 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:42.817 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b8e86b5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 23:03:43.213 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 23:03:43.224 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 23:03:43.231 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 23:03:43.231 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 23:03:43.235 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 23:03:43.325 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 23:03:43.325 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2049 ms
2020-03-21 23:03:43.555 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 23:03:43.556 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 23:03:43.562 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7cc1d9ad
2020-03-21 23:03:43.935 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 23:03:45.578 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 23:03:45.578 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 23:03:45.579 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 23:03:45.579 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 23:03:45.579 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 23:03:45.666 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 23:03:46.106 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 23:03:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15d79cfb
2020-03-21 23:03:46.121 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 23:03:46.375 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 23:03:46.376 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 23:03:46.376 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 23:03:46.376 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 23:03:46.377 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.377 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.378 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.379 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 23:03:46.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 23:03:46.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 23:03:46.387 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 23:03:46.388 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 23:03:46.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 23:03:46.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 23:03:46.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 23:03:46.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 23:03:46.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 23:03:46.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 23:03:46.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 23:03:46.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:03:46.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:03:46.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:03:46.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:03:46.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 23:03:46.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 23:03:46.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/virtualAmount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.virtualAmount(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 23:03:46.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 23:03:46.438 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 23:03:46.476 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15d79cfb: startup date [Sat Mar 21 23:03:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3fb1203f
2020-03-21 23:03:46.531 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 23:03:46.631 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 23:03:46.633 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 23:03:47.412 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 23:03:47.413 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 23:03:48.223 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 23:03:48.353 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 23:03:48.365 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 23:03:48.366 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 23:03:48.367 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 23:03:48.422 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 23:03:48.423 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 23:03:48.431 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 23:03:48.432 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 23:03:48.433 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 23:03:48.436 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 23:03:48.444 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 23:03:48.454 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=15d79cfb,type=ConfigurationPropertiesRebinder]
2020-03-21 23:03:48.460 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 23:03:48.466 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 23:03:48.472 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 23:03:48.502 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 23:03:48.976 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 23:03:48.976 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 23:03:49.289 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 23:03:49.289 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 23:03:49.414 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 23:03:49.736 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 23:03:49.857 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 23:03:49.860 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 23:03:49.862 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 23:03:49.865 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584803029864 with initial instances count: 3
2020-03-21 23:03:49.870 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 23:03:49.871 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584803029871, current=UP, previous=STARTING]
2020-03-21 23:03:49.872 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010: registering service...
2020-03-21 23:03:49.876 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 23:03:49.908 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.100:otc-alipay-server:9010 - registration status: 204
2020-03-21 23:03:49.929 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 23:03:49.934 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 23:03:49.937 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 23:03:49.952 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 23:03:49.954 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 23:03:49.956 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 10.413 seconds (JVM running for 17.596)
2020-03-21 23:03:50.641 [RMI TCP Connection(4)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 23:03:50.642 [RMI TCP Connection(3)-192.168.254.100] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 23:03:50.642 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 23:03:50.662 [RMI TCP Connection(3)-192.168.254.100] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-21 23:03:51.294 [RMI TCP Connection(4)-192.168.254.100] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
