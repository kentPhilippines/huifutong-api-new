2020-03-21 00:02:40.078 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@163c601f: startup date [Sat Mar 21 00:02:40 CST 2020]; root of context hierarchy
2020-03-21 00:02:40.224 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:02:40.254 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ba4ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:41.041 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:02:41.056 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b5bb947: startup date [Sat Mar 21 00:02:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@163c601f
2020-03-21 00:02:42.003 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:02:42.190 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:02:42.366 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:02:42.393 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:02:42.512 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eba04cfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.550 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$c99a5ea1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.557 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1357602960] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.558 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:02:42.561 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:42.610 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ba4ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:02:43.043 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:02:43.053 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:02:43.060 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:02:43.060 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:02:43.063 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:02:43.152 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:02:43.152 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2096 ms
2020-03-21 00:02:43.380 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:02:43.380 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:02:43.385 [localhost-startStop-1] ERROR o.s.boot.web.embedded.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'webMvcMetricsFilter' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webMvcMetricsFilter' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'simpleMeterRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: com/google/common/collect/Lists
2020-03-21 00:02:43.401 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-21 00:02:43.407 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-21 00:02:43.410 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-03-21 00:02:43.420 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-21 00:02:43.428 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:155)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:413)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	... 12 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcMetricsFilter' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.class]: Unsatisfied dependency expressed through method 'webMvcMetricsFilter' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'simpleMeterRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: com/google/common/collect/Lists
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:226)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:214)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:91)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:80)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:250)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:237)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5245)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1421)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1411)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'simpleMeterRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: com/google/common/collect/Lists
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:589)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 24 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/google/common/collect/Lists
	at com.netflix.config.PropertyWrapper.<init>(PropertyWrapper.java:41)
	at com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius$ArchaiusDynamicProperty.<init>(HystrixDynamicPropertiesArchaius.java:62)
	at com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius$StringDynamicProperty.<init>(HystrixDynamicPropertiesArchaius.java:73)
	at com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius.getString(HystrixDynamicPropertiesArchaius.java:34)
	at com.netflix.hystrix.strategy.HystrixPlugins.getPluginImplementationViaProperties(HystrixPlugins.java:344)
	at com.netflix.hystrix.strategy.HystrixPlugins.getPluginImplementation(HystrixPlugins.java:334)
	at com.netflix.hystrix.strategy.HystrixPlugins.getEventNotifier(HystrixPlugins.java:129)
	at io.micrometer.core.instrument.binder.hystrix.HystrixMetricsBinder.bindTo(HystrixMetricsBinder.java:35)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer.lambda$addBinders$1(MeterRegistryConfigurer.java:83)
	at java.util.LinkedHashMap$LinkedValues.forEach(LinkedHashMap.java:608)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer.addBinders(MeterRegistryConfigurer.java:83)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryConfigurer.configure(MeterRegistryConfigurer.java:65)
	at org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor.postProcessAfterInitialization(MeterRegistryPostProcessor.java:51)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1712)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	... 34 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.google.common.collect.Lists
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 50 common frames omitted
2020-03-21 00:21:30.500 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2de5c: startup date [Sat Mar 21 00:21:30 CST 2020]; root of context hierarchy
2020-03-21 00:21:30.645 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:30.677 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f02dd47d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:31.551 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:21:31.567 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec: startup date [Sat Mar 21 00:21:31 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2de5c
2020-03-21 00:21:32.523 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:21:32.707 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:21:32.887 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:21:32.911 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:33.015 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d413d180] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.048 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b20de327] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.054 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1772626522] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.055 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:21:33.058 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.090 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f02dd47d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:21:33.500 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:21:33.510 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:21:33.517 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:21:33.517 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:21:33.521 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:21:33.608 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:21:33.608 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2041 ms
2020-03-21 00:21:33.839 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:21:33.839 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:21:33.847 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@64193b7c
2020-03-21 00:21:34.298 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:21:36.189 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:21:36.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:21:36.275 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:21:36.789 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:21:36 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec
2020-03-21 00:21:36.808 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:37.040 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:21:37.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:21:37.042 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:21:37.043 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:21:37.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.052 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:21:37.057 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:21:37.058 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:21:37.059 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:21:37.060 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:21:37.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:21:37.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:21:37.061 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:21:37.062 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.063 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:21:37.064 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.065 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.067 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:21:37.068 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:21:37.069 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.070 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.072 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:21:37.073 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:21:37.109 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:21:37.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec: startup date [Sat Mar 21 00:21:31 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66d2de5c
2020-03-21 00:21:37.182 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:21:37.308 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:21:37.310 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:21:38.383 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:21:38.383 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:21:39.287 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:21:39.409 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:21:39.419 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:21:39.420 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:21:39.421 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:21:39.472 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:21:39.473 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:21:39.479 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:21:39.481 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:21:39.482 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:21:39.484 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:21:39.496 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:21:39.509 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4707feec,type=ConfigurationPropertiesRebinder]
2020-03-21 00:21:39.515 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:21:39.522 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:21:39.533 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:21:39.581 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:21:40.240 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:21:40.240 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:21:40.597 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:21:40.597 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:21:40.735 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:21:41.166 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:21:41.909 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:21:41.910 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:21:41.912 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:21:41.916 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721301914 with initial instances count: 0
2020-03-21 00:21:41.923 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:21:41.924 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721301924, current=UP, previous=STARTING]
2020-03-21 00:21:41.925 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:21:41.928 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:21:41.988 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:21:41.994 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:21:41.997 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:21:42.013 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:21:42.014 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:21:42.016 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.538 seconds (JVM running for 20.494)
2020-03-21 00:21:42.107 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:21:43.194 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:21:43.194 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:21:43.195 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:21:43.213 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-21 00:21:43.757 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:21:55.771 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 00:21:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4707feec
2020-03-21 00:21:55.808 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:21:55.969 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 00:21:55.986 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 00:21:55.990 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 00:21:55.995 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 00:21:56.001 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4236c5ce
2020-03-21 00:21:56.059 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:21:56.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:21:56.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:21:56.060 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:21:56.065 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@71a9220a
2020-03-21 00:21:56.071 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:22:11.912 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-21 00:22:11.913 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:22:11.945 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:23:59.394 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab7fdd3: startup date [Sat Mar 21 00:23:59 CST 2020]; root of context hierarchy
2020-03-21 00:23:59.537 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:23:59.566 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bfa2bd3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:00.341 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:24:00.357 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133: startup date [Sat Mar 21 00:24:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab7fdd3
2020-03-21 00:24:01.289 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:24:01.484 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:24:01.659 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:24:01.684 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:24:01.790 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a388ba3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.824 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8182cbe5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.830 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1553914521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.831 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:24:01.835 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:01.872 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bfa2bd3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:24:02.337 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:24:02.348 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:24:02.357 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:24:02.357 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:24:02.360 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:24:02.457 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:24:02.457 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2100 ms
2020-03-21 00:24:02.688 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:24:02.688 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:24:02.695 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@78a927b2
2020-03-21 00:24:03.078 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:24:04.993 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:24:04.994 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:24:05.069 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:24:05.463 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:24:05 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133
2020-03-21 00:24:05.478 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:24:05.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:24:05.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:24:05.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:24:05.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:24:05.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:24:05.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:24:05.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:24:05.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:24:05.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:24:05.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:24:05.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:24:05.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.695 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.696 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.697 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:24:05.698 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:24:05.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:24:05.699 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.700 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.701 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:24:05.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:24:05.703 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:24:05.740 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:24:05.776 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133: startup date [Sat Mar 21 00:24:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab7fdd3
2020-03-21 00:24:05.813 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:24:05.907 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:24:05.908 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:24:07.021 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:24:07.021 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:24:07.891 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:24:08.033 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:24:08.044 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:24:08.045 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:24:08.046 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:24:08.098 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:24:08.099 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:24:08.106 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:24:08.108 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:24:08.109 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:24:08.111 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:24:08.118 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:24:08.127 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=709bf133,type=ConfigurationPropertiesRebinder]
2020-03-21 00:24:08.134 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:24:08.141 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:24:08.146 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:24:08.174 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:24:08.728 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:24:08.728 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:24:09.039 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:24:09.040 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:24:09.165 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:24:09.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:24:13.654 [restartedMain] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a$$FastClassBySpringCGLIB$$6ba36a88.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 72 common frames omitted
2020-03-21 00:24:13.655 [restartedMain] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:13.656 [restartedMain] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a$$FastClassBySpringCGLIB$$6ba36a88.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$c70bb65a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-03-21 00:24:13.656 [restartedMain] WARN  com.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2020-03-21 00:24:13.657 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:24:13.659 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:24:13.662 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721453661 with initial instances count: 0
2020-03-21 00:24:13.668 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:24:13.669 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721453669, current=UP, previous=STARTING]
2020-03-21 00:24:13.670 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:24:13.673 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:24:13.728 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:24:13.734 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:24:13.737 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:24:13.752 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:24:13.753 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:24:13.755 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 15.309 seconds (JVM running for 22.794)
2020-03-21 00:24:14.988 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:24:14.988 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:24:14.989 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:24:15.004 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 00:24:15.499 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:24:17.704 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-03-21 00:24:17.704 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:17.705 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:17.705 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:33.268 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Sat Mar 21 00:24:33 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@709bf133
2020-03-21 00:24:33.305 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:24:33.469 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-21 00:24:33.499 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-21 00:24:33.503 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-21 00:24:33.507 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-21 00:24:33.510 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4df1b6af
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:33.570 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:33.573 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@449927d5
2020-03-21 00:24:33.593 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:35.002 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:35.003 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:35.003 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:35.003 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:35.004 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3145093b
2020-03-21 00:24:35.009 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:37.441 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:37.442 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7c0ef69a
2020-03-21 00:24:37.443 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:24:43.658 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:24:44.002 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-21 00:24:44.106 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:44.637 [http-nio-9010-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:195)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSessionId(SessionRepositoryFilter.java:354)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:237)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:150)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy151.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	... 38 common frames omitted
2020-03-21 00:24:44.646 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:44.646 [http-nio-9010-exec-4] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$SpelView - Cannot render error page for request [/] and exception [Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out] as the response has already been committed. As a result, the response may have the wrong status code.
2020-03-21 00:24:44.903 [http-nio-9010-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy151.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:193)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:862)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$12(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:231)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.entries(DefaultBoundHashOperations.java:172)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(RedisOperationsSessionRepository.java:429)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:398)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.findById(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSession(SessionRepositoryFilter.java:364)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:301)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:197)
	at org.springframework.web.servlet.support.SessionFlashMapManager.retrieveFlashMaps(SessionFlashMapManager.java:47)
	at org.springframework.web.servlet.support.AbstractFlashMapManager.retrieveAndUpdate(AbstractFlashMapManager.java:93)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:916)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:44.910 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:44.981 [hystrix-otc-task-config-server-4] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:44.985 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@7ef76bbb
2020-03-21 00:24:44.985 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-21 00:24:44.989 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:45.001 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7009ba88[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 00:24:45.025 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:45.034 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@526f3ef1[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 00:24:45.053 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:45.135 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:47.669 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-03-21 00:24:47.669 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:47.669 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:47.694 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2020-03-21 00:24:47.695 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:47.695 [DiscoveryClient-HeartbeatExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:47.707 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:24:47.933 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:48.258 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@64165325[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-21 00:24:48.261 [hystrix-otc-task-config-server-5] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-21 00:24:48.262 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7c48267a
2020-03-21 00:24:48.268 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-21 00:24:48.269 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-21 00:24:48.275 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-21 00:24:48.281 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-21 00:24:48.282 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-21 00:24:48.283 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-21 00:24:48.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-21 00:24:48.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-21 00:24:48.286 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-21 00:24:48.297 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:48.297 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:48.308 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:49.709 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:50.039 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:50.165 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:24:51.716 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2020-03-21 00:24:51.717 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:24:51.717 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:24:51.717 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:25:17.670 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:25:21.677 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-03-21 00:25:21.677 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:25:21.677 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:21.714 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2020-03-21 00:25:21.714 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:25:21.714 [DiscoveryClient-HeartbeatExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:21.717 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:25:25.745 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2020-03-21 00:25:25.745 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-21 00:25:25.745 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:25.746 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:25:51.679 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:25:51.816 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - Re-registering apps/OTC-ALIPAY-SERVER
2020-03-21 00:25:51.816 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:25:51.822 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:25:51.896 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:26:16.423 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@601ccdd6: startup date [Sat Mar 21 00:26:16 CST 2020]; root of context hierarchy
2020-03-21 00:26:16.585 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:26:16.613 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea514357] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:17.381 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:26:17.397 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@585c5666: startup date [Sat Mar 21 00:26:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@601ccdd6
2020-03-21 00:26:18.399 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:26:18.591 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:26:18.765 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:26:18.789 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:26:18.901 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce37405a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.937 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ac315201] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.943 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1750430284] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.944 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:26:18.947 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:18.996 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea514357] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:26:19.392 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:26:19.402 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:26:19.411 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:26:19.411 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:26:19.414 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:26:19.498 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:26:19.498 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2101 ms
2020-03-21 00:26:19.723 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:26:19.723 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:26:19.730 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@75c08c78
2020-03-21 00:26:20.102 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:26:22.015 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:26:22.016 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:26:22.098 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:26:22.520 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:26:22 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@585c5666
2020-03-21 00:26:22.536 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:26:22.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:26:22.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:26:22.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:26:22.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:26:22.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.744 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:26:22.750 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:26:22.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:26:22.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:26:22.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:26:22.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:26:22.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:26:22.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:26:22.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:26:22.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:26:22.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:26:22.766 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:26:22.806 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:26:22.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@585c5666: startup date [Sat Mar 21 00:26:17 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@601ccdd6
2020-03-21 00:26:22.881 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:26:22.976 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:26:22.977 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:26:23.984 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:26:23.985 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:26:24.810 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:26:24.933 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:26:24.943 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:26:24.944 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:26:24.945 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:26:24.993 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:26:24.994 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:26:25.001 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:26:25.002 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:26:25.003 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:26:25.006 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:26:25.012 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:26:25.022 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=585c5666,type=ConfigurationPropertiesRebinder]
2020-03-21 00:26:25.027 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:26:25.034 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:26:25.040 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:26:25.070 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:26:25.646 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:26:25.646 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:26:25.960 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:26:25.960 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:26:26.081 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:26:26.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:26:26.626 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:26:26.628 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:26:26.630 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:26:26.633 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721586632 with initial instances count: 2
2020-03-21 00:26:26.638 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:26:26.639 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721586639, current=UP, previous=STARTING]
2020-03-21 00:26:26.641 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:26:26.644 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:26:26.673 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:26:26.696 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:26:26.701 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:26:26.704 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:26:26.721 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:26:26.722 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:26:26.724 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.333 seconds (JVM running for 18.584)
2020-03-21 00:26:28.042 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:26:28.042 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:26:28.042 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:26:28.058 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-21 00:26:28.600 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:26:34.738 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:26:35.382 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:26:35.604 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-21 00:28:17.941 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1253e3c9: startup date [Sat Mar 21 00:28:17 CST 2020]; root of context hierarchy
2020-03-21 00:28:18.085 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:28:18.114 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$84dde5db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:18.961 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:28:18.982 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2edf55fc: startup date [Sat Mar 21 00:28:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1253e3c9
2020-03-21 00:28:19.975 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:28:20.181 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:28:20.361 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:28:20.385 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:28:20.489 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68c3e2de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.524 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$46bdf485] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.530 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/20577343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.530 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:28:20.533 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.576 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$84dde5db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:28:20.989 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:28:20.999 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:28:21.006 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:28:21.006 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:28:21.010 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:28:21.097 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:28:21.097 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2115 ms
2020-03-21 00:28:21.326 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:28:21.326 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:28:21.333 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@cd4d8e8
2020-03-21 00:28:21.704 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:28:23.596 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:28:23.672 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:28:24.060 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:28:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2edf55fc
2020-03-21 00:28:24.076 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:28:24.274 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:28:24.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:28:24.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:28:24.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:28:24.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.280 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:28:24.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:28:24.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:28:24.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:28:24.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:28:24.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:28:24.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:28:24.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:28:24.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.294 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:28:24.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:28:24.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:28:24.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:28:24.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:28:24.308 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:28:24.348 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:28:24.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2edf55fc: startup date [Sat Mar 21 00:28:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1253e3c9
2020-03-21 00:28:24.425 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:28:24.550 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:28:24.551 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:28:25.665 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:28:25.666 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:28:26.481 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:28:26.604 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:28:26.614 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:28:26.615 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:28:26.616 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:28:26.665 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:28:26.666 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:28:26.673 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:28:26.675 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:28:26.676 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:28:26.679 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:28:26.688 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:28:26.698 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2edf55fc,type=ConfigurationPropertiesRebinder]
2020-03-21 00:28:26.706 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:28:26.714 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:28:26.721 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:28:26.751 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:28:27.324 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:28:27.324 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:28:27.635 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:28:27.635 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:28:27.762 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:28:28.200 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:28:28.316 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:28:28.319 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:28:28.321 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:28:28.323 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721708323 with initial instances count: 2
2020-03-21 00:28:28.329 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:28:28.330 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721708330, current=UP, previous=STARTING]
2020-03-21 00:28:28.331 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:28:28.334 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:28:28.360 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:28:28.387 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:28:28.392 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:28:28.395 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:28:28.412 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:28:28.413 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:28:28.415 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.527 seconds (JVM running for 18.845)
2020-03-21 00:28:29.145 [RMI TCP Connection(6)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:28:29.145 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:28:29.145 [RMI TCP Connection(6)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:28:29.160 [RMI TCP Connection(6)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 00:28:29.713 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-21 00:29:39.813 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@354a16c9: startup date [Sat Mar 21 00:29:39 CST 2020]; root of context hierarchy
2020-03-21 00:29:39.954 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:29:39.985 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5afa682a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:40.755 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-21 00:29:40.772 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512: startup date [Sat Mar 21 00:29:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@354a16c9
2020-03-21 00:29:41.707 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 00:29:41.894 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-21 00:29:42.072 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=e33139fa-26ca-3ac9-b4dd-3d3076a7bd56
2020-03-21 00:29:42.096 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:29:42.200 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3ee0652d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.234 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1cda76d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.241 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/782765344] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.242 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-21 00:29:42.244 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.276 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5afa682a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 00:29:42.679 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-21 00:29:42.689 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-21 00:29:42.696 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-21 00:29:42.697 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-21 00:29:42.700 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-21 00:29:42.788 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-21 00:29:42.788 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2016 ms
2020-03-21 00:29:43.020 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:29:43.021 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:29:43.029 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1592ca4c
2020-03-21 00:29:43.448 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-21 00:29:45.435 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-21 00:29:45.436 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-21 00:29:45.511 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-21 00:29:45.905 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Sat Mar 21 00:29:45 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512
2020-03-21 00:29:45.919 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-21 00:29:46.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-21 00:29:46.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:29:46.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-21 00:29:46.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-21 00:29:46.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.pay(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/merchant/withdrawal],methods=[POST]}" onto public otc.result.Result alipay.manage.api.VendorRequestApi.withdrawal(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.135 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.136 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.139 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.139 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.139 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-21 00:29:46.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-21 00:29:46.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-21 00:29:46.146 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-21 00:29:46.147 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-21 00:29:46.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-21 00:29:46.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-21 00:29:46.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-21 00:29:46.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:29:46.155 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:29:46.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-21 00:29:46.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.157 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.158 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-21 00:29:46.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-21 00:29:46.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:29:46.199 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-21 00:29:46.236 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7cb4d512: startup date [Sat Mar 21 00:29:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@354a16c9
2020-03-21 00:29:46.275 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-21 00:29:46.369 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-21 00:29:46.371 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-21 00:29:47.385 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-21 00:29:47.385 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 00:29:48.250 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-21 00:29:48.374 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 00:29:48.385 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:29:48.386 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-21 00:29:48.386 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-21 00:29:48.443 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-21 00:29:48.444 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-21 00:29:48.451 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-21 00:29:48.453 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-21 00:29:48.454 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-21 00:29:48.458 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-21 00:29:48.464 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-21 00:29:48.473 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7cb4d512,type=ConfigurationPropertiesRebinder]
2020-03-21 00:29:48.479 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-21 00:29:48.485 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-21 00:29:48.492 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-21 00:29:48.519 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-21 00:29:49.171 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-21 00:29:49.171 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-21 00:29:49.533 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-21 00:29:49.533 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-21 00:29:49.675 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-21 00:29:50.103 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-21 00:29:50.222 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-21 00:29:50.225 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-21 00:29:50.227 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 00:29:50.230 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584721790229 with initial instances count: 2
2020-03-21 00:29:50.235 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-21 00:29:50.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584721790236, current=UP, previous=STARTING]
2020-03-21 00:29:50.237 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-21 00:29:50.240 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-21 00:29:50.266 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-21 00:29:50.295 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-21 00:29:50.300 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-21 00:29:50.303 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-21 00:29:50.316 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-21 00:29:50.317 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-21 00:29:50.319 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.46 seconds (JVM running for 18.935)
2020-03-21 00:29:51.465 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-21 00:29:51.465 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-21 00:29:51.465 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-21 00:29:51.480 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-21 00:29:52.056 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
