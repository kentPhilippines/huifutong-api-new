2020-03-20 00:21:04.227 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m24s879ms804µs500ns).
2020-03-20 00:21:47.197 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 04:35:32.394 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4h13m28s150ms880µs500ns).
2020-03-20 09:09:13.304 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4h33m40s909ms852µs400ns).
2020-03-20 09:15:53.495 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4afc759: startup date [Fri Mar 20 09:15:53 CST 2020]; root of context hierarchy
2020-03-20 09:15:53.654 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:15:53.688 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f492e382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:15:54.481 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 09:15:54.498 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35906e8: startup date [Fri Mar 20 09:15:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4afc759
2020-03-20 09:15:55.567 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 09:15:55.777 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 09:15:55.971 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=f5dd6ec5-4467-361e-9e0d-d1827e45d5ab
2020-03-20 09:15:56.001 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:15:56.111 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d878e085] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:15:56.153 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b672f22c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:15:56.159 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2002489636] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:15:56.160 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 09:15:56.163 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:15:56.196 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f492e382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:15:56.712 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 09:15:56.727 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 09:15:56.742 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 09:15:56.743 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 09:15:56.749 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 09:15:56.840 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 09:15:56.840 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2342 ms
2020-03-20 09:15:57.065 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 09:15:57.065 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 09:15:57.073 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3f6ec31e
2020-03-20 09:15:57.547 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 09:15:59.463 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 09:15:59.464 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 09:15:59.464 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 09:15:59.464 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 09:15:59.464 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 09:15:59.549 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 09:15:59.965 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 09:15:59 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35906e8
2020-03-20 09:15:59.984 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:16:00.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 09:16:00.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 09:16:00.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 09:16:00.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.170 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 09:16:00.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 09:16:00.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 09:16:00.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 09:16:00.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 09:16:00.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 09:16:00.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 09:16:00.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 09:16:00.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 09:16:00.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 09:16:00.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 09:16:00.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 09:16:00.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 09:16:00.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 09:16:00.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 09:16:00.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 09:16:00.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 09:16:00.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 09:16:00.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 09:16:00.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 09:16:00.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 09:16:00.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 09:16:00.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 09:16:00.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 09:16:00.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 09:16:00.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 09:16:00.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:16:00.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:16:00.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:16:00.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:16:00.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:16:00.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:16:00.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:16:00.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:16:00.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:16:00.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 09:16:00.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 09:16:00.239 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 09:16:00.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35906e8: startup date [Fri Mar 20 09:15:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4afc759
2020-03-20 09:16:00.322 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 09:16:00.430 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 09:16:00.432 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 09:16:01.428 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 09:16:01.428 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 09:16:02.316 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 09:16:02.443 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 09:16:02.454 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 09:16:02.456 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 09:16:02.456 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 09:16:02.506 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 09:16:02.507 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 09:16:02.514 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 09:16:02.515 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 09:16:02.516 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 09:16:02.519 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 09:16:02.527 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 09:16:02.536 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=35906e8,type=ConfigurationPropertiesRebinder]
2020-03-20 09:16:02.541 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 09:16:02.549 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 09:16:02.554 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 09:16:02.584 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 09:16:03.439 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 09:16:03.439 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 09:16:03.860 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 09:16:03.861 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 09:16:04.089 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:16:04.605 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 09:16:04.606 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 09:16:04.606 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 09:16:04.606 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 09:16:04.606 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 09:16:04.606 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 09:16:04.606 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 09:16:04.825 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 09:16:04.832 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 09:16:04.840 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 09:16:04.846 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584666964845 with initial instances count: 1
2020-03-20 09:16:04.855 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 09:16:04.856 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584666964856, current=UP, previous=STARTING]
2020-03-20 09:16:04.859 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 09:16:04.864 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 09:16:04.915 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 09:16:04.946 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 09:16:04.953 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 09:16:04.956 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 09:16:04.983 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 09:16:04.986 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 09:16:04.989 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.443 seconds (JVM running for 19.833)
2020-03-20 09:16:05.869 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 09:16:05.869 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 09:16:05.869 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 09:16:05.895 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2020-03-20 09:16:06.465 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 09:16:35.749 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 09:16:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35906e8
2020-03-20 09:16:35.785 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:16:35.913 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 09:16:35.931 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 09:16:35.939 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 09:16:35.950 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 09:16:35.957 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@f62f944
2020-03-20 09:16:36.036 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 09:16:36.036 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 09:16:36.042 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getRegisterSetting(MasterControlController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 09:16:36.649 [http-nio-9010-exec-2] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 09:16:36.685 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 09:16:44.045 [http-nio-9010-exec-3] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 09:16:44.069 [http-nio-9010-exec-3] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 09:16:44.072 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
### The error may exist in alipay/manage/mapper/UserInfoMapper.xml
### The error may involve alipay.manage.mapper.UserInfoMapper.selectByExample-Inline
### The error occurred while setting parameters
### SQL: select           'true' as QUERYID,           id, userId, userName, password, payPasword, salt, userType, switchs, userNode, email,      agent, isAgent, credit, receiveOrderState, remitOrderState, QQ, telegram, skype,      createTime, submitTime, status, retain1, retain2, retain3, retain4         from alipay_user_info                    WHERE (  userId = ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy123.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.selectByExample(Unknown Source)
	at alipay.manage.api.Impl.AccountApiSericeImpl.login(AccountApiSericeImpl.java:82)
	at alipay.manage.contorller.LoginContorller.login(LoginContorller.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy183.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 64 common frames omitted
2020-03-20 09:18:37.755 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@92bc75a: startup date [Fri Mar 20 09:18:37 CST 2020]; root of context hierarchy
2020-03-20 09:18:37.898 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:18:37.932 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ce79bb3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:18:38.733 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 09:18:38.749 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7013ee30: startup date [Fri Mar 20 09:18:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@92bc75a
2020-03-20 09:18:39.695 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 09:18:39.883 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 09:18:40.086 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=f5dd6ec5-4467-361e-9e0d-d1827e45d5ab
2020-03-20 09:18:40.113 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:18:40.223 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b25fb840] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:18:40.259 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$9059c9e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:18:40.265 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1897083425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:18:40.267 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 09:18:40.270 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:18:40.307 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ce79bb3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:18:40.785 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 09:18:40.795 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 09:18:40.802 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 09:18:40.802 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 09:18:40.806 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 09:18:40.894 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 09:18:40.894 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2145 ms
2020-03-20 09:18:41.132 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 09:18:41.132 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 09:18:41.139 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3e2192ef
2020-03-20 09:18:41.517 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 09:18:43.368 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 09:18:43.369 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 09:18:43.369 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 09:18:43.369 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 09:18:43.369 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 09:18:43.445 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 09:18:43.780 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 09:18:43 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7013ee30
2020-03-20 09:18:43.795 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:18:43.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 09:18:43.964 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 09:18:43.965 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 09:18:43.967 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.968 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.969 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.970 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.972 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.972 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.973 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.981 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 09:18:43.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 09:18:43.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 09:18:43.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 09:18:43.982 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 09:18:43.983 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 09:18:43.984 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 09:18:43.984 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 09:18:43.984 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 09:18:43.984 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 09:18:43.984 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 09:18:43.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 09:18:43.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 09:18:43.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 09:18:43.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 09:18:43.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 09:18:43.987 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 09:18:43.987 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 09:18:43.988 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 09:18:43.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 09:18:43.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 09:18:43.992 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:18:43.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:18:43.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:18:43.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:18:43.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:18:43.993 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:18:43.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:18:43.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:18:43.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:18:43.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:43.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:44.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 09:18:44.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 09:18:44.060 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 09:18:44.111 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7013ee30: startup date [Fri Mar 20 09:18:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@92bc75a
2020-03-20 09:18:44.149 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 09:18:44.278 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 09:18:44.280 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 09:18:45.253 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 09:18:45.253 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 09:18:46.143 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 09:18:46.260 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 09:18:46.272 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 09:18:46.273 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 09:18:46.273 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 09:18:46.326 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 09:18:46.327 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 09:18:46.333 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 09:18:46.335 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 09:18:46.336 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 09:18:46.339 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 09:18:46.348 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 09:18:46.357 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7013ee30,type=ConfigurationPropertiesRebinder]
2020-03-20 09:18:46.363 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 09:18:46.370 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 09:18:46.377 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 09:18:46.416 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 09:18:46.962 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 09:18:46.962 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 09:18:47.283 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 09:18:47.283 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 09:18:47.404 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 09:18:47.810 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 09:18:47.930 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 09:18:47.932 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 09:18:47.934 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 09:18:47.937 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584667127936 with initial instances count: 2
2020-03-20 09:18:47.943 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 09:18:47.943 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584667127943, current=UP, previous=STARTING]
2020-03-20 09:18:47.944 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 09:18:47.947 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 09:18:47.979 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 09:18:48.005 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 09:18:48.011 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 09:18:48.014 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 09:18:48.029 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 09:18:48.030 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 09:18:48.033 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.229 seconds (JVM running for 18.588)
2020-03-20 09:18:48.720 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 09:18:48.720 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 09:18:48.720 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 09:18:48.736 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 09:18:49.277 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 09:19:05.012 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 09:19:05 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7013ee30
2020-03-20 09:19:05.053 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:19:05.209 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 09:19:05.226 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 09:19:05.232 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 09:19:05.240 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 09:19:05.245 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3a71a522
2020-03-20 09:19:05.300 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 09:19:05.300 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 09:19:05.321 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 09:19:15.215 [http-nio-9010-exec-7] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 09:19:15.240 [http-nio-9010-exec-7] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 09:19:15.245 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
### The error may exist in alipay/manage/mapper/UserInfoMapper.xml
### The error may involve alipay.manage.mapper.UserInfoMapper.selectByExample-Inline
### The error occurred while setting parameters
### SQL: select           'true' as QUERYID,           id, userId, userName, password, payPasword, salt, userType, switchs, userNode, email,      agent, isAgent, credit, receiveOrderState, remitOrderState, QQ, telegram, skype,      createTime, submitTime, status, retain1, retain2, retain3, retain4         from alipay_user_info                    WHERE (  userId = ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy123.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.selectByExample(Unknown Source)
	at alipay.manage.api.Impl.AccountApiSericeImpl.login(AccountApiSericeImpl.java:82)
	at alipay.manage.contorller.LoginContorller.login(LoginContorller.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain1' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy184.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 64 common frames omitted
2020-03-20 09:23:47.813 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:28:40.140 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@46609b8f: startup date [Fri Mar 20 09:28:40 CST 2020]; root of context hierarchy
2020-03-20 09:28:40.287 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:28:40.318 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c0dd499] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:28:41.253 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 09:28:41.274 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cb39bd6: startup date [Fri Mar 20 09:28:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46609b8f
2020-03-20 09:28:42.283 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 09:28:42.473 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 09:28:42.649 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=f5dd6ec5-4467-361e-9e0d-d1827e45d5ab
2020-03-20 09:28:42.673 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:28:42.777 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fff3d19c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:28:42.813 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ddede343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:28:42.820 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1768312760] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:28:42.821 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 09:28:42.824 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:28:42.869 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c0dd499] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 09:28:43.315 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 09:28:43.326 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 09:28:43.334 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 09:28:43.335 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 09:28:43.338 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 09:28:43.429 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 09:28:43.429 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2155 ms
2020-03-20 09:28:43.663 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 09:28:43.663 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 09:28:43.671 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@70326914
2020-03-20 09:28:44.051 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 09:28:45.892 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 09:28:45.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 09:28:45.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 09:28:45.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 09:28:45.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 09:28:45.977 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 09:28:46.351 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 09:28:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cb39bd6
2020-03-20 09:28:46.365 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:28:46.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 09:28:46.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 09:28:46.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 09:28:46.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 09:28:46.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 09:28:46.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 09:28:46.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 09:28:46.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 09:28:46.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 09:28:46.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 09:28:46.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 09:28:46.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 09:28:46.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 09:28:46.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 09:28:46.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 09:28:46.572 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 09:28:46.574 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:28:46.574 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:28:46.574 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:28:46.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:28:46.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:28:46.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 09:28:46.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.579 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:28:46.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:28:46.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.581 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.581 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.581 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 09:28:46.584 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 09:28:46.584 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 09:28:46.631 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 09:28:46.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cb39bd6: startup date [Fri Mar 20 09:28:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46609b8f
2020-03-20 09:28:46.716 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 09:28:46.865 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 09:28:46.866 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 09:28:47.872 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 09:28:47.872 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 09:28:48.717 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 09:28:48.839 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 09:28:48.850 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 09:28:48.851 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 09:28:48.852 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 09:28:48.900 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 09:28:48.902 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 09:28:48.910 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 09:28:48.912 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 09:28:48.912 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 09:28:48.915 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 09:28:48.921 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 09:28:48.931 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cb39bd6,type=ConfigurationPropertiesRebinder]
2020-03-20 09:28:48.937 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 09:28:48.944 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 09:28:48.951 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 09:28:48.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 09:28:49.556 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 09:28:49.557 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 09:28:49.896 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 09:28:49.897 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 09:28:50.020 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:28:50.427 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 09:28:50.427 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 09:28:50.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 09:28:50.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 09:28:50.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 09:28:50.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 09:28:50.428 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 09:28:50.547 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 09:28:50.550 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 09:28:50.552 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 09:28:50.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584667730554 with initial instances count: 2
2020-03-20 09:28:50.560 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 09:28:50.561 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584667730561, current=UP, previous=STARTING]
2020-03-20 09:28:50.562 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 09:28:50.566 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 09:28:50.592 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 09:28:50.620 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 09:28:50.625 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 09:28:50.628 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 09:28:50.645 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 09:28:50.647 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 09:28:50.649 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.602 seconds (JVM running for 19.014)
2020-03-20 09:28:51.425 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 09:28:51.425 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 09:28:51.425 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 09:28:51.448 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-20 09:28:51.962 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 09:28:58.504 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 09:28:58 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cb39bd6
2020-03-20 09:28:58.544 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 09:28:58.694 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 09:28:58.712 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 09:28:58.761 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 09:28:58.770 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 09:28:58.774 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6839b39a
2020-03-20 09:28:58.849 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 09:28:58.849 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 09:28:58.872 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 09:33:50.432 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:38:50.435 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:43:50.438 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:48:50.439 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:53:50.439 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 09:58:50.441 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:03:50.441 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:07:19.290 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@192fed83: startup date [Fri Mar 20 10:07:19 CST 2020]; root of context hierarchy
2020-03-20 10:07:19.441 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:07:19.473 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8909fc08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:07:20.260 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 10:07:20.275 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af: startup date [Fri Mar 20 10:07:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@192fed83
2020-03-20 10:07:21.333 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 10:07:21.545 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 10:07:21.867 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 10:07:21.899 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:07:22.089 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6ceff90b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:07:22.150 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$4aea0ab2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:07:22.159 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/2122035032] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:07:22.162 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 10:07:22.166 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:07:22.229 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8909fc08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:07:22.933 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 10:07:22.945 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 10:07:22.953 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 10:07:22.954 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 10:07:22.957 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 10:07:23.050 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 10:07:23.051 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2776 ms
2020-03-20 10:07:23.292 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 10:07:23.292 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 10:07:23.301 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@170517c8
2020-03-20 10:07:23.684 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 10:07:25.546 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 10:07:25.546 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 10:07:25.546 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 10:07:25.547 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 10:07:25.547 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 10:07:25.630 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 10:07:26.012 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 10:07:26 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af
2020-03-20 10:07:26.028 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:07:26.275 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 10:07:26.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 10:07:26.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 10:07:26.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.279 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.280 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.280 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.280 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.280 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 10:07:26.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 10:07:26.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 10:07:26.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 10:07:26.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 10:07:26.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 10:07:26.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 10:07:26.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 10:07:26.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 10:07:26.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 10:07:26.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:07:26.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:07:26.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:07:26.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:07:26.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:07:26.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:07:26.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest) throws alipay.config.exception.ParamException
2020-03-20 10:07:26.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 10:07:26.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 10:07:26.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 10:07:26.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 10:07:26.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:07:26.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:07:26.295 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.296 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:07:26.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 10:07:26.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 10:07:26.336 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 10:07:26.372 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af: startup date [Fri Mar 20 10:07:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@192fed83
2020-03-20 10:07:26.409 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 10:07:26.510 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 10:07:26.512 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 10:07:27.491 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 10:07:27.491 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 10:07:28.433 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 10:07:28.556 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 10:07:28.566 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 10:07:28.567 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 10:07:28.568 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 10:07:28.618 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 10:07:28.620 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 10:07:28.627 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 10:07:28.629 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 10:07:28.630 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 10:07:28.633 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 10:07:28.640 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 10:07:28.650 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=480ba7af,type=ConfigurationPropertiesRebinder]
2020-03-20 10:07:28.656 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 10:07:28.664 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 10:07:28.670 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 10:07:28.709 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 10:07:29.281 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 10:07:29.282 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 10:07:29.611 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 10:07:29.611 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 10:07:29.739 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 10:07:30.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 10:07:30.227 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 10:07:30.228 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 10:07:30.230 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 10:07:30.233 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584670050232 with initial instances count: 0
2020-03-20 10:07:30.241 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 10:07:30.241 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584670050241, current=UP, previous=STARTING]
2020-03-20 10:07:30.242 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 10:07:30.246 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 10:07:30.292 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 10:07:30.304 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 10:07:30.310 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 10:07:30.313 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 10:07:30.328 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 10:07:30.329 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 10:07:30.330 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.012 seconds (JVM running for 20.096)
2020-03-20 10:07:31.273 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 10:07:31.273 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 10:07:31.273 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 10:07:31.294 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2020-03-20 10:07:31.848 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 10:07:42.035 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 10:07:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af
2020-03-20 10:07:42.073 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:07:42.286 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 10:07:42.307 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 10:07:42.358 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 10:07:42.367 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 10:07:42.372 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2fce3187
2020-03-20 10:07:42.463 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 10:07:42.463 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 10:07:42.491 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:00.230 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 10:08:00.231 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 10:08:00.231 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 10:08:00.231 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 10:08:00.231 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 10:08:00.231 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-20 10:08:00.231 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 10:08:00.263 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 10:08:10.965 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 10:08:10.965 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 10:08:10.968 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:19.723 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 10:08:19.832 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:20.380 [http-nio-9010-exec-2] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 10:08:20.392 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@2bb240d3[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 10:08:20.402 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:20.405 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:20.408 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@667bdb55[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 10:08:20.415 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:20.508 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:25.515 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:26.032 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@590b4466[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 10:08:26.033 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:26.035 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 10:08:26.035 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 10:08:26.042 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:26.043 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:32.589 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:33.146 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:08:33.255 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 10:12:30.146 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:17:30.147 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:22:30.149 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:27:30.149 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:32:30.151 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:37:30.152 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:42:30.154 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:47:30.157 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:51:19.900 [Thread-8] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@192fed83: startup date [Fri Mar 20 10:07:19 CST 2020]; root of context hierarchy
2020-03-20 10:51:19.913 [Thread-8] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af: startup date [Fri Mar 20 10:07:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@192fed83
2020-03-20 10:51:20.335 [Thread-8] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application otc-alipay-server with eureka with status DOWN
2020-03-20 10:51:20.336 [Thread-8] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584672680336, current=DOWN, previous=UP]
2020-03-20 10:51:20.337 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 10:51:20.357 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.NoHttpResponseException: localhost:8761 failed to respond
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.NoHttpResponseException: localhost:8761 failed to respond
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:141)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2020-03-20 10:51:20.359 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.NoHttpResponseException: localhost:8761 failed to respond
2020-03-20 10:51:20.371 [DiscoveryClient-InstanceInfoReplicator-0] INFO  org.apache.http.impl.client.DefaultHttpClient - I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:8761: Software caused connection abort: socket write error
2020-03-20 10:51:20.371 [DiscoveryClient-InstanceInfoReplicator-0] INFO  org.apache.http.impl.client.DefaultHttpClient - Retrying request to {}->http://localhost:8761
2020-03-20 10:51:20.408 [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.client.ClientProtocolException
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.client.ClientProtocolException: null
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:839)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
Caused by: org.apache.http.client.NonRepeatableRequestException: Cannot retry request with a non-repeatable request entity.  The cause lists the reason the original request failed.
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:658)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	... 33 common frames omitted
Caused by: java.net.SocketException: Software caused connection abort: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:160)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:168)
	at org.apache.http.impl.io.ChunkedOutputStream.flush(ChunkedOutputStream.java:192)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2657)
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:381)
	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1726)
	at com.netflix.discovery.converters.EurekaJacksonCodec$InstanceInfoSerializer.serialize(EurekaJacksonCodec.java:371)
	at com.netflix.discovery.converters.EurekaJacksonCodec$InstanceInfoSerializer.serialize(EurekaJacksonCodec.java:327)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:468)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:397)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1392)
	at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1120)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:950)
	at com.netflix.discovery.converters.EurekaJacksonCodec.writeTo(EurekaJacksonCodec.java:221)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.encode(CodecWrappers.java:304)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.writeTo(DiscoveryJerseyProvider.java:135)
	at com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl.writeRequestEntity(RequestWriter.java:231)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2.writeTo(ApacheHttpClient4Handler.java:289)
	at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:94)
	at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
	at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
	at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:266)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.sendRequestEntity(AbstractClientConnAdapter.java:239)
	at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	... 35 common frames omitted
	Suppressed: java.net.SocketException: Software caused connection abort: socket write error
		at java.net.SocketOutputStream.socketWrite0(Native Method)
		at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
		at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
		at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:160)
		at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:168)
		at org.apache.http.impl.io.ChunkedOutputStream.close(ChunkedOutputStream.java:203)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1138)
		at com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(ClassUtil.java:487)
		at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1122)
		... 49 common frames omitted
2020-03-20 10:51:20.409 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.client.ClientProtocolException
2020-03-20 10:51:20.430 [Thread-8] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
2020-03-20 10:51:20.484 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 10:51:20.485 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 10:51:20.750 [Thread-8] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-03-20 10:51:20.765 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-03-20 10:51:20.771 [Thread-8] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-03-20 10:51:20.783 [Thread-8] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 10:07:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af
2020-03-20 10:51:20.839 [Thread-8] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 10:51:20.845 [Thread-8] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Fri Mar 20 10:07:26 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@480ba7af
2020-03-20 10:51:20.851 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-20 10:51:23.853 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-20 10:51:28.005 [Thread-8] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy117.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:100)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:85)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1000)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:312)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:252)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:637)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 58 common frames omitted
2020-03-20 10:51:28.006 [Thread-8] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-03-20 10:51:28.006 [Thread-8] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy117.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:100)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:85)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1000)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:312)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:252)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:637)
2020-03-20 10:51:28.016 [Thread-8] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-20 10:51:29.139 [Thread-8] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-03-20 10:51:29.144 [Thread-8] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-03-20 10:51:36.590 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5bbc25d4: startup date [Fri Mar 20 10:51:36 CST 2020]; root of context hierarchy
2020-03-20 10:51:36.602 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:51:36.604 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8909fc08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:51:37.376 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 10:51:37.379 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@493a43be: startup date [Fri Mar 20 10:51:37 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5bbc25d4
2020-03-20 10:51:38.050 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 10:51:38.152 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 10:51:38.200 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 10:51:38.217 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:51:38.243 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6ceff90b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:51:38.252 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$4aea0ab2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:51:38.258 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$851/48711124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:51:38.259 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 10:51:38.261 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:51:38.267 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8909fc08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 10:51:38.384 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 10:51:38.385 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 10:51:38.385 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 10:51:38.385 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 10:51:38.406 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 10:51:38.407 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1028 ms
2020-03-20 10:51:40.216 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 10:51:40.217 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 10:51:40.217 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 10:51:40.217 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 10:51:40.217 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 10:51:40.261 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 10:51:40.414 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 10:51:40 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@493a43be
2020-03-20 10:51:40.424 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 10:51:40.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 10:51:40.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 10:51:40.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 10:51:40.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 10:51:40.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 10:51:40.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 10:51:40.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 10:51:40.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 10:51:40.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 10:51:40.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 10:51:40.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 10:51:40.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 10:51:40.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 10:51:40.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 10:51:40.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 10:51:40.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 10:51:40.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:51:40.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:51:40.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:51:40.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:51:40.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:51:40.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 10:51:40.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest) throws alipay.config.exception.ParamException
2020-03-20 10:51:40.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 10:51:40.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 10:51:40.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 10:51:40.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 10:51:40.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:51:40.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:51:40.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 10:51:40.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 10:51:40.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 10:51:40.589 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 10:51:40.605 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@493a43be: startup date [Fri Mar 20 10:51:37 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5bbc25d4
2020-03-20 10:51:40.628 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 10:51:40.685 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 10:51:40.685 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 10:51:41.012 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 10:51:41.073 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 10:51:41.075 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 10:51:41.075 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 10:51:41.075 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 10:51:41.107 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 10:51:41.107 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 10:51:41.111 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 10:51:41.113 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 10:51:41.113 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 10:51:41.116 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 10:51:41.118 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 10:51:41.120 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=493a43be,type=ConfigurationPropertiesRebinder]
2020-03-20 10:51:41.123 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 10:51:41.127 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 10:51:41.128 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 10:51:41.130 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 10:51:41.132 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 10:51:41.132 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 10:51:41.132 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 10:51:41.132 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 10:51:41.178 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 10:51:41.179 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 10:51:41.183 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 10:51:41.184 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 10:51:41.184 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 10:51:41.186 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584672701186 with initial instances count: 0
2020-03-20 10:51:41.189 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 10:51:41.189 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584672701189, current=UP, previous=STARTING]
2020-03-20 10:51:41.189 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 10:51:41.192 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 10:51:41.200 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 10:51:41.210 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 10:51:41.211 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 10:51:41.216 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 10:51:41.220 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 10:51:41.221 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 10:51:41.221 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 5.412 seconds (JVM running for 2670.987)
2020-03-20 10:51:41.225 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-20 10:52:11.187 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 10:52:11.197 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 12:16:58.650 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6f7bf17d: startup date [Fri Mar 20 12:16:58 CST 2020]; root of context hierarchy
2020-03-20 12:16:58.796 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:16:58.826 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9fcc4df9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:16:59.546 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 12:16:59.563 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18f6f993: startup date [Fri Mar 20 12:16:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f7bf17d
2020-03-20 12:17:00.548 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 12:17:00.788 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 12:17:00.986 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 12:17:01.015 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:17:01.146 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$83b24afc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:17:01.184 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$61ac5ca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:17:01.190 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/110210932] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:17:01.191 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 12:17:01.194 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:17:01.232 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9fcc4df9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:17:01.655 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 12:17:01.664 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 12:17:01.671 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 12:17:01.672 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 12:17:01.675 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 12:17:01.760 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 12:17:01.761 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2198 ms
2020-03-20 12:17:01.991 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 12:17:01.992 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 12:17:01.999 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1a06dddf
2020-03-20 12:17:02.430 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 12:17:04.229 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 12:17:04.229 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 12:17:04.229 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 12:17:04.229 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 12:17:04.229 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 12:17:04.308 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 12:17:04.732 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 12:17:04 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18f6f993
2020-03-20 12:17:04.750 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:17:05.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 12:17:05.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 12:17:05.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 12:17:05.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 12:17:05.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 12:17:05.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 12:17:05.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 12:17:05.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 12:17:05.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 12:17:05.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 12:17:05.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 12:17:05.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 12:17:05.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 12:17:05.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 12:17:05.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:17:05.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:17:05.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:17:05.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:17:05.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:17:05.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:17:05.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:17:05.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:17:05.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest) throws alipay.config.exception.ParamException
2020-03-20 12:17:05.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:17:05.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:17:05.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 12:17:05.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 12:17:05.061 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 12:17:05.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18f6f993: startup date [Fri Mar 20 12:16:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f7bf17d
2020-03-20 12:17:05.136 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 12:17:05.245 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 12:17:05.246 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 12:17:08.171 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'enableRedisKeyspaceNotificationsInitializer' defined in org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
2020-03-20 12:17:08.173 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Fri Mar 20 12:17:04 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18f6f993
2020-03-20 12:17:08.175 [restartedMain] WARN  o.s.beans.factory.support.DisposableBeanAdapter - Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-20 12:17:09.301 [restartedMain] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-03-20 12:17:09.305 [localhost-startStop-1] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)
2020-03-20 12:17:09.317 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-03-20 12:17:09.325 [restartedMain] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'enableRedisKeyspaceNotificationsInitializer' defined in org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:137)
	at alipay.AlipayApplication.main(AlipayApplication.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:966)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:934)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:786)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:300)
	at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$EnableRedisKeyspaceNotificationsInitializer.afterPropertiesSet(RedisHttpSessionConfiguration.java:284)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1767)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 20 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:233)
	at io.lettuce.core.RedisClient.connectStandalone(RedisClient.java:253)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:202)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:56)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:959)
	... 26 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /127.0.0.1:6379
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	... 11 common frames omitted
2020-03-20 12:18:38.239 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@21a24126: startup date [Fri Mar 20 12:18:38 CST 2020]; root of context hierarchy
2020-03-20 12:18:38.382 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:18:38.411 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bd1c4a62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:18:39.128 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 12:18:39.146 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6764d119: startup date [Fri Mar 20 12:18:39 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@21a24126
2020-03-20 12:18:40.096 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 12:18:40.284 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 12:18:40.463 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 12:18:40.490 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:18:40.592 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1024765] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:18:40.625 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$7efc590c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:18:40.632 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/463753893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:18:40.633 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 12:18:40.636 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:18:40.667 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bd1c4a62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:18:41.099 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 12:18:41.109 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 12:18:41.118 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 12:18:41.118 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 12:18:41.121 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 12:18:41.207 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 12:18:41.207 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2061 ms
2020-03-20 12:18:41.445 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 12:18:41.445 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 12:18:41.452 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@64fb9f00
2020-03-20 12:18:41.861 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 12:18:43.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 12:18:43.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 12:18:43.656 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 12:18:43.656 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 12:18:43.656 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 12:18:43.733 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 12:18:44.069 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 12:18:44 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6764d119
2020-03-20 12:18:44.086 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:18:44.323 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 12:18:44.324 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 12:18:44.324 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 12:18:44.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 12:18:44.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 12:18:44.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 12:18:44.336 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 12:18:44.337 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 12:18:44.337 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 12:18:44.337 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 12:18:44.337 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 12:18:44.337 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 12:18:44.337 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 12:18:44.338 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.338 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 12:18:44.338 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 12:18:44.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:18:44.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:18:44.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:18:44.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:18:44.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:18:44.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:18:44.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:18:44.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:18:44.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest) throws alipay.config.exception.ParamException
2020-03-20 12:18:44.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:18:44.344 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 12:18:44.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:18:44.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 12:18:44.349 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 12:18:44.386 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 12:18:44.420 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6764d119: startup date [Fri Mar 20 12:18:39 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@21a24126
2020-03-20 12:18:44.456 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 12:18:44.554 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 12:18:44.557 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 12:18:45.557 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 12:18:45.558 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 12:18:46.446 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 12:18:46.581 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 12:18:46.595 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 12:18:46.596 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 12:18:46.597 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 12:18:46.650 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 12:18:46.652 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 12:18:46.658 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 12:18:46.660 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 12:18:46.661 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 12:18:46.663 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 12:18:46.670 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 12:18:46.678 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6764d119,type=ConfigurationPropertiesRebinder]
2020-03-20 12:18:46.683 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 12:18:46.691 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 12:18:46.696 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 12:18:46.722 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 12:18:47.337 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 12:18:47.337 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 12:18:47.672 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 12:18:47.672 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 12:18:47.797 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:18:48.193 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 12:18:48.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 12:18:48.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 12:18:48.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 12:18:48.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 12:18:48.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 12:18:48.194 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 12:18:48.310 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 12:18:48.313 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 12:18:48.314 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 12:18:48.317 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584677928316 with initial instances count: 1
2020-03-20 12:18:48.323 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 12:18:48.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584677928324, current=UP, previous=STARTING]
2020-03-20 12:18:48.325 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 12:18:48.329 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 12:18:48.362 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 12:18:48.509 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 12:18:48.515 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 12:18:48.519 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 12:18:48.533 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 12:18:48.534 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 12:18:48.536 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.205 seconds (JVM running for 18.663)
2020-03-20 12:18:49.146 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 12:18:49.146 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 12:18:49.147 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 12:18:49.166 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-20 12:18:49.692 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 12:18:58.683 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 12:18:58 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6764d119
2020-03-20 12:18:58.726 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:18:58.896 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 12:18:58.919 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 12:18:58.924 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 12:18:58.931 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 12:18:58.936 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@f90b066
2020-03-20 12:18:59.011 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 12:18:59.011 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 12:18:59.041 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:18:59.862 [http-nio-9010-exec-1] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 12:18:59.885 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:07.187 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 12:19:07.262 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:07.767 [http-nio-9010-exec-7] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 12:19:07.795 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@4557d43[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 12:19:07.802 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:07.809 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:07.814 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@1b3de37e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 12:19:07.823 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:07.930 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:20.703 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:21.240 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@75552460[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 12:19:21.243 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 12:19:21.243 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 12:19:21.248 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:21.299 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:19:21.299 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 12:23:48.196 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:28:48.199 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:33:48.200 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:38:48.202 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:43:48.203 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:48:48.205 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:53:48.206 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:56:52.598 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@181fd67a: startup date [Fri Mar 20 12:56:52 CST 2020]; root of context hierarchy
2020-03-20 12:56:52.744 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:56:52.775 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f0d42224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:56:53.504 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 12:56:53.520 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5458e27a: startup date [Fri Mar 20 12:56:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@181fd67a
2020-03-20 12:56:54.557 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 12:56:54.745 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 12:56:54.924 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 12:56:54.950 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:56:55.053 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4ba1f27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:56:55.087 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b2b430ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:56:55.093 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1006380109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:56:55.095 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 12:56:55.098 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:56:55.141 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f0d42224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 12:56:55.582 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 12:56:55.595 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 12:56:55.604 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 12:56:55.604 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 12:56:55.608 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 12:56:55.704 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 12:56:55.704 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2184 ms
2020-03-20 12:56:55.947 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 12:56:55.947 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 12:56:55.956 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7512e3de
2020-03-20 12:56:56.330 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 12:56:58.304 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 12:56:58.304 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 12:56:58.304 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 12:56:58.304 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 12:56:58.304 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 12:56:58.383 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 12:56:58.752 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 12:56:58 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5458e27a
2020-03-20 12:56:58.767 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 12:56:59.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 12:56:59.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 12:56:59.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 12:56:59.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.017 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 12:56:59.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 12:56:59.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 12:56:59.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 12:56:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 12:56:59.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 12:56:59.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 12:56:59.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 12:56:59.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 12:56:59.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 12:56:59.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 12:56:59.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 12:56:59.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 12:56:59.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:56:59.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:56:59.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:56:59.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:56:59.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:56:59.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 12:56:59.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest) throws alipay.config.exception.ParamException
2020-03-20 12:56:59.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:56:59.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:56:59.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 12:56:59.035 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 12:56:59.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:56:59.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:56:59.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 12:56:59.039 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 12:56:59.039 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 12:56:59.077 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 12:56:59.114 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5458e27a: startup date [Fri Mar 20 12:56:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@181fd67a
2020-03-20 12:56:59.152 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 12:56:59.254 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 12:56:59.255 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 12:57:00.331 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 12:57:00.331 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 12:57:01.320 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 12:57:01.442 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 12:57:01.453 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 12:57:01.455 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 12:57:01.455 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 12:57:01.504 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 12:57:01.505 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 12:57:01.511 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 12:57:01.512 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 12:57:01.513 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 12:57:01.516 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 12:57:01.525 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 12:57:01.535 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5458e27a,type=ConfigurationPropertiesRebinder]
2020-03-20 12:57:01.541 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 12:57:01.552 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 12:57:01.557 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 12:57:01.595 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 12:57:02.160 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 12:57:02.160 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 12:57:02.498 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 12:57:02.498 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 12:57:02.632 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 12:57:03.097 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 12:57:03.098 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 12:57:03.098 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 12:57:03.098 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 12:57:03.098 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 12:57:03.098 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 12:57:03.098 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 12:57:03.176 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 12:57:03.177 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 12:57:03.179 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 12:57:03.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584680223182 with initial instances count: 0
2020-03-20 12:57:03.189 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 12:57:03.189 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584680223189, current=UP, previous=STARTING]
2020-03-20 12:57:03.190 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 12:57:03.194 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 12:57:03.245 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 12:57:03.253 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 12:57:03.259 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 12:57:03.262 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 12:57:03.277 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 12:57:03.278 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 12:57:03.280 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.762 seconds (JVM running for 19.148)
2020-03-20 12:57:04.173 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 12:57:04.174 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 12:57:04.175 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 12:57:04.201 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2020-03-20 12:57:04.702 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 12:57:33.180 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 12:57:33.181 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 12:57:33.181 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 12:57:33.181 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 12:57:33.182 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 12:57:33.182 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-20 12:57:33.182 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 12:57:33.223 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 13:02:03.100 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:07:03.101 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:07:10.168 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 13:07:10 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5458e27a
2020-03-20 13:07:10.210 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 13:07:10.369 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 13:07:10.394 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 13:07:10.398 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 13:07:10.406 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 13:07:10.412 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@69faf69e
2020-03-20 13:07:10.482 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 13:07:10.482 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 13:07:10.512 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:15.929 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 13:07:16.038 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:16.516 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 13:07:16.517 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 13:07:16.530 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 13:07:16.541 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@347b1592[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 13:07:16.574 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:16.584 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@5ea71055[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 13:07:16.599 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:16.749 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:19.032 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:19.862 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 13:07:19.862 [hystrix-otc-task-config-server-3] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 13:07:19.866 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@70921487[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  retain3=<null>
  retain4=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 13:07:19.867 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:19.893 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:07:19.896 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:10:42.872 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:10:44.026 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:10:44.294 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:10:55.059 [http-nio-9010-exec-3] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyMediumById] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 13:10:55.087 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:12:03.104 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:17:03.107 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:22:03.109 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:27:03.111 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:32:03.113 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:37:03.114 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:38:32.416 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:38:33.412 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:38:33.503 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:38:34.508 [http-nio-9010-exec-6] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/findMyMediumById] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 13:38:34.523 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:39:06.298 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1bc051ba: startup date [Fri Mar 20 13:39:06 CST 2020]; root of context hierarchy
2020-03-20 13:39:06.445 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 13:39:06.476 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$83232a36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 13:39:07.214 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 13:39:07.230 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7322c945: startup date [Fri Mar 20 13:39:07 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1bc051ba
2020-03-20 13:39:08.236 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 13:39:08.429 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 13:39:08.606 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 13:39:08.630 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 13:39:08.736 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67092739] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 13:39:08.771 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$450338e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 13:39:08.778 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1375530117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 13:39:08.779 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 13:39:08.782 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 13:39:08.829 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$83232a36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 13:39:09.312 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 13:39:09.323 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 13:39:09.333 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 13:39:09.333 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 13:39:09.336 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 13:39:09.434 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 13:39:09.434 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2204 ms
2020-03-20 13:39:09.673 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 13:39:09.674 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 13:39:09.681 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7cf087a8
2020-03-20 13:39:10.061 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 13:39:11.865 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 13:39:11.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 13:39:11.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 13:39:11.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 13:39:11.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 13:39:11.945 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 13:39:12.331 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 13:39:12 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7322c945
2020-03-20 13:39:12.346 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 13:39:12.585 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 13:39:12.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 13:39:12.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 13:39:12.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.590 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.592 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.596 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 13:39:12.596 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.596 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 13:39:12.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 13:39:12.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 13:39:12.599 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 13:39:12.600 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 13:39:12.600 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.600 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 13:39:12.601 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 13:39:12.601 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.602 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 13:39:12.602 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 13:39:12.602 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 13:39:12.602 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 13:39:12.602 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 13:39:12.602 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 13:39:12.603 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.605 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 13:39:12.605 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 13:39:12.605 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.605 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.605 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.606 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest) throws alipay.config.exception.ParamException
2020-03-20 13:39:12.606 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 13:39:12.607 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 13:39:12.608 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.608 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 13:39:12.608 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.608 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.608 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.608 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.609 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.609 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 13:39:12.609 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 13:39:12.611 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 13:39:12.611 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 13:39:12.651 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 13:39:12.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7322c945: startup date [Fri Mar 20 13:39:07 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1bc051ba
2020-03-20 13:39:12.725 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 13:39:12.824 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 13:39:12.825 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 13:39:13.744 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 13:39:13.744 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 13:39:14.649 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 13:39:14.797 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 13:39:14.809 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 13:39:14.811 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 13:39:14.811 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 13:39:14.872 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 13:39:14.874 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 13:39:14.882 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 13:39:14.884 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 13:39:14.885 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 13:39:14.889 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 13:39:14.898 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 13:39:14.909 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7322c945,type=ConfigurationPropertiesRebinder]
2020-03-20 13:39:14.916 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 13:39:14.924 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 13:39:14.931 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 13:39:14.964 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 13:39:15.532 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 13:39:15.532 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 13:39:15.857 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 13:39:15.858 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 13:39:15.988 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:39:16.387 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 13:39:16.387 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 13:39:16.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 13:39:16.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 13:39:16.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 13:39:16.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 13:39:16.388 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 13:39:16.507 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 13:39:16.509 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 13:39:16.511 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 13:39:16.514 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584682756513 with initial instances count: 2
2020-03-20 13:39:16.521 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 13:39:16.521 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584682756521, current=UP, previous=STARTING]
2020-03-20 13:39:16.522 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 13:39:16.525 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 13:39:16.554 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 13:39:16.581 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 13:39:16.588 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 13:39:16.591 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 13:39:16.607 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 13:39:16.608 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 13:39:16.610 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.341 seconds (JVM running for 18.92)
2020-03-20 13:39:17.300 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 13:39:17.300 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 13:39:17.300 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 13:39:17.317 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 13:39:17.856 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 13:40:02.884 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:40:03.539 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:40:03.766 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:40:05.275 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:40:33.704 [http-nio-9010-exec-7] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/editMedium] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 13:40:33.736 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 13:44:16.391 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:49:16.392 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:54:16.393 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 13:59:16.395 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:04:16.396 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:09:16.398 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:14:16.400 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:19:16.402 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:24:16.403 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:29:16.405 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:33:17.848 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fa5c959: startup date [Fri Mar 20 14:33:17 CST 2020]; root of context hierarchy
2020-03-20 14:33:17.996 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:33:18.025 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$63671676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:33:18.760 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 14:33:18.777 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d207e6: startup date [Fri Mar 20 14:33:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fa5c959
2020-03-20 14:33:19.825 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 14:33:20.013 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 14:33:20.194 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 14:33:20.219 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:33:20.339 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$474d1379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:33:20.375 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$25472520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:33:20.383 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/629912539] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:33:20.384 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 14:33:20.387 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:33:20.433 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$63671676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:33:20.885 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 14:33:20.897 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 14:33:20.905 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 14:33:20.906 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 14:33:20.909 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 14:33:21.002 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 14:33:21.002 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2225 ms
2020-03-20 14:33:21.232 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 14:33:21.232 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 14:33:21.240 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@124c2cbd
2020-03-20 14:33:21.619 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 14:33:23.431 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 14:33:23.432 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 14:33:23.432 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 14:33:23.432 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 14:33:23.432 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 14:33:23.516 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 14:33:23.892 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 14:33:23 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d207e6
2020-03-20 14:33:23.906 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:33:24.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 14:33:24.141 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 14:33:24.141 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 14:33:24.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.144 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.145 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.149 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 14:33:24.150 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 14:33:24.151 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 14:33:24.152 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 14:33:24.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 14:33:24.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 14:33:24.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 14:33:24.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 14:33:24.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 14:33:24.153 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 14:33:24.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.154 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:33:24.156 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:33:24.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/modifyMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.ModifyMidium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.159 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:33:24.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:33:24.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:33:24.160 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 14:33:24.161 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:33:24.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 14:33:24.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 14:33:24.201 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 14:33:24.238 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d207e6: startup date [Fri Mar 20 14:33:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fa5c959
2020-03-20 14:33:24.276 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 14:33:24.377 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 14:33:24.378 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 14:33:25.452 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 14:33:25.452 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 14:33:26.293 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 14:33:26.417 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 14:33:26.427 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 14:33:26.428 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 14:33:26.429 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 14:33:26.482 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 14:33:26.483 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 14:33:26.491 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 14:33:26.492 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 14:33:26.493 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 14:33:26.497 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 14:33:26.504 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 14:33:26.513 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=30d207e6,type=ConfigurationPropertiesRebinder]
2020-03-20 14:33:26.519 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 14:33:26.526 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 14:33:26.532 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 14:33:26.567 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 14:33:27.111 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 14:33:27.112 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 14:33:27.425 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 14:33:27.426 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 14:33:27.548 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 14:33:27.957 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 14:33:28.081 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 14:33:28.084 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 14:33:28.086 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 14:33:28.089 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584686008088 with initial instances count: 2
2020-03-20 14:33:28.095 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 14:33:28.095 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584686008095, current=UP, previous=STARTING]
2020-03-20 14:33:28.097 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 14:33:28.100 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 14:33:28.130 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 14:33:28.152 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 14:33:28.157 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 14:33:28.160 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 14:33:28.174 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 14:33:28.176 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 14:33:28.178 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.356 seconds (JVM running for 18.83)
2020-03-20 14:33:28.906 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 14:33:28.906 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 14:33:28.906 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 14:33:28.922 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 14:33:29.442 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 14:34:13.729 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 14:34:13 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d207e6
2020-03-20 14:34:13.767 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:34:13.941 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 14:34:13.959 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 14:34:13.965 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 14:34:13.972 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 14:34:13.975 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2ad62037
2020-03-20 14:34:14.038 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 14:34:14.038 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 14:34:14.059 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:34:20.863 [http-nio-9010-exec-1] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 14:34:20.888 [http-nio-9010-exec-1] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 14:34:20.896 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain3' in 'field list'
### The error may exist in alipay/manage/mapper/UserInfoMapper.xml
### The error may involve alipay.manage.mapper.UserInfoMapper.selectByExample-Inline
### The error occurred while setting parameters
### SQL: select           'true' as QUERYID,           id, userId, userName, password, payPasword, salt, userType, switchs, userNode, email,     agent, isAgent, credit, receiveOrderState, remitOrderState, QQ, telegram, skype,     createTime, submitTime, status, privateKey, publicKey, retain3, retain4         from alipay_user_info                    WHERE (  userId = ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain3' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain3' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.selectByExample(Unknown Source)
	at alipay.manage.api.Impl.AccountApiSericeImpl.login(AccountApiSericeImpl.java:82)
	at alipay.manage.contorller.LoginContorller.login(LoginContorller.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'retain3' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 64 common frames omitted
2020-03-20 14:38:27.959 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:43:27.961 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:48:27.962 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:49:26.040 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d9a65e2: startup date [Fri Mar 20 14:49:26 CST 2020]; root of context hierarchy
2020-03-20 14:49:26.185 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:49:26.216 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b70bed6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:49:26.958 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 14:49:26.975 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337: startup date [Fri Mar 20 14:49:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d9a65e2
2020-03-20 14:49:27.948 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 14:49:28.176 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 14:49:28.402 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 14:49:28.428 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:49:28.533 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9af1ea6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:49:28.566 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$78ebfc16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:49:28.571 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/590167181] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:49:28.572 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 14:49:28.575 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:49:28.608 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b70bed6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:49:29.017 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 14:49:29.026 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 14:49:29.034 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 14:49:29.035 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 14:49:29.038 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 14:49:29.126 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 14:49:29.127 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2151 ms
2020-03-20 14:49:29.354 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 14:49:29.354 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 14:49:29.362 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@50838451
2020-03-20 14:49:29.728 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 14:49:31.532 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 14:49:31.533 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 14:49:31.533 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 14:49:31.533 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 14:49:31.533 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 14:49:31.615 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 14:49:31.941 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 14:49:31 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337
2020-03-20 14:49:31.956 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:49:32.193 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 14:49:32.193 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 14:49:32.193 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 14:49:32.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 14:49:32.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 14:49:32.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 14:49:32.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 14:49:32.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 14:49:32.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 14:49:32.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 14:49:32.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 14:49:32.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 14:49:32.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:49:32.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:49:32.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/modifyMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.ModifyMidium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:49:32.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:49:32.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:49:32.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 14:49:32.214 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.215 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:49:32.215 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:49:32.215 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.215 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.215 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.215 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.216 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:49:32.216 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 14:49:32.218 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 14:49:32.254 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 14:49:32.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337: startup date [Fri Mar 20 14:49:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d9a65e2
2020-03-20 14:49:32.329 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 14:49:32.428 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 14:49:32.431 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 14:49:33.367 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 14:49:33.367 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 14:49:34.280 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 14:49:34.405 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 14:49:34.416 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 14:49:34.417 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 14:49:34.418 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 14:49:34.474 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 14:49:34.475 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 14:49:34.483 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 14:49:34.485 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 14:49:34.486 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 14:49:34.490 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 14:49:34.497 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 14:49:34.506 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2d765337,type=ConfigurationPropertiesRebinder]
2020-03-20 14:49:34.512 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 14:49:34.519 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 14:49:34.524 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 14:49:34.553 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 14:49:35.085 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 14:49:35.086 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 14:49:35.397 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 14:49:35.398 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 14:49:35.516 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 14:49:35.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 14:49:36.021 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 14:49:36.023 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 14:49:36.025 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 14:49:36.028 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584686976027 with initial instances count: 2
2020-03-20 14:49:36.035 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 14:49:36.035 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584686976035, current=UP, previous=STARTING]
2020-03-20 14:49:36.036 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 14:49:36.040 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 14:49:36.065 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 14:49:36.096 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 14:49:36.100 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 14:49:36.102 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 14:49:36.117 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 14:49:36.118 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 14:49:36.120 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.256 seconds (JVM running for 18.481)
2020-03-20 14:49:36.828 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 14:49:36.829 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 14:49:36.829 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 14:49:36.846 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-20 14:49:37.366 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 14:50:15.906 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 14:50:15 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337
2020-03-20 14:50:15.944 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:50:16.086 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 14:50:16.108 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 14:50:16.120 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 14:50:16.127 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 14:50:16.134 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@71ab6982
2020-03-20 14:50:16.202 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 14:50:16.202 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 14:50:16.231 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:21.731 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 14:50:21.836 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:22.561 [http-nio-9010-exec-10] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 14:50:22.588 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@5e42bf7a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 14:50:22.622 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:22.623 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:22.639 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@63aa0b4a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 14:50:22.652 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:22.743 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:28.658 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:29.105 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@5538e7d9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 14:50:29.106 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:29.118 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 14:50:29.124 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 14:50:29.188 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:29.195 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:31.823 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:32.229 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:32.371 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:37.473 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:50:58.478 [http-nio-9010-exec-8] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/editMedium] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 14:50:58.498 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:00.034 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59b5fe39: startup date [Fri Mar 20 14:53:00 CST 2020]; root of context hierarchy
2020-03-20 14:53:00.178 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:53:00.207 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$861d47f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:53:01.026 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 14:53:01.045 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6de26bbf: startup date [Fri Mar 20 14:53:01 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59b5fe39
2020-03-20 14:53:02.202 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 14:53:02.428 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 14:53:02.617 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 14:53:02.641 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:53:02.751 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a0344fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:53:02.783 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$47fd56a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:53:02.789 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1131420272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:53:02.790 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 14:53:02.792 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:53:02.824 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$861d47f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 14:53:03.222 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 14:53:03.231 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 14:53:03.240 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 14:53:03.240 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 14:53:03.243 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 14:53:03.335 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 14:53:03.336 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2291 ms
2020-03-20 14:53:03.626 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 14:53:03.626 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 14:53:03.637 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@647b04aa
2020-03-20 14:53:04.026 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 14:53:05.992 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 14:53:05.992 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 14:53:05.992 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 14:53:05.993 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 14:53:05.993 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 14:53:06.072 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 14:53:06.403 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 14:53:06 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6de26bbf
2020-03-20 14:53:06.418 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 14:53:06.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 14:53:06.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 14:53:06.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 14:53:06.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 14:53:06.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 14:53:06.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 14:53:06.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 14:53:06.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 14:53:06.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 14:53:06.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 14:53:06.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 14:53:06.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 14:53:06.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 14:53:06.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:53:06.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:53:06.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:53:06.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:53:06.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 14:53:06.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:53:06.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:53:06.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:53:06.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 14:53:06.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 14:53:06.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:53:06.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:53:06.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 14:53:06.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 14:53:06.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 14:53:06.719 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 14:53:06.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6de26bbf: startup date [Fri Mar 20 14:53:01 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59b5fe39
2020-03-20 14:53:06.798 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 14:53:06.909 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 14:53:06.911 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 14:53:07.929 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 14:53:07.929 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 14:53:08.797 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 14:53:08.947 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 14:53:08.957 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 14:53:08.960 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 14:53:08.960 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 14:53:09.014 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 14:53:09.015 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 14:53:09.026 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 14:53:09.031 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 14:53:09.033 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 14:53:09.044 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 14:53:09.057 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 14:53:09.066 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6de26bbf,type=ConfigurationPropertiesRebinder]
2020-03-20 14:53:09.071 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 14:53:09.077 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 14:53:09.082 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 14:53:09.108 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 14:53:09.679 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 14:53:09.679 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 14:53:09.992 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 14:53:09.992 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 14:53:10.118 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 14:53:10.633 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 14:53:10.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 14:53:10.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 14:53:10.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 14:53:10.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 14:53:10.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 14:53:10.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 14:53:10.751 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 14:53:10.753 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 14:53:10.755 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 14:53:10.758 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584687190757 with initial instances count: 2
2020-03-20 14:53:10.764 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 14:53:10.764 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584687190764, current=UP, previous=STARTING]
2020-03-20 14:53:10.765 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 14:53:10.768 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 14:53:10.795 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 14:53:10.823 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 14:53:10.830 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 14:53:10.834 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 14:53:10.848 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 14:53:10.849 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 14:53:10.852 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.861 seconds (JVM running for 19.348)
2020-03-20 14:53:12.159 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 14:53:12.159 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 14:53:12.160 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 14:53:12.178 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-20 14:53:12.735 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 14:53:14.500 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:15.289 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:15.556 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:17.723 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:30.078 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 14:53:30.081 [http-nio-9010-exec-5] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 14:53:30.134 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:30.224 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:41.104 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:44.027 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:44.338 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:49.912 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:53:53.369 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:02.610 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:02.995 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:03.073 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:05.115 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:08.552 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:09.777 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:09.850 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:54:35.677 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 14:54:35.678 [http-nio-9010-exec-9] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 14:54:35.842 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@d9844af]
2020-03-20 14:54:35.843 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@d9844af]
2020-03-20 14:54:35.941 [http-nio-9010-exec-9] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 14:54:35.963 [http-nio-9010-exec-9] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 14:54:35.968 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update product_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.addAccountMedium(CorrelationServiceImpl.java:117)
	at alipay.manage.service.impl.MediumServiceImpl.addMedium(MediumServiceImpl.java:50)
	at alipay.manage.contorller.PaymentCodeContorller.addMedium(PaymentCodeContorller.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 79 common frames omitted
2020-03-20 14:54:36.066 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:55:13.543 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:55:19.532 [http-nio-9010-exec-3] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/statisticalAnalysis/delMedium] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 14:55:19.553 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 14:58:10.635 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:03:10.637 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:08:10.639 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:13:10.640 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:18:10.643 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:23:10.644 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:28:10.646 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:33:10.648 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:40:55.643 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7abafff7: startup date [Fri Mar 20 15:40:55 CST 2020]; root of context hierarchy
2020-03-20 15:40:55.788 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 15:40:55.819 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$448b7ad9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 15:40:56.555 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 15:40:56.572 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b6d942: startup date [Fri Mar 20 15:40:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7abafff7
2020-03-20 15:40:57.595 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 15:40:57.820 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 15:40:58.046 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 15:40:58.072 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 15:40:58.181 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$287177dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 15:40:58.218 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$66b8983] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 15:40:58.225 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1391009624] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 15:40:58.226 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 15:40:58.229 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 15:40:58.264 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$448b7ad9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 15:40:58.720 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 15:40:58.731 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 15:40:58.739 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 15:40:58.740 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 15:40:58.744 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 15:40:58.839 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 15:40:58.839 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2267 ms
2020-03-20 15:40:59.070 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 15:40:59.070 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 15:40:59.077 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6fee3e76
2020-03-20 15:40:59.461 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 15:41:01.270 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 15:41:01.270 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 15:41:01.270 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 15:41:01.270 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 15:41:01.270 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 15:41:01.349 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 15:41:01.715 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 15:41:01 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b6d942
2020-03-20 15:41:01.729 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 15:41:01.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 15:41:01.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 15:41:01.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 15:41:01.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:01.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:01.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:01.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:01.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:01.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 15:41:02.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 15:41:02.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 15:41:02.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 15:41:02.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 15:41:02.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 15:41:02.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 15:41:02.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 15:41:02.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 15:41:02.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 15:41:02.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 15:41:02.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 15:41:02.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 15:41:02.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 15:41:02.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 15:41:02.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 15:41:02.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 15:41:02.015 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 15:41:02.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 15:41:02.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 15:41:02.016 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 15:41:02.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 15:41:02.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 15:41:02.059 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 15:41:02.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b6d942: startup date [Fri Mar 20 15:40:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7abafff7
2020-03-20 15:41:02.135 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 15:41:02.234 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 15:41:02.235 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 15:41:03.259 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 15:41:03.259 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 15:41:04.175 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 15:41:04.297 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 15:41:04.307 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 15:41:04.308 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 15:41:04.308 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 15:41:04.356 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 15:41:04.358 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 15:41:04.365 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 15:41:04.367 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 15:41:04.368 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 15:41:04.372 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 15:41:04.380 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 15:41:04.388 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=b6d942,type=ConfigurationPropertiesRebinder]
2020-03-20 15:41:04.394 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 15:41:04.400 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 15:41:04.406 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 15:41:04.437 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 15:41:05.000 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 15:41:05.000 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 15:41:05.327 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 15:41:05.327 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 15:41:05.452 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 15:41:05.859 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 15:41:05.982 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 15:41:05.983 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 15:41:05.985 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 15:41:05.988 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584690065987 with initial instances count: 1
2020-03-20 15:41:05.994 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 15:41:05.995 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584690065995, current=UP, previous=STARTING]
2020-03-20 15:41:05.996 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 15:41:05.999 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 15:41:06.030 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 15:41:06.054 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 15:41:06.060 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 15:41:06.063 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 15:41:06.080 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 15:41:06.081 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 15:41:06.083 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.414 seconds (JVM running for 18.787)
2020-03-20 15:41:07.356 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 15:41:07.356 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 15:41:07.367 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 15:41:07.378 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-03-20 15:41:07.937 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 15:41:22.643 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 15:41:22 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b6d942
2020-03-20 15:41:22.680 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 15:41:22.834 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 15:41:22.851 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 15:41:22.855 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 15:41:22.863 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 15:41:22.867 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@45668574
2020-03-20 15:41:22.928 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 15:41:22.928 [hystrix-otc-task-config-server-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 15:41:22.966 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:28.586 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 15:41:28.684 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:29.570 [http-nio-9010-exec-10] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 15:41:29.597 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@4534acbd[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 15:41:29.629 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:29.630 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:29.645 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@7d3fb5ed[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 15:41:29.657 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:29.727 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:32.384 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:32.811 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@2c544b4d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 15:41:32.812 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:32.815 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 15:41:32.815 [hystrix-otc-task-config-server-2] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 15:41:32.848 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:32.851 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:33.943 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:34.384 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:34.503 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:38.157 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:44.104 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 15:41:44.173 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 15:41:44.181 [http-nio-9010-exec-3] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 15:41:44.193 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 15:41:44.195 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 15:41:44.250 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@7e041a5d]
2020-03-20 15:41:44.252 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@7e041a5d]
2020-03-20 15:41:44.320 [http-nio-9010-exec-3] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 15:41:44.341 [http-nio-9010-exec-3] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 15:41:44.346 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update product_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:126)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy188.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 15:41:44.444 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:47.710 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:48.214 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:41:48.296 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 15:46:05.862 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:51:05.864 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 15:56:05.864 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:01:05.866 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:02:02.763 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:02:06.124 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 16:02:06.179 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 16:02:06.181 [http-nio-9010-exec-8] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 16:02:06.184 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 16:02:06.190 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@433e65f6]
2020-03-20 16:02:06.191 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@433e65f6]
2020-03-20 16:02:06.245 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update product_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:126)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy188.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 16:02:06.349 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:06:05.868 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:07:18.840 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c3b0ad8: startup date [Fri Mar 20 16:07:18 CST 2020]; root of context hierarchy
2020-03-20 16:07:18.986 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:07:19.017 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f846bb34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:07:19.752 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:07:19.768 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67e5b34b: startup date [Fri Mar 20 16:07:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c3b0ad8
2020-03-20 16:07:20.792 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:07:20.983 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:07:21.158 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 16:07:21.183 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:07:21.291 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dc2cb837] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:07:21.329 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ba26c9de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:07:21.336 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1530660217] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:07:21.337 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:07:21.340 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:07:21.374 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f846bb34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:07:21.839 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:07:21.853 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:07:21.862 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:07:21.862 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:07:21.866 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:07:21.966 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:07:21.966 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2198 ms
2020-03-20 16:07:22.198 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:07:22.199 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:07:22.206 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d51c49c
2020-03-20 16:07:22.606 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:07:24.486 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:07:24.486 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:07:24.486 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:07:24.486 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:07:24.486 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:07:24.566 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:07:24.937 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:07:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67e5b34b
2020-03-20 16:07:24.952 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:07:25.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:07:25.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:07:25.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:07:25.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.192 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:07:25.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:07:25.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:07:25.195 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:07:25.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:07:25.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:07:25.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:07:25.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:07:25.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:07:25.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:07:25.202 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:07:25.205 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:07:25.206 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:07:25.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:07:25.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:07:25.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:07:25.210 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:07:25.210 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:07:25.246 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:07:25.283 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67e5b34b: startup date [Fri Mar 20 16:07:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c3b0ad8
2020-03-20 16:07:25.322 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:07:25.421 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:07:25.424 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:07:26.380 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:07:26.380 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:07:27.218 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:07:27.340 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:07:27.351 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:07:27.352 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:07:27.353 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:07:27.402 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:07:27.404 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:07:27.410 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:07:27.411 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:07:27.412 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:07:27.415 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:07:27.423 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:07:27.432 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=67e5b34b,type=ConfigurationPropertiesRebinder]
2020-03-20 16:07:27.439 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:07:27.446 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:07:27.452 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:07:27.491 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:07:28.100 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:07:28.100 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:07:28.448 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:07:28.448 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:07:28.589 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:07:28.990 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:07:28.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:07:28.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:07:28.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:07:28.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:07:28.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:07:28.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:07:29.125 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:07:29.128 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:07:29.130 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:07:29.133 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584691649132 with initial instances count: 2
2020-03-20 16:07:29.138 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:07:29.139 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584691649139, current=UP, previous=STARTING]
2020-03-20 16:07:29.141 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:07:29.144 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:07:29.178 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:07:29.197 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:07:29.202 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:07:29.205 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:07:29.220 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:07:29.221 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:07:29.224 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.439 seconds (JVM running for 18.819)
2020-03-20 16:07:30.491 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:07:30.494 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:07:30.495 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:07:30.512 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-20 16:07:31.079 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:07:34.380 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:07:35.928 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:07:36.156 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:07:40.844 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:07:47.346 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 16:07:47.409 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 16:07:47.413 [http-nio-9010-exec-7] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 16:07:47.421 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 16:07:47.429 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@e13d45b]
2020-03-20 16:07:47.430 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@e13d45b]
2020-03-20 16:07:47.518 [http-nio-9010-exec-7] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 16:07:47.539 [http-nio-9010-exec-7] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 16:07:47.545 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:126)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 16:07:47.682 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:09:31.473 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1548875a: startup date [Fri Mar 20 16:09:31 CST 2020]; root of context hierarchy
2020-03-20 16:09:31.677 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:09:31.711 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ce3df8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:09:32.498 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:09:32.514 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7fa118e8: startup date [Fri Mar 20 16:09:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1548875a
2020-03-20 16:09:33.507 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:09:33.697 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:09:33.877 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 16:09:33.902 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:09:34.008 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$60c9dc8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:09:34.041 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3ec3ee36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:09:34.046 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1600522642] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:09:34.047 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:09:34.051 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:09:34.083 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ce3df8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:09:34.500 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:09:34.511 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:09:34.518 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:09:34.518 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:09:34.521 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:09:34.612 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:09:34.612 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2098 ms
2020-03-20 16:09:34.860 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:09:34.860 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:09:34.867 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@643573df
2020-03-20 16:09:35.272 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:09:37.329 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:09:37.329 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:09:37.329 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:09:37.329 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:09:37.329 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:09:37.419 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:09:37.863 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:09:37 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7fa118e8
2020-03-20 16:09:37.881 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:09:38.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:09:38.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:09:38.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:09:38.171 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:09:38.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:09:38.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:09:38.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:09:38.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:09:38.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:09:38.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:09:38.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:09:38.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:09:38.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:09:38.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:09:38.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:09:38.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:09:38.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:09:38.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:09:38.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:09:38.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:09:38.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:09:38.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:09:38.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:09:38.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:09:38.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:09:38.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:09:38.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:09:38.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:09:38.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:09:38.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:09:38.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:09:38.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:09:38.192 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:09:38.193 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:09:38.194 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:09:38.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:09:38.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:09:38.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:09:38.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:09:38.248 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:09:38.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7fa118e8: startup date [Fri Mar 20 16:09:32 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1548875a
2020-03-20 16:09:38.328 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:09:38.435 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:09:38.436 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:09:39.616 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:09:39.616 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:09:40.459 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:09:40.587 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:09:40.598 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:09:40.599 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:09:40.600 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:09:40.657 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:09:40.662 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:09:40.671 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:09:40.673 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:09:40.673 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:09:40.679 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:09:40.687 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:09:40.699 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7fa118e8,type=ConfigurationPropertiesRebinder]
2020-03-20 16:09:40.707 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:09:40.718 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:09:40.728 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:09:40.767 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:09:41.326 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:09:41.327 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:09:41.632 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:09:41.632 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:09:41.756 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:09:42.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:09:42.393 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:09:42.396 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:09:42.399 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:09:42.403 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584691782402 with initial instances count: 2
2020-03-20 16:09:42.411 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:09:42.412 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584691782412, current=UP, previous=STARTING]
2020-03-20 16:09:42.413 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:09:42.417 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:09:42.453 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:09:42.501 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:09:42.511 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:09:42.515 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:09:42.538 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:09:42.540 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:09:42.546 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.142 seconds (JVM running for 19.332)
2020-03-20 16:09:43.082 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:09:43.083 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:09:43.084 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:09:43.107 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2020-03-20 16:09:43.664 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:09:49.507 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:09:50.995 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:09:51.241 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:09:52.417 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:09:56.934 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 16:09:56.994 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 16:09:56.997 [http-nio-9010-exec-6] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 16:09:57.004 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 16:09:57.011 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@3acc620d]
2020-03-20 16:09:57.013 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@3acc620d]
2020-03-20 16:09:57.085 [http-nio-9010-exec-6] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 16:09:57.108 [http-nio-9010-exec-6] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 16:09:57.115 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:126)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 16:09:57.211 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:12:43.550 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52f1679b: startup date [Fri Mar 20 16:12:43 CST 2020]; root of context hierarchy
2020-03-20 16:12:43.699 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:12:43.730 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d72cc018] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:12:44.463 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:12:44.478 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a1b1cbe: startup date [Fri Mar 20 16:12:44 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52f1679b
2020-03-20 16:12:45.417 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:12:45.606 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:12:45.787 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 16:12:45.815 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:12:45.925 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb12bd1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:12:45.959 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$990ccec2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:12:45.965 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/993691094] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:12:45.966 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:12:45.969 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:12:46.021 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d72cc018] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:12:46.439 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:12:46.449 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:12:46.457 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:12:46.457 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:12:46.460 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:12:46.548 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:12:46.549 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2070 ms
2020-03-20 16:12:46.791 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:12:46.792 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:12:46.799 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d6f18b4
2020-03-20 16:12:47.203 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:12:49.030 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:12:49.031 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:12:49.031 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:12:49.031 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:12:49.031 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:12:49.113 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:12:49.463 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:12:49 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a1b1cbe
2020-03-20 16:12:49.478 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:12:49.714 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:12:49.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:12:49.715 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:12:49.716 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.717 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.717 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.717 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.717 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.717 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.718 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.719 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.719 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.719 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.719 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.719 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.723 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:12:49.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:12:49.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:12:49.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:12:49.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:12:49.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:12:49.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:12:49.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:12:49.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:12:49.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:12:49.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:12:49.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.729 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.729 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:12:49.729 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:12:49.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:12:49.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:12:49.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:12:49.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:12:49.732 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.733 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:12:49.734 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:12:49.734 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:12:49.735 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.735 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:12:49.735 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:12:49.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:12:49.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:12:49.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:12:49.777 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:12:49.814 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a1b1cbe: startup date [Fri Mar 20 16:12:44 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52f1679b
2020-03-20 16:12:49.853 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:12:49.951 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:12:49.952 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:12:50.917 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:12:50.917 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:12:51.764 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:12:51.889 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:12:51.899 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:12:51.900 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:12:51.900 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:12:51.954 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:12:51.955 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:12:51.962 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:12:51.964 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:12:51.964 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:12:51.968 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:12:51.974 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:12:51.982 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7a1b1cbe,type=ConfigurationPropertiesRebinder]
2020-03-20 16:12:51.988 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:12:51.995 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:12:52.001 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:12:52.027 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:12:52.692 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:12:52.692 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:12:52.990 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:12:52.991 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:12:53.112 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:12:53.511 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:12:53.631 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:12:53.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:12:53.636 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:12:53.639 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584691973638 with initial instances count: 2
2020-03-20 16:12:53.645 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:12:53.646 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584691973645, current=UP, previous=STARTING]
2020-03-20 16:12:53.647 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:12:53.649 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:12:53.681 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:12:53.704 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:12:53.709 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:12:53.712 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:12:53.728 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:12:53.730 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:12:53.731 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.25 seconds (JVM running for 18.607)
2020-03-20 16:12:55.133 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:12:55.134 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:12:55.134 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:12:55.150 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 16:12:55.686 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:12:57.750 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:12:59.093 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:12:59.335 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:13:04.930 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:13:10.421 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 16:13:10.489 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 16:13:10.493 [http-nio-9010-exec-5] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 16:13:10.502 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 16:13:10.505 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 16:13:10.507 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@1f758ce3]
2020-03-20 16:13:10.508 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@1f758ce3]
2020-03-20 16:13:10.543 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数 []
2020-03-20 16:13:10.574 [http-nio-9010-exec-5] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 16:13:10.597 [http-nio-9010-exec-5] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 16:13:10.602 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:129)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 16:13:10.701 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:17:53.513 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:21:51.895 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@30fb2f4a: startup date [Fri Mar 20 16:21:51 CST 2020]; root of context hierarchy
2020-03-20 16:21:52.047 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:21:52.076 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c987c00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:21:52.944 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:21:52.962 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d9648da: startup date [Fri Mar 20 16:21:52 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@30fb2f4a
2020-03-20 16:21:53.907 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:21:54.104 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:21:54.291 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 16:21:54.315 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:21:54.421 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$507e7903] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:21:54.454 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2e788aaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:21:54.461 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1137768313] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:21:54.462 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:21:54.465 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:21:54.496 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c987c00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:21:54.914 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:21:54.924 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:21:54.931 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:21:54.931 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:21:54.935 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:21:55.022 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:21:55.023 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2062 ms
2020-03-20 16:21:55.254 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:21:55.254 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:21:55.261 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@157c02e4
2020-03-20 16:21:55.641 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:21:57.472 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:21:57.472 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:21:57.473 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:21:57.473 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:21:57.473 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:21:57.554 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:21:57.889 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:21:57 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d9648da
2020-03-20 16:21:57.904 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:21:58.162 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:21:58.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:21:58.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:21:58.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.165 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.167 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:21:58.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.172 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:21:58.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:21:58.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:21:58.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:21:58.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:21:58.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:21:58.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:21:58.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:21:58.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:21:58.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:21:58.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:21:58.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:21:58.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:21:58.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:21:58.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:21:58.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:21:58.182 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.182 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.182 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:21:58.182 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:21:58.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:21:58.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:21:58.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:21:58.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:21:58.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:21:58.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:21:58.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:21:58.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:21:58.226 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:21:58.263 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d9648da: startup date [Fri Mar 20 16:21:52 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@30fb2f4a
2020-03-20 16:21:58.303 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:21:58.410 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:21:58.413 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:21:59.397 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:21:59.397 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:22:00.275 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:22:00.399 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:22:00.410 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:22:00.411 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:22:00.412 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:22:00.466 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:22:00.467 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:22:00.474 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:22:00.476 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:22:00.477 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:22:00.480 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:22:00.487 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:22:00.496 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6d9648da,type=ConfigurationPropertiesRebinder]
2020-03-20 16:22:00.502 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:22:00.510 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:22:00.516 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:22:00.569 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:22:01.145 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:22:01.145 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:22:01.470 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:22:01.470 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:22:01.590 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:22:01.993 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:22:01.994 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:22:01.994 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:22:01.994 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:22:01.994 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:22:01.994 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:22:01.994 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:22:02.114 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:22:02.117 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:22:02.119 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:22:02.122 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584692522121 with initial instances count: 2
2020-03-20 16:22:02.128 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:22:02.129 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584692522129, current=UP, previous=STARTING]
2020-03-20 16:22:02.130 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:22:02.133 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:22:02.159 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:22:02.185 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:22:02.191 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:22:02.193 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:22:02.209 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:22:02.210 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:22:02.212 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.384 seconds (JVM running for 18.566)
2020-03-20 16:22:03.245 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:22:03.246 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:22:03.246 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:22:03.266 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-20 16:22:03.820 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:22:08.914 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:22:10.203 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:22:10.545 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:22:13.636 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:22:22.160 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 16:22:22.219 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 16:22:22.223 [http-nio-9010-exec-2] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 16:22:22.235 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 16:22:22.242 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 16:22:22.245 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@17d9f99d]
2020-03-20 16:22:22.247 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@17d9f99d]
2020-03-20 16:22:22.285 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 16:22:22.286 [http-nio-9010-exec-2] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: []
2020-03-20 16:22:22.316 [http-nio-9010-exec-2] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 16:22:22.340 [http-nio-9010-exec-2] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 16:22:22.346 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:130)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 16:22:22.490 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:24:39.669 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fc79fc: startup date [Fri Mar 20 16:24:39 CST 2020]; root of context hierarchy
2020-03-20 16:24:39.816 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:24:39.848 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1f57313] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:24:40.637 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:24:40.653 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2dbe7998: startup date [Fri Mar 20 16:24:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fc79fc
2020-03-20 16:24:41.642 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:24:41.825 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:24:42.010 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=993faf87-50ed-3305-8752-b3a341ffad48
2020-03-20 16:24:42.034 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:24:42.140 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b5db7016] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:24:42.172 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$93d581bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:24:42.178 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/76514110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:24:42.179 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:24:42.182 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:24:42.216 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1f57313] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:24:42.662 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:24:42.671 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:24:42.679 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:24:42.679 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:24:42.683 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:24:42.768 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:24:42.768 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2115 ms
2020-03-20 16:24:42.998 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:24:42.998 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:24:43.005 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b62ac23
2020-03-20 16:24:43.384 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:24:45.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:24:45.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:24:45.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:24:45.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:24:45.211 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:24:45.293 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:24:45.657 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:24:45 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2dbe7998
2020-03-20 16:24:45.671 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:24:45.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:24:45.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:24:45.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:24:45.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.912 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:24:45.912 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.912 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:24:45.912 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:24:45.912 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:24:45.912 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:24:45.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:24:45.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:24:45.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:24:45.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:24:45.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:24:45.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:24:45.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:24:45.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:24:45.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:24:45.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:24:45.924 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:24:45.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:24:45.928 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:24:45.964 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:24:46.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2dbe7998: startup date [Fri Mar 20 16:24:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fc79fc
2020-03-20 16:24:46.040 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:24:46.139 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:24:46.140 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:24:47.334 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:24:47.334 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:24:48.167 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:24:48.288 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:24:48.299 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:24:48.300 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:24:48.300 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:24:48.348 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:24:48.349 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:24:48.356 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:24:48.358 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:24:48.359 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:24:48.361 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:24:48.368 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:24:48.381 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2dbe7998,type=ConfigurationPropertiesRebinder]
2020-03-20 16:24:48.389 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:24:48.399 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:24:48.404 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:24:48.432 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:24:48.967 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:24:48.968 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:24:49.275 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:24:49.275 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:24:49.400 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:24:49.802 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:24:49.802 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:24:49.802 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:24:49.803 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:24:49.803 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:24:49.803 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:24:49.803 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:24:49.920 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:24:49.922 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:24:49.924 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:24:49.928 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584692689928 with initial instances count: 2
2020-03-20 16:24:49.933 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:24:49.933 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584692689933, current=UP, previous=STARTING]
2020-03-20 16:24:49.935 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:24:49.937 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:24:49.967 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:24:49.989 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:24:49.993 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:24:49.996 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:24:50.013 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:24:50.014 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:24:50.016 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.257 seconds (JVM running for 18.511)
2020-03-20 16:24:51.398 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:24:51.398 [RMI TCP Connection(5)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:24:51.399 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:24:51.414 [RMI TCP Connection(5)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 16:24:51.972 [RMI TCP Connection(4)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:25:02.099 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:25:03.460 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:25:03.713 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:25:08.379 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:25:15.632 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003201454350001
2020-03-20 16:25:15.690 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 16:25:15.693 [http-nio-9010-exec-6] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 16:25:15.703 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 16:25:15.706 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 16:25:15.708 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 16:25:15.708 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@1f758ce3]
2020-03-20 16:25:15.711 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 16:25:15.711 [http-nio-9010-exec-6] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: []
2020-03-20 16:25:15.742 [http-nio-9010-exec-6] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 16:25:15.767 [http-nio-9010-exec-6] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 16:25:15.772 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:131)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 16:25:15.866 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:25:56.625 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:25:56.636 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:25:59.151 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:25:59.161 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:27:56.365 [http-nio-9010-exec-2] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/storage/uploadPic] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 16:27:56.381 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:29:49.804 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:34:24.110 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@51a4c428: startup date [Fri Mar 20 16:34:24 CST 2020]; root of context hierarchy
2020-03-20 16:34:24.259 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:34:24.290 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48b033ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:34:25.036 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:34:25.052 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@139e6018: startup date [Fri Mar 20 16:34:25 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@51a4c428
2020-03-20 16:34:26.109 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:34:26.312 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:34:26.495 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 16:34:26.521 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:34:26.633 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c9630af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:34:26.669 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a904256] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:34:26.676 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1590375546] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:34:26.677 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:34:26.679 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:34:26.724 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48b033ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:34:27.165 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:34:27.177 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:34:27.185 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:34:27.185 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:34:27.188 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:34:27.278 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:34:27.278 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2226 ms
2020-03-20 16:34:27.512 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:34:27.512 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:34:27.520 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3be85520
2020-03-20 16:34:27.898 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:34:29.737 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:34:29.737 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:34:29.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:34:29.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:34:29.738 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:34:29.818 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:34:30.211 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:34:30 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@139e6018
2020-03-20 16:34:30.226 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:34:30.448 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:34:30.449 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:34:30.449 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:34:30.449 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 16:34:30.451 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.451 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.451 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.452 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.452 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.452 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.453 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.453 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.453 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.454 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.454 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.454 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.458 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:34:30.459 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.459 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:34:30.459 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:34:30.459 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:34:30.459 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:34:30.459 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:34:30.460 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:34:30.461 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.462 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:34:30.463 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.463 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:34:30.464 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:34:30.464 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:34:30.464 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:34:30.464 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:34:30.464 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.465 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:34:30.465 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:34:30.467 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.467 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.467 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.468 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.468 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.468 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:34:30.468 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:34:30.468 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:34:30.468 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:34:30.469 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:34:30.470 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.470 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:34:30.470 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:34:30.470 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.471 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.471 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.471 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.471 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:34:30.471 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.473 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:34:30.474 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:34:30.510 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:34:30.546 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@139e6018: startup date [Fri Mar 20 16:34:25 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@51a4c428
2020-03-20 16:34:30.584 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:34:30.695 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:34:30.697 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:34:31.765 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:34:31.765 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:34:32.629 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:34:32.757 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:34:32.767 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:34:32.768 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:34:32.769 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:34:32.820 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:34:32.821 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:34:32.828 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:34:32.830 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:34:32.831 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:34:32.834 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:34:32.841 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:34:32.849 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=139e6018,type=ConfigurationPropertiesRebinder]
2020-03-20 16:34:32.856 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:34:32.862 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:34:32.867 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:34:32.907 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:34:33.462 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:34:33.462 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:34:33.795 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:34:33.795 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:34:33.920 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:34:34.324 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:34:34.446 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:34:34.448 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:34:34.450 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:34:34.453 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584693274452 with initial instances count: 2
2020-03-20 16:34:34.459 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:34:34.459 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584693274459, current=UP, previous=STARTING]
2020-03-20 16:34:34.460 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:34:34.463 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:34:34.507 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:34:34.518 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:34:34.524 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:34:34.527 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:34:34.545 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:34:34.546 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:34:34.548 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.453 seconds (JVM running for 18.816)
2020-03-20 16:34:35.211 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:34:35.211 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:34:35.211 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:34:35.227 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 16:34:35.738 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:34:44.651 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:34:45.912 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:34:46.236 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:34:47.654 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:34:47.685 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:34:59.118 [http-nio-9010-exec-7] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 16:34:59.152 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:25)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 16:38:29.519 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2788d0: startup date [Fri Mar 20 16:38:29 CST 2020]; root of context hierarchy
2020-03-20 16:38:29.664 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:38:29.696 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea5b326a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:38:30.522 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:38:30.541 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35ad8603: startup date [Fri Mar 20 16:38:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2788d0
2020-03-20 16:38:31.567 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:38:31.755 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:38:31.937 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 16:38:31.963 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:38:32.067 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce412f6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:38:32.102 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ac3b4114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:38:32.109 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1889248244] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:38:32.110 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:38:32.113 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:38:32.147 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea5b326a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:38:32.558 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:38:32.568 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:38:32.575 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:38:32.575 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:38:32.579 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:38:32.667 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:38:32.668 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2127 ms
2020-03-20 16:38:32.902 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:38:32.902 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:38:32.910 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@157c02e4
2020-03-20 16:38:33.286 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:38:35.118 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:38:35.118 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:38:35.118 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:38:35.119 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:38:35.119 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:38:35.198 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:38:35.556 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:38:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35ad8603
2020-03-20 16:38:35.571 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:38:35.791 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:38:35.792 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:38:35.792 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:38:35.793 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 16:38:35.795 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.795 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.795 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.795 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.797 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.797 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.798 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.798 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.798 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.798 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:38:35.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:38:35.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:38:35.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:38:35.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:38:35.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:38:35.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:38:35.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:38:35.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:38:35.807 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.807 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:38:35.808 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:38:35.808 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:38:35.808 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.808 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:38:35.809 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:38:35.809 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:38:35.809 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:38:35.811 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:38:35.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:38:35.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:38:35.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:38:35.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:38:35.814 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.816 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:38:35.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:38:35.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:38:35.864 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:38:35.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35ad8603: startup date [Fri Mar 20 16:38:30 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2788d0
2020-03-20 16:38:35.953 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:38:36.078 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:38:36.079 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:38:37.116 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:38:37.116 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:38:37.975 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:38:38.102 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:38:38.113 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:38:38.115 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:38:38.115 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:38:38.168 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:38:38.170 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:38:38.178 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:38:38.180 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:38:38.181 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:38:38.184 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:38:38.191 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:38:38.200 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=35ad8603,type=ConfigurationPropertiesRebinder]
2020-03-20 16:38:38.205 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:38:38.212 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:38:38.217 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:38:38.243 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:38:38.789 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:38:38.789 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:38:39.101 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:38:39.101 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:38:39.227 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:38:39.634 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:38:39.753 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:38:39.755 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:38:39.757 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:38:39.760 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584693519759 with initial instances count: 2
2020-03-20 16:38:39.766 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:38:39.766 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584693519766, current=UP, previous=STARTING]
2020-03-20 16:38:39.768 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:38:39.771 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:38:39.801 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:38:39.827 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:38:39.832 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:38:39.834 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:38:39.851 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:38:39.852 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:38:39.854 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.273 seconds (JVM running for 18.484)
2020-03-20 16:38:40.937 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:38:40.937 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:38:40.937 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:38:40.955 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 16:38:41.516 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:38:49.905 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:38:50.568 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:38:50.784 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:38:52.057 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:38:52.083 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:39:08.316 [http-nio-9010-exec-9] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 16:39:08.336 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:25)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 16:40:26.967 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41ba7c47: startup date [Fri Mar 20 16:40:26 CST 2020]; root of context hierarchy
2020-03-20 16:40:27.115 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:40:27.146 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ab511ade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:40:27.935 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:40:27.955 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e01180: startup date [Fri Mar 20 16:40:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41ba7c47
2020-03-20 16:40:28.991 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:40:29.215 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:40:29.393 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 16:40:29.418 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:40:29.525 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f3717e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:40:29.561 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$6d312988] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:40:29.567 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1766751842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:40:29.568 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:40:29.571 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:40:29.615 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ab511ade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:40:30.016 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:40:30.026 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:40:30.033 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:40:30.034 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:40:30.037 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:40:30.126 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:40:30.126 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2171 ms
2020-03-20 16:40:30.356 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:40:30.357 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:40:30.363 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12bb915a
2020-03-20 16:40:30.751 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:40:32.597 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:40:32.597 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:40:32.597 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:40:32.597 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:40:32.597 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:40:32.677 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:40:33.039 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:40:33 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e01180
2020-03-20 16:40:33.054 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:40:33.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:40:33.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:40:33.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:40:33.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 16:40:33.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.291 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:40:33.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:40:33.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:40:33.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:40:33.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:40:33.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:40:33.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:40:33.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:40:33.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:40:33.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:40:33.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:40:33.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:40:33.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.305 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:40:33.308 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:40:33.308 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:40:33.308 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:40:33.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.310 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:40:33.310 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:40:33.312 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.312 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.312 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:40:33.313 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:40:33.313 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.313 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.313 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.314 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.314 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:40:33.316 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:40:33.317 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:40:33.353 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:40:33.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e01180: startup date [Fri Mar 20 16:40:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41ba7c47
2020-03-20 16:40:33.444 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:40:33.566 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:40:33.568 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:40:34.648 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:40:34.648 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:40:35.481 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:40:35.607 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:40:35.618 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:40:35.619 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:40:35.620 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:40:35.667 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:40:35.668 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:40:35.674 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:40:35.675 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:40:35.676 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:40:35.680 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:40:35.686 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:40:35.694 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=40e01180,type=ConfigurationPropertiesRebinder]
2020-03-20 16:40:35.700 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:40:35.707 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:40:35.714 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:40:35.741 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:40:36.290 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:40:36.290 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:40:36.610 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:40:36.611 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:40:36.734 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:40:37.143 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:40:37.265 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:40:37.268 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:40:37.269 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:40:37.272 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584693637271 with initial instances count: 2
2020-03-20 16:40:37.277 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:40:37.278 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584693637278, current=UP, previous=STARTING]
2020-03-20 16:40:37.279 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:40:37.282 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:40:37.313 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:40:37.335 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:40:37.340 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:40:37.343 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:40:37.359 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:40:37.360 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:40:37.363 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.495 seconds (JVM running for 18.727)
2020-03-20 16:40:38.478 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:40:38.478 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:40:38.479 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:40:38.494 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 16:40:39.055 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:40:46.449 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:40:47.283 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:40:47.632 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:40:52.209 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:40:52.238 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:41:02.838 [http-nio-9010-exec-9] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 16:41:02.855 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:25)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 16:45:37.146 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:50:19.868 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:50:20.830 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:50:20.900 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:50:23.807 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:50:23.818 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:50:37.147 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:50:44.938 [http-nio-9010-exec-5] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 16:50:44.941 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:25)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 16:53:52.788 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3efc6b5f: startup date [Fri Mar 20 16:53:52 CST 2020]; root of context hierarchy
2020-03-20 16:53:52.929 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:53:52.958 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9cc10219] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:53:53.703 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:53:53.719 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346b3cc4: startup date [Fri Mar 20 16:53:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3efc6b5f
2020-03-20 16:53:54.653 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:53:54.842 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:53:55.017 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 16:53:55.041 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:53:55.157 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$80a6ff1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:53:55.193 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$5ea110c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:53:55.199 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1771948668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:53:55.201 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:53:55.204 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:53:55.246 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9cc10219] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:53:55.683 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:53:55.694 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:53:55.702 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:53:55.702 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:53:55.705 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:53:55.793 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:53:55.793 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2074 ms
2020-03-20 16:53:56.023 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:53:56.023 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:53:56.030 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@195775d3
2020-03-20 16:53:56.413 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:53:58.264 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:53:58.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:53:58.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:53:58.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:53:58.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:53:58.344 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:53:58.697 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:53:58 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346b3cc4
2020-03-20 16:53:58.712 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:53:58.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:53:58.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:53:58.929 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:53:58.930 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 16:53:58.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:53:58.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:53:58.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:53:58.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:53:58.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:53:58.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:53:58.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:53:58.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:53:58.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:53:58.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:53:58.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:53:58.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:53:58.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:53:58.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:53:58.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:53:58.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:53:58.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:53:58.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:53:58.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:53:58.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:53:58.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:53:58.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:53:58.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:53:58.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:53:58.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:53:58.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:53:58.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.946 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:53:58.946 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:53:58.946 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:53:58.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:53:58.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:53:58.949 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:53:58.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:53:58.950 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:53:58.951 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.951 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.952 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:53:58.954 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:53:58.955 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:53:58.992 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:53:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346b3cc4: startup date [Fri Mar 20 16:53:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3efc6b5f
2020-03-20 16:53:59.066 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:53:59.159 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:53:59.160 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:54:00.110 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:54:00.110 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:54:00.959 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:54:01.087 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:54:01.098 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:54:01.099 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:54:01.099 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:54:01.150 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:54:01.151 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:54:01.158 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:54:01.160 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:54:01.161 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:54:01.164 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:54:01.171 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:54:01.179 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=346b3cc4,type=ConfigurationPropertiesRebinder]
2020-03-20 16:54:01.185 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:54:01.191 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:54:01.197 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:54:01.228 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:54:01.816 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:54:01.816 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:54:02.116 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:54:02.117 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:54:02.238 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:54:02.642 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:54:02.766 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:54:02.768 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:54:02.770 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:54:02.773 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584694442772 with initial instances count: 2
2020-03-20 16:54:02.779 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:54:02.779 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584694442779, current=UP, previous=STARTING]
2020-03-20 16:54:02.780 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:54:02.784 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:54:02.808 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:54:02.837 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:54:02.842 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:54:02.845 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:54:02.859 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:54:02.861 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:54:02.863 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.142 seconds (JVM running for 18.373)
2020-03-20 16:54:03.922 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:54:03.922 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:54:03.922 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:54:03.937 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 16:54:04.436 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:54:08.286 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:54:09.501 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:54:09.946 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:54:11.079 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:54:11.088 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:54:13.172 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:54:13.177 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:54:26.570 [http-nio-9010-exec-6] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 16:54:26.588 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 16:57:37.835 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@51f65adc: startup date [Fri Mar 20 16:57:37 CST 2020]; root of context hierarchy
2020-03-20 16:57:37.979 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:57:38.007 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d5e9b263] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:57:38.753 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 16:57:38.770 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63a3a02b: startup date [Fri Mar 20 16:57:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@51f65adc
2020-03-20 16:57:39.745 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 16:57:39.935 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 16:57:40.111 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 16:57:40.134 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:57:40.239 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b9cfaf66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:57:40.271 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$97c9c10d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:57:40.276 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/966752913] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:57:40.277 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 16:57:40.280 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:57:40.312 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d5e9b263] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 16:57:40.713 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 16:57:40.723 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 16:57:40.730 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 16:57:40.730 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 16:57:40.733 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 16:57:40.824 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 16:57:40.824 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2054 ms
2020-03-20 16:57:41.046 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:57:41.047 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:57:41.053 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a51ab78
2020-03-20 16:57:41.439 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 16:57:43.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 16:57:43.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 16:57:43.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 16:57:43.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 16:57:43.265 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 16:57:43.342 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 16:57:43.691 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 16:57:43 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63a3a02b
2020-03-20 16:57:43.706 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 16:57:43.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:57:43.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 16:57:43.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 16:57:43.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 16:57:43.924 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.924 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 16:57:43.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 16:57:43.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 16:57:43.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 16:57:43.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 16:57:43.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 16:57:43.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:57:43.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:57:43.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:57:43.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:57:43.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:57:43.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 16:57:43.940 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.941 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:57:43.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 16:57:43.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 16:57:43.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.946 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 16:57:43.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:57:43.983 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 16:57:44.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63a3a02b: startup date [Fri Mar 20 16:57:38 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@51f65adc
2020-03-20 16:57:44.056 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 16:57:44.152 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 16:57:44.153 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 16:57:45.208 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 16:57:45.209 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 16:57:46.045 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 16:57:46.167 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 16:57:46.178 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:57:46.179 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 16:57:46.179 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 16:57:46.233 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 16:57:46.235 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 16:57:46.242 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 16:57:46.244 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 16:57:46.244 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 16:57:46.247 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 16:57:46.254 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 16:57:46.263 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63a3a02b,type=ConfigurationPropertiesRebinder]
2020-03-20 16:57:46.268 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 16:57:46.274 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 16:57:46.282 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 16:57:46.307 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 16:57:46.903 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 16:57:46.904 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 16:57:47.213 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 16:57:47.213 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 16:57:47.335 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 16:57:47.745 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 16:57:47.862 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 16:57:47.864 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 16:57:47.866 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 16:57:47.869 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584694667868 with initial instances count: 2
2020-03-20 16:57:47.875 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 16:57:47.875 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584694667875, current=UP, previous=STARTING]
2020-03-20 16:57:47.877 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 16:57:47.880 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 16:57:47.907 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 16:57:47.932 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 16:57:47.938 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 16:57:47.942 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 16:57:47.957 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 16:57:47.958 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 16:57:47.959 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.029 seconds (JVM running for 18.269)
2020-03-20 16:57:49.071 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 16:57:49.071 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 16:57:49.072 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 16:57:49.087 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 16:57:49.607 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 16:57:57.255 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:57:58.230 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:57:58.418 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:57:59.404 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 16:57:59.421 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 16:58:11.615 [http-nio-9010-exec-8] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 16:58:11.631 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.RuntimeException: Failed to store file IMG192168254110202003201658110001
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:28)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.file.NoSuchFileException: localStoragePath\IMG192168254110202003201658110001
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
	at java.nio.file.Files.newOutputStream(Files.java:216)
	at java.nio.file.Files.copy(Files.java:3016)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	... 57 common frames omitted
2020-03-20 17:02:47.748 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:04:36.348 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:04:37.245 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:04:37.322 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:04:38.417 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:04:38.432 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:04:52.778 [http-nio-9010-exec-3] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:04:52.782 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.RuntimeException: Failed to store file IMG192168254110202003201704520001
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:28)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.file.NoSuchFileException: localStoragePath\IMG192168254110202003201704520001
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
	at java.nio.file.Files.newOutputStream(Files.java:216)
	at java.nio.file.Files.copy(Files.java:3016)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	... 57 common frames omitted
2020-03-20 17:05:06.933 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:05:07.565 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:05:07.636 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:05:10.958 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:05:10.972 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:05:22.354 [http-nio-9010-exec-1] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:05:22.360 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.RuntimeException: Failed to store file IMG192168254110202003201705220001
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:28)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.file.NoSuchFileException: localStoragePath\IMG192168254110202003201705220001
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
	at java.nio.file.Files.newOutputStream(Files.java:216)
	at java.nio.file.Files.copy(Files.java:3016)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	... 57 common frames omitted
2020-03-20 17:05:56.246 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2d9dd571: startup date [Fri Mar 20 17:05:56 CST 2020]; root of context hierarchy
2020-03-20 17:05:56.393 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:05:56.424 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8aaa8e99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:05:57.179 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 17:05:57.196 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ddb9923: startup date [Fri Mar 20 17:05:57 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d9dd571
2020-03-20 17:05:58.144 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 17:05:58.333 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 17:05:58.512 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 17:05:58.536 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:05:58.641 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6e908b9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:05:58.675 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$4c8a9d43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:05:58.681 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1653279102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:05:58.682 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 17:05:58.684 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:05:58.728 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8aaa8e99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:05:59.122 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 17:05:59.134 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 17:05:59.142 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 17:05:59.142 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 17:05:59.145 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 17:05:59.231 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 17:05:59.232 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2036 ms
2020-03-20 17:05:59.459 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:05:59.459 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:05:59.466 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@76d7b912
2020-03-20 17:05:59.852 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 17:06:01.897 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 17:06:01.898 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 17:06:01.898 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 17:06:01.898 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 17:06:01.898 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 17:06:01.981 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 17:06:02.336 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 17:06:02 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ddb9923
2020-03-20 17:06:02.352 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:06:02.574 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:06:02.575 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:06:02.576 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 17:06:02.576 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 17:06:02.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.578 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.579 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.580 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.584 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 17:06:02.585 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.585 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 17:06:02.585 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 17:06:02.585 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 17:06:02.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 17:06:02.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 17:06:02.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 17:06:02.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 17:06:02.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 17:06:02.586 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 17:06:02.587 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 17:06:02.588 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 17:06:02.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 17:06:02.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.589 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 17:06:02.590 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 17:06:02.590 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:06:02.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:06:02.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:06:02.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:06:02.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.591 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:06:02.592 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:06:02.594 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:06:02.594 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:06:02.594 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.594 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.595 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.595 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.595 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.595 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:06:02.595 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:06:02.595 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.597 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.598 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:06:02.600 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 17:06:02.600 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:06:02.636 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 17:06:02.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ddb9923: startup date [Fri Mar 20 17:05:57 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2d9dd571
2020-03-20 17:06:02.711 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 17:06:02.805 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 17:06:02.807 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 17:06:03.766 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:06:03.766 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:06:04.598 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 17:06:04.723 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 17:06:04.734 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:06:04.735 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:06:04.735 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:06:04.782 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 17:06:04.783 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 17:06:04.790 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 17:06:04.792 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 17:06:04.793 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 17:06:04.796 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 17:06:04.802 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 17:06:04.811 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ddb9923,type=ConfigurationPropertiesRebinder]
2020-03-20 17:06:04.817 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 17:06:04.823 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 17:06:04.831 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 17:06:04.863 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 17:06:05.414 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 17:06:05.414 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 17:06:05.726 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 17:06:05.726 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 17:06:05.848 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 17:06:06.266 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 17:06:06.389 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 17:06:06.391 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 17:06:06.394 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 17:06:06.397 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584695166396 with initial instances count: 3
2020-03-20 17:06:06.403 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 17:06:06.403 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584695166403, current=UP, previous=STARTING]
2020-03-20 17:06:06.404 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 17:06:06.407 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 17:06:06.439 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 17:06:06.464 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 17:06:06.469 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 17:06:06.473 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 17:06:06.489 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 17:06:06.490 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 17:06:06.495 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.344 seconds (JVM running for 18.562)
2020-03-20 17:06:07.415 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 17:06:07.416 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 17:06:07.417 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 17:06:07.432 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 17:06:07.955 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 17:06:21.544 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:06:23.579 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:06:23.800 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:06:25.567 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:06:25.590 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:06:35.504 [http-nio-9010-exec-5] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:06:35.523 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 17:11:06.268 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:12:03.942 [http-nio-9010-exec-9] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:12:03.944 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 17:16:06.270 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:21:06.272 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:26:06.273 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:31:06.276 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:34:58.236 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a28c64d: startup date [Fri Mar 20 17:34:58 CST 2020]; root of context hierarchy
2020-03-20 17:34:58.388 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:34:58.420 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40d66841] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:34:59.165 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 17:34:59.181 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b35dd2: startup date [Fri Mar 20 17:34:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a28c64d
2020-03-20 17:35:00.190 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 17:35:00.398 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 17:35:00.625 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 17:35:00.658 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:35:00.778 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24bc6544] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:35:00.815 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2b676eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:35:00.821 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/807900418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:35:00.822 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 17:35:00.826 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:35:00.868 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40d66841] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:35:01.344 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 17:35:01.357 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 17:35:01.366 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 17:35:01.367 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 17:35:01.371 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 17:35:01.470 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 17:35:01.471 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2290 ms
2020-03-20 17:35:01.787 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:35:01.787 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:35:01.795 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5affc700
2020-03-20 17:35:02.203 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 17:35:04.370 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 17:35:04.371 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 17:35:04.371 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 17:35:04.371 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 17:35:04.371 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 17:35:04.451 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 17:35:04.912 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 17:35:04 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b35dd2
2020-03-20 17:35:04.928 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:35:05.117 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 17:35:05.118 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:35:05.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:35:05.119 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 17:35:05.120 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.121 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.123 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 17:35:05.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 17:35:05.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 17:35:05.128 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 17:35:05.129 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 17:35:05.130 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 17:35:05.131 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 17:35:05.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 17:35:05.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.132 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 17:35:05.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:35:05.133 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:35:05.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:35:05.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:35:05.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:35:05.134 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:35:05.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:35:05.137 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:35:05.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:35:05.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:35:05.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:35:05.138 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.140 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:35:05.141 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 17:35:05.143 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:35:05.182 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 17:35:05.217 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b35dd2: startup date [Fri Mar 20 17:34:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a28c64d
2020-03-20 17:35:05.254 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 17:35:05.360 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 17:35:05.362 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 17:35:06.471 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:35:06.471 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:35:07.355 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 17:35:07.474 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 17:35:07.484 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:35:07.485 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:35:07.487 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:35:07.536 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 17:35:07.537 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 17:35:07.546 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 17:35:07.548 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 17:35:07.549 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 17:35:07.551 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 17:35:07.558 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 17:35:07.568 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=19b35dd2,type=ConfigurationPropertiesRebinder]
2020-03-20 17:35:07.574 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 17:35:07.581 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 17:35:07.587 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 17:35:07.628 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 17:35:08.199 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 17:35:08.199 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 17:35:08.521 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 17:35:08.521 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 17:35:08.646 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 17:35:09.057 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 17:35:09.180 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 17:35:09.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 17:35:09.184 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 17:35:09.188 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584696909187 with initial instances count: 3
2020-03-20 17:35:09.194 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 17:35:09.195 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584696909195, current=UP, previous=STARTING]
2020-03-20 17:35:09.196 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 17:35:09.198 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 17:35:09.225 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 17:35:09.253 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 17:35:09.258 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 17:35:09.261 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 17:35:09.277 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 17:35:09.278 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 17:35:09.280 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.111 seconds (JVM running for 19.604)
2020-03-20 17:35:09.989 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 17:35:09.989 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 17:35:09.989 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 17:35:10.007 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 17:35:10.598 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 17:35:24.725 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:35:25.817 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:35:26.122 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:35:27.057 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:35:27.085 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:35:30.018 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:35:30.030 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:35:47.241 [http-nio-9010-exec-8] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:35:47.274 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 17:40:09.060 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:42:36.992 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:42:38.387 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:42:38.466 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:42:40.386 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:42:40.394 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:42:57.661 [http-nio-9010-exec-6] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:42:57.663 [http-nio-9010-exec-6] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 17:43:41.985 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:43:43.336 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:43:43.412 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:43:44.793 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:43:44.803 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:44:01.189 [http-nio-9010-exec-4] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:44:01.192 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 17:45:09.061 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:47:19.753 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f4df417: startup date [Fri Mar 20 17:47:19 CST 2020]; root of context hierarchy
2020-03-20 17:47:19.899 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:47:19.929 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f224b4b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:47:20.685 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 17:47:20.702 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@415b9240: startup date [Fri Mar 20 17:47:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f4df417
2020-03-20 17:47:21.682 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 17:47:21.870 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 17:47:22.047 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 17:47:22.071 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:47:22.175 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d60ab1bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:47:22.212 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b404c362] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:47:22.219 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1224663040] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:47:22.220 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 17:47:22.223 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:47:22.264 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f224b4b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:47:22.705 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 17:47:22.717 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 17:47:22.725 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 17:47:22.725 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 17:47:22.729 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 17:47:22.824 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 17:47:22.824 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2122 ms
2020-03-20 17:47:23.064 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:47:23.064 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:47:23.072 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@21f6d348
2020-03-20 17:47:23.505 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 17:47:25.340 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 17:47:25.341 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 17:47:25.341 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 17:47:25.341 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 17:47:25.341 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 17:47:25.416 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 17:47:25.825 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 17:47:25 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@415b9240
2020-03-20 17:47:25.840 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:47:26.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:47:26.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 17:47:26.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:47:26.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 17:47:26.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.028 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.035 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 17:47:26.035 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.035 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 17:47:26.035 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 17:47:26.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 17:47:26.037 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 17:47:26.038 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 17:47:26.039 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 17:47:26.039 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.039 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 17:47:26.040 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 17:47:26.040 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:47:26.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:47:26.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:47:26.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:47:26.041 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:47:26.042 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:47:26.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:47:26.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:47:26.044 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.045 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.045 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.045 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:47:26.045 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.045 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.046 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:47:26.046 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:47:26.046 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 17:47:26.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.047 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:47:26.048 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.050 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 17:47:26.051 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:47:26.087 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 17:47:26.122 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@415b9240: startup date [Fri Mar 20 17:47:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f4df417
2020-03-20 17:47:26.159 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 17:47:26.251 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 17:47:26.252 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 17:47:27.259 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:47:27.259 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:47:28.387 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 17:47:28.579 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 17:47:28.601 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:47:28.603 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:47:28.604 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:47:28.680 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 17:47:28.681 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 17:47:28.689 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 17:47:28.693 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 17:47:28.694 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 17:47:28.698 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 17:47:28.707 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 17:47:28.720 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=415b9240,type=ConfigurationPropertiesRebinder]
2020-03-20 17:47:28.729 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 17:47:28.739 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 17:47:28.749 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 17:47:28.783 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 17:47:29.395 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 17:47:29.395 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 17:47:29.707 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 17:47:29.708 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 17:47:29.828 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:47:30.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 17:47:30.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 17:47:30.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 17:47:30.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 17:47:30.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 17:47:30.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 17:47:30.237 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 17:47:30.362 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 17:47:30.365 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 17:47:30.367 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 17:47:30.370 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584697650369 with initial instances count: 3
2020-03-20 17:47:30.377 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 17:47:30.377 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584697650377, current=UP, previous=STARTING]
2020-03-20 17:47:30.378 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 17:47:30.382 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 17:47:30.411 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 17:47:30.436 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 17:47:30.443 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 17:47:30.447 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 17:47:30.462 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 17:47:30.463 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 17:47:30.465 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.826 seconds (JVM running for 19.329)
2020-03-20 17:47:31.644 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 17:47:31.645 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 17:47:31.645 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 17:47:31.659 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-03-20 17:47:32.167 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 17:47:40.581 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:47:41.287 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:47:41.463 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:47:42.668 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:47:42.684 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:47:53.134 [http-nio-9010-exec-5] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:47:53.154 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.RuntimeException: Failed to store file IMG192168254110202003201747530001
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:28)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.file.NoSuchFileException: localStoragePath\IMG192168254110202003201747530001
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
	at java.nio.file.Files.newOutputStream(Files.java:216)
	at java.nio.file.Files.copy(Files.java:3016)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	... 57 common frames omitted
2020-03-20 17:52:30.239 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:54:00.826 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630: startup date [Fri Mar 20 17:54:00 CST 2020]; root of context hierarchy
2020-03-20 17:54:00.970 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:54:01.000 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$635d1a99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:54:01.741 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 17:54:01.757 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ba8c9d2: startup date [Fri Mar 20 17:54:01 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630
2020-03-20 17:54:02.688 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 17:54:02.878 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 17:54:03.058 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 17:54:03.082 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:54:03.186 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4743179c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:54:03.218 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$253d2943] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:54:03.225 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1046949961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:54:03.225 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 17:54:03.228 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:54:03.273 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$635d1a99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:54:03.679 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 17:54:03.690 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 17:54:03.698 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 17:54:03.698 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 17:54:03.702 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 17:54:03.790 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 17:54:03.790 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2033 ms
2020-03-20 17:54:04.006 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:54:04.007 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:54:04.013 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@57545322
2020-03-20 17:54:04.388 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 17:54:06.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 17:54:06.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 17:54:06.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 17:54:06.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 17:54:06.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 17:54:06.423 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 17:54:06.807 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 17:54:06 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ba8c9d2
2020-03-20 17:54:06.821 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:54:07.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:54:07.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:54:07.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 17:54:07.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 17:54:07.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 17:54:07.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 17:54:07.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 17:54:07.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 17:54:07.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 17:54:07.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 17:54:07.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 17:54:07.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 17:54:07.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 17:54:07.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 17:54:07.024 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:54:07.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:54:07.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:54:07.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:54:07.025 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:54:07.026 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:54:07.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:54:07.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:54:07.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.029 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:54:07.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:54:07.030 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:54:07.031 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 17:54:07.032 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:54:07.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:54:07.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.033 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.034 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:54:07.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 17:54:07.036 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:54:07.071 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 17:54:07.107 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ba8c9d2: startup date [Fri Mar 20 17:54:01 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22e24630
2020-03-20 17:54:07.146 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 17:54:07.245 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 17:54:07.246 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 17:54:08.195 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:54:08.195 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:54:09.043 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 17:54:09.169 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 17:54:09.179 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:54:09.180 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:54:09.181 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:54:09.229 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 17:54:09.230 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 17:54:09.237 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 17:54:09.238 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 17:54:09.239 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 17:54:09.241 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 17:54:09.249 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 17:54:09.257 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1ba8c9d2,type=ConfigurationPropertiesRebinder]
2020-03-20 17:54:09.264 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 17:54:09.271 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 17:54:09.276 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 17:54:09.303 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 17:54:09.845 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 17:54:09.846 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 17:54:10.149 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 17:54:10.149 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 17:54:10.271 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 17:54:10.696 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 17:54:10.819 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 17:54:10.822 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 17:54:10.825 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 17:54:10.829 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584698050828 with initial instances count: 3
2020-03-20 17:54:10.838 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 17:54:10.838 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584698050838, current=UP, previous=STARTING]
2020-03-20 17:54:10.839 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 17:54:10.842 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 17:54:10.875 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 17:54:10.900 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 17:54:10.904 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 17:54:10.907 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 17:54:10.923 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 17:54:10.925 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 17:54:10.927 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.198 seconds (JVM running for 18.506)
2020-03-20 17:54:11.783 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 17:54:11.783 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 17:54:11.783 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 17:54:11.798 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 17:54:12.310 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 17:54:19.307 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:54:20.537 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:54:20.736 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:54:22.010 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:54:22.028 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:54:35.361 [http-nio-9010-exec-7] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:54:35.378 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.RuntimeException: Failed to store file IMG192168254110202003201754350001
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:28)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.file.NoSuchFileException: images\photo_2020-03-17_22-48-44.jpg\IMG192168254110202003201754350001
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
	at java.nio.file.Files.newOutputStream(Files.java:216)
	at java.nio.file.Files.copy(Files.java:3016)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	... 57 common frames omitted
2020-03-20 17:56:26.709 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ce52086: startup date [Fri Mar 20 17:56:26 CST 2020]; root of context hierarchy
2020-03-20 17:56:26.854 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:56:26.885 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4a5b949d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:56:27.638 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 17:56:27.654 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e86aed8: startup date [Fri Mar 20 17:56:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ce52086
2020-03-20 17:56:28.597 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 17:56:28.785 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 17:56:28.965 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 17:56:28.988 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:56:29.090 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2e4191a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:56:29.122 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$c3ba347] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:56:29.127 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/699642704] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:56:29.129 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 17:56:29.132 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:56:29.176 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4a5b949d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:56:29.560 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 17:56:29.571 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 17:56:29.578 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 17:56:29.578 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 17:56:29.582 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 17:56:29.667 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 17:56:29.667 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2013 ms
2020-03-20 17:56:29.938 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:56:29.938 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:56:29.949 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@54907729
2020-03-20 17:56:30.370 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 17:56:32.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 17:56:32.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 17:56:32.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 17:56:32.215 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 17:56:32.216 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 17:56:32.295 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 17:56:32.684 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 17:56:32 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e86aed8
2020-03-20 17:56:32.698 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:56:32.881 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:56:32.882 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:56:32.882 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 17:56:32.883 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 17:56:32.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 17:56:32.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 17:56:32.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 17:56:32.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 17:56:32.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 17:56:32.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 17:56:32.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 17:56:32.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 17:56:32.897 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.897 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 17:56:32.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:56:32.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:56:32.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:56:32.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:56:32.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:56:32.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:56:32.901 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:56:32.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:56:32.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:56:32.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:56:32.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:56:32.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 17:56:32.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:56:32.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:56:32.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:56:32.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 17:56:32.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:56:32.948 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 17:56:32.987 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e86aed8: startup date [Fri Mar 20 17:56:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ce52086
2020-03-20 17:56:33.024 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 17:56:33.119 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 17:56:33.121 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 17:56:34.092 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:56:34.092 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:56:34.893 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 17:56:35.014 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 17:56:35.025 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:56:35.026 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:56:35.027 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:56:35.075 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 17:56:35.077 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 17:56:35.084 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 17:56:35.085 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 17:56:35.085 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 17:56:35.088 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 17:56:35.095 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 17:56:35.103 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5e86aed8,type=ConfigurationPropertiesRebinder]
2020-03-20 17:56:35.109 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 17:56:35.115 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 17:56:35.121 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 17:56:35.149 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 17:56:35.837 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 17:56:35.837 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 17:56:36.171 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 17:56:36.171 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 17:56:36.292 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:56:36.720 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 17:56:36.720 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 17:56:36.720 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 17:56:36.721 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 17:56:36.721 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 17:56:36.721 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 17:56:36.721 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 17:56:36.839 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 17:56:36.842 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 17:56:36.844 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 17:56:36.847 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584698196846 with initial instances count: 3
2020-03-20 17:56:36.852 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 17:56:36.853 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584698196853, current=UP, previous=STARTING]
2020-03-20 17:56:36.854 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 17:56:36.857 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 17:56:36.884 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 17:56:36.911 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 17:56:36.916 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 17:56:36.919 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 17:56:36.934 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 17:56:36.936 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 17:56:36.938 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.165 seconds (JVM running for 18.487)
2020-03-20 17:56:38.108 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 17:56:38.108 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 17:56:38.108 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 17:56:38.131 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-20 17:56:38.709 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 17:56:41.414 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:56:42.783 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:56:42.967 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:56:45.694 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:56:45.710 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:56:56.483 [http-nio-9010-exec-7] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:56:56.500 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 17:57:46.942 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d9a65e2: startup date [Fri Mar 20 17:57:46 CST 2020]; root of context hierarchy
2020-03-20 17:57:47.086 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:57:47.116 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b70bed6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:57:47.875 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 17:57:47.891 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337: startup date [Fri Mar 20 17:57:47 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d9a65e2
2020-03-20 17:57:48.912 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 17:57:49.095 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 17:57:49.269 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 17:57:49.294 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:57:49.397 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9af1ea6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:57:49.430 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$78ebfc16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:57:49.437 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1827051111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:57:49.438 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 17:57:49.441 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:57:49.473 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b70bed6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 17:57:49.881 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 17:57:49.891 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 17:57:49.899 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 17:57:49.899 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 17:57:49.903 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 17:57:49.988 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 17:57:49.988 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2098 ms
2020-03-20 17:57:50.211 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:57:50.211 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:57:50.217 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4a424d05
2020-03-20 17:57:50.585 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 17:57:52.416 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 17:57:52.417 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 17:57:52.417 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 17:57:52.417 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 17:57:52.417 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 17:57:52.496 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 17:57:52.882 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 17:57:52 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337
2020-03-20 17:57:52.897 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 17:57:53.083 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:57:53.083 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 17:57:53.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 17:57:53.084 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 17:57:53.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.086 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.087 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.088 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.088 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.089 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 17:57:53.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.093 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 17:57:53.094 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 17:57:53.095 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 17:57:53.096 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 17:57:53.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 17:57:53.097 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 17:57:53.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.098 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:57:53.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:57:53.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:57:53.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:57:53.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:57:53.099 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:57:53.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:57:53.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:57:53.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 17:57:53.102 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:57:53.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 17:57:53.103 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 17:57:53.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:57:53.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:57:53.105 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.106 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.106 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.106 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.106 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 17:57:53.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 17:57:53.108 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:57:53.145 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 17:57:53.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d765337: startup date [Fri Mar 20 17:57:47 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d9a65e2
2020-03-20 17:57:53.216 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 17:57:53.316 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 17:57:53.317 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 17:57:54.412 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 17:57:54.412 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 17:57:55.245 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 17:57:55.368 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 17:57:55.378 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:57:55.379 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 17:57:55.379 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 17:57:55.432 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 17:57:55.434 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 17:57:55.441 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 17:57:55.442 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 17:57:55.443 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 17:57:55.446 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 17:57:55.455 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 17:57:55.464 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2d765337,type=ConfigurationPropertiesRebinder]
2020-03-20 17:57:55.469 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 17:57:55.478 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 17:57:55.483 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 17:57:55.514 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 17:57:56.053 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 17:57:56.053 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 17:57:56.360 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 17:57:56.360 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 17:57:56.483 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 17:57:56.902 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 17:57:57.019 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 17:57:57.021 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 17:57:57.023 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 17:57:57.026 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584698277025 with initial instances count: 3
2020-03-20 17:57:57.032 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 17:57:57.032 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584698277032, current=UP, previous=STARTING]
2020-03-20 17:57:57.034 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 17:57:57.037 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 17:57:57.066 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 17:57:57.094 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 17:57:57.100 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 17:57:57.102 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 17:57:57.117 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 17:57:57.118 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 17:57:57.121 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.103 seconds (JVM running for 18.355)
2020-03-20 17:57:57.801 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 17:57:57.801 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 17:57:57.801 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 17:57:57.820 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-20 17:57:58.363 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 17:57:59.827 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:58:01.293 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:58:01.520 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:58:02.451 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 17:58:02.467 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 17:58:11.027 [http-nio-9010-exec-2] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 17:58:11.040 [http-nio-9010-exec-2] ERROR alipay.config.exception.AlipayExceptionHandler - localStoragePath\IMG192168254110202003201758110001
java.nio.file.NoSuchFileException: localStoragePath\IMG192168254110202003201758110001
	at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)
	at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:230)
	at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)
	at java.nio.file.Files.newOutputStream(Files.java:216)
	at java.nio.file.Files.copy(Files.java:3016)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:02:56.904 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:04:35.066 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@36028dcd: startup date [Fri Mar 20 18:04:35 CST 2020]; root of context hierarchy
2020-03-20 18:04:35.250 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:04:35.284 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$232086ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:04:36.067 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:04:36.087 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@716ee39e: startup date [Fri Mar 20 18:04:36 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@36028dcd
2020-03-20 18:04:37.296 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:04:37.533 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:04:37.747 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:04:37.771 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:04:37.899 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$70683d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:04:37.941 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e5009578] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:04:37.948 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1775624106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:04:37.950 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:04:37.956 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:04:38.009 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$232086ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:04:38.543 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:04:38.555 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:04:38.567 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:04:38.567 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:04:38.571 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:04:38.664 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:04:38.664 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2577 ms
2020-03-20 18:04:38.936 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:04:38.937 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:04:38.945 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5ea47505
2020-03-20 18:04:39.418 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:04:41.524 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:04:41.525 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:04:41.525 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:04:41.525 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:04:41.525 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:04:41.626 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:04:42.391 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:04:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@716ee39e
2020-03-20 18:04:42.411 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:04:42.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:04:42.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:04:42.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:04:42.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:04:42.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:04:42.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:04:42.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:04:42.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:04:42.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:04:42.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:04:42.675 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:04:42.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:04:42.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:04:42.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:04:42.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:04:42.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:04:42.676 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:04:42.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:04:42.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:04:42.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:04:42.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:04:42.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:04:42.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:04:42.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:04:42.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:04:42.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:04:42.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:04:42.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:04:42.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:04:42.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:04:42.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:04:42.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:04:42.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:04:42.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:04:42.683 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:04:42.686 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:04:42.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:04:42.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.687 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:04:42.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:04:42.688 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:04:42.689 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:04:42.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:04:42.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.690 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:04:42.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.691 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:04:42.693 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:04:42.694 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:04:42.745 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:04:42.793 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@716ee39e: startup date [Fri Mar 20 18:04:36 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@36028dcd
2020-03-20 18:04:42.848 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:04:43.006 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:04:43.008 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:04:44.131 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:04:44.131 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:04:45.394 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:04:45.605 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:04:45.626 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:04:45.628 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:04:45.629 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:04:45.714 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:04:45.716 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:04:45.727 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:04:45.730 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:04:45.731 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:04:45.735 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:04:45.744 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:04:45.759 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=716ee39e,type=ConfigurationPropertiesRebinder]
2020-03-20 18:04:45.768 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:04:45.777 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:04:45.785 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:04:45.830 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:04:46.651 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:04:46.652 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:04:46.770 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:04:46.771 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:04:46.963 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:04:47.376 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:04:47.531 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:04:47.534 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:04:47.536 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:04:47.540 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584698687539 with initial instances count: 3
2020-03-20 18:04:47.547 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:04:47.547 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584698687547, current=UP, previous=STARTING]
2020-03-20 18:04:47.548 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:04:47.552 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:04:47.590 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:04:47.634 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:04:47.643 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:04:47.667 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:04:47.700 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:04:47.701 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:04:47.704 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 13.982 seconds (JVM running for 22.386)
2020-03-20 18:04:48.636 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:04:48.636 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:04:48.637 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:04:48.661 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2020-03-20 18:04:49.191 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:04:59.778 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:05:08.390 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:05:08.603 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:05:09.944 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.PaymentCodeContorller - 接受的介质参数为：MM192168254110202003191912490001
2020-03-20 18:05:09.965 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:05:20.233 [http-nio-9010-exec-9] INFO  alipay.manage.api.StorageApi - 上传图片
2020-03-20 18:10:52.838 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m217ms574µs600ns).
2020-03-20 18:10:52.842 [DiscoveryClient-CacheRefreshExecutor-0] INFO  org.apache.http.impl.client.DefaultHttpClient - I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:8761: Software caused connection abort: recv failed
2020-03-20 18:10:52.842 [DiscoveryClient-CacheRefreshExecutor-0] INFO  org.apache.http.impl.client.DefaultHttpClient - Retrying request to {}->http://localhost:8761
2020-03-20 18:10:52.844 [DiscoveryClient-0] WARN  com.netflix.discovery.TimedSupervisorTask - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:64)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:10:52.844 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:98)
	at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)
	at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)
	at java.nio.file.Paths.get(Paths.java:84)
	at alipay.manage.util.StorageUtil.uploadGatheringCode(StorageUtil.java:26)
	at alipay.manage.api.StorageApi.uploadPic(StorageApi.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:10:52.846 [DiscoveryClient-1] WARN  com.netflix.discovery.TimedSupervisorTask - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:64)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:10:52.847 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:10:52.847 [DiscoveryClient-HeartbeatExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Software caused connection abort: recv failed
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Software caused connection abort: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2020-03-20 18:10:52.848 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.SocketException: Software caused connection abort: recv failed
2020-03-20 18:10:52.860 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution succeeded on retry #1
2020-03-20 18:10:52.860 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:10:52.860 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: null
2020-03-20 18:10:52.865 [DiscoveryClient-CacheRefreshExecutor-0] ERROR c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error
javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:10:52.865 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: null
2020-03-20 18:10:52.866 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:12:59.435 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:13:00.236 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:13:00.316 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:13:01.367 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:15:52.849 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:16:12.514 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:16:12.577 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:16:12.584 [http-nio-9010-exec-8] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:16:12.594 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:16:12.599 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:16:12.601 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:16:12.601 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@42b6d27]
2020-03-20 18:16:12.603 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@42b6d27]
2020-03-20 18:16:12.659 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:16:12.659 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: []
2020-03-20 18:16:12.696 [http-nio-9010-exec-8] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 18:16:12.727 [http-nio-9010-exec-8] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 18:16:12.731 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:131)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 18:16:12.832 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:16:41.016 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:16:47.302 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:16:47.357 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:16:47.358 [http-nio-9010-exec-3] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:16:47.359 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:16:47.364 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:16:47.364 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:16:47.364 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@399ed4f8]
2020-03-20 18:16:47.365 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@399ed4f8]
2020-03-20 18:16:47.391 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:16:47.391 [http-nio-9010-exec-3] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: []
2020-03-20 18:16:47.421 [http-nio-9010-exec-3] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:131)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 18:16:47.518 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:20:52.852 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:24:58.660 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:24:59.493 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:24:59.565 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:25:12.483 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:25:22.503 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:25:22.563 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:25:22.566 [http-nio-9010-exec-9] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:25:22.568 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:25:22.570 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:25:22.570 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:25:22.571 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@2ffc6127]
2020-03-20 18:25:22.573 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@2ffc6127]
2020-03-20 18:25:22.603 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:25:22.604 [http-nio-9010-exec-9] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: []
2020-03-20 18:25:22.631 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
### The error may involve alipay.manage.mapper.CorrelationMapper.addAccountMedium-Inline
### The error occurred while setting parameters
### SQL: update alipay_correlation                            where id in
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:63)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy137.addAccountMedium(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.addAccountMedium(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:131)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where id in' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy186.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 78 common frames omitted
2020-03-20 18:25:22.750 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:25:52.854 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:27:52.604 [Thread-56] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@716ee39e: startup date [Fri Mar 20 18:04:36 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@36028dcd
2020-03-20 18:27:52.605 [Thread-56] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application otc-alipay-server with eureka with status DOWN
2020-03-20 18:27:52.605 [Thread-56] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584700072605, current=DOWN, previous=UP]
2020-03-20 18:27:52.606 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:27:52.609 [Thread-56] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
2020-03-20 18:27:52.613 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:27:52.615 [Thread-56] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-03-20 18:27:52.618 [Thread-56] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-03-20 18:27:52.619 [Thread-56] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-03-20 18:27:52.626 [Thread-56] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:04:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@716ee39e
2020-03-20 18:27:52.630 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-20 18:27:55.632 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-20 18:27:55.634 [DiscoveryClient-0] WARN  com.netflix.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2020-03-20 18:27:55.677 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - deregister  status: 200
2020-03-20 18:27:55.684 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-20 18:27:56.831 [Thread-56] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-03-20 18:27:56.845 [Thread-56] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-03-20 18:28:13.634 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@77d7d507: startup date [Fri Mar 20 18:28:13 CST 2020]; root of context hierarchy
2020-03-20 18:28:13.818 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:28:13.854 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5051ad24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:28:14.770 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:28:14.799 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37384c1c: startup date [Fri Mar 20 18:28:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77d7d507
2020-03-20 18:28:16.197 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:28:16.457 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:28:16.692 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:28:16.719 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:28:16.850 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3437aa27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:28:16.898 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1231bbce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:28:16.906 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/591986907] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:28:16.908 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:28:16.912 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:28:16.966 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5051ad24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:28:17.489 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:28:17.503 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:28:17.513 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:28:17.514 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:28:17.518 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:28:17.633 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:28:17.633 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2834 ms
2020-03-20 18:28:17.951 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:28:17.952 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:28:17.964 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@623840ca
2020-03-20 18:28:18.511 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:28:20.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:28:20.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:28:20.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:28:20.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:28:20.729 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:28:20.843 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:28:21.567 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:28:21 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37384c1c
2020-03-20 18:28:21.590 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:28:21.871 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:28:21.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:28:21.872 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:28:21.873 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:28:21.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.878 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.878 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.878 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:28:21.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:28:21.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:28:21.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:28:21.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:28:21.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:28:21.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:28:21.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:28:21.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:28:21.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:28:21.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:28:21.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:28:21.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:28:21.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:28:21.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:28:21.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:28:21.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:28:21.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.891 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:28:21.891 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:28:21.891 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:28:21.891 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:28:21.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:28:21.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:28:21.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:28:21.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.897 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:28:21.897 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:28:21.898 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.899 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:28:21.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:28:21.955 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:28:22.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37384c1c: startup date [Fri Mar 20 18:28:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77d7d507
2020-03-20 18:28:22.068 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:28:22.285 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:28:22.288 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:28:24.338 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:28:24.338 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:28:25.736 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:28:25.964 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:28:25.984 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:28:25.986 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:28:25.987 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:28:26.066 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:28:26.068 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:28:26.079 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:28:26.081 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:28:26.082 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:28:26.085 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:28:26.095 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:28:26.107 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=37384c1c,type=ConfigurationPropertiesRebinder]
2020-03-20 18:28:26.114 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:28:26.121 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:28:26.128 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:28:26.165 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:28:27.068 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:28:27.068 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:28:27.198 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:28:27.198 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:28:27.421 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:28:27.855 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:28:28.031 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:28:28.034 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:28:28.038 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:28:28.043 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584700108041 with initial instances count: 2
2020-03-20 18:28:28.052 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:28:28.053 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584700108053, current=UP, previous=STARTING]
2020-03-20 18:28:28.055 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:28:28.059 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:28:28.123 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:28:28.161 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:28:28.168 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:28:28.172 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:28:28.197 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:28:28.198 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:28:28.201 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 15.966 seconds (JVM running for 23.828)
2020-03-20 18:28:30.311 [RMI TCP Connection(9)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:28:30.317 [RMI TCP Connection(8)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:28:30.317 [RMI TCP Connection(8)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:28:30.357 [RMI TCP Connection(8)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2020-03-20 18:28:30.937 [RMI TCP Connection(9)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:28:49.346 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:28:50.502 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:28:50.755 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:28:51.847 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:28:58.673 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:28:58.734 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:28:58.738 [http-nio-9010-exec-7] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:28:58.751 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:28:58.756 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:28:58.759 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:28:58.760 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@74148379]
2020-03-20 18:28:58.762 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@74148379]
2020-03-20 18:28:58.825 [http-nio-9010-exec-7] ERROR alipay.config.redis.RedisConfig - Redis occur handleCachePutError：key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@74148379]；value -> [[alipay.manage.bean.Correlation@e7fba7f[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]]
org.springframework.data.redis.serializer.SerializationException: Cannot serialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to serialize object using DefaultSerializer; nested exception is java.io.NotSerializableException: alipay.manage.bean.Correlation
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.serialize(JdkSerializationRedisSerializer.java:96)
	at org.springframework.data.redis.serializer.DefaultRedisElementWriter.write(DefaultRedisElementWriter.java:43)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.write(RedisSerializationContext.java:219)
	at org.springframework.data.redis.cache.RedisCache.serializeCacheValue(RedisCache.java:238)
	at org.springframework.data.redis.cache.RedisCache.put(RedisCache.java:144)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doPut(AbstractCacheInvoker.java:87)
	at org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.apply(CacheAspectSupport.java:777)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:401)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy138.selectByExample(Unknown Source)
	at alipay.manage.service.impl.CorrelationServiceImpl.findCorrelation(CorrelationServiceImpl.java:106)
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:126)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to serialize object using DefaultSerializer; nested exception is java.io.NotSerializableException: alipay.manage.bean.Correlation
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:68)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:35)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.serialize(JdkSerializationRedisSerializer.java:94)
	... 71 common frames omitted
Caused by: java.io.NotSerializableException: alipay.manage.bean.Correlation
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.ArrayList.writeObject(ArrayList.java:766)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.springframework.core.serializer.DefaultSerializer.serialize(DefaultSerializer.java:46)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:63)
	... 73 common frames omitted
2020-03-20 18:28:58.836 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:28:58.836 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@e7fba7f[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 18:28:58.838 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:130)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:28:58.949 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:31:59.937 [Thread-56] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37384c1c: startup date [Fri Mar 20 18:28:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77d7d507
2020-03-20 18:31:59.939 [Thread-56] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application otc-alipay-server with eureka with status DOWN
2020-03-20 18:31:59.940 [Thread-56] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584700319940, current=DOWN, previous=UP]
2020-03-20 18:31:59.940 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:31:59.945 [Thread-56] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
2020-03-20 18:31:59.948 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:31:59.950 [Thread-56] INFO  o.s.context.support.DefaultLifecycleProcessor - Stopping beans in phase 0
2020-03-20 18:31:59.953 [Thread-56] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2020-03-20 18:31:59.954 [Thread-56] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2020-03-20 18:31:59.957 [Thread-56] INFO  o.s.c.a.AnnotationConfigApplicationContext - Closing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:28:21 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37384c1c
2020-03-20 18:31:59.959 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-20 18:32:02.963 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-20 18:32:02.976 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - deregister  status: 200
2020-03-20 18:32:02.988 [Thread-56] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-20 18:32:04.111 [Thread-56] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-03-20 18:32:04.121 [Thread-56] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-03-20 18:32:20.171 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d8fc2de: startup date [Fri Mar 20 18:32:20 CST 2020]; root of context hierarchy
2020-03-20 18:32:20.378 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:32:20.415 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a2c1b099] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:21.239 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:32:21.272 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3988c977: startup date [Fri Mar 20 18:32:21 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d8fc2de
2020-03-20 18:32:22.857 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:32:23.156 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:32:23.416 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:32:23.442 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:32:23.583 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$86a7ad9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:23.630 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$64a1bf43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:23.638 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1157680502] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:23.639 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:32:23.643 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:23.703 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a2c1b099] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:35.221 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@635be89f: startup date [Fri Mar 20 18:32:35 CST 2020]; root of context hierarchy
2020-03-20 18:32:35.375 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:32:35.407 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e0793fe8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:36.186 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:32:36.203 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10b5fd9: startup date [Fri Mar 20 18:32:36 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@635be89f
2020-03-20 18:32:37.299 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:32:37.551 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:32:37.786 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:32:37.811 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:32:37.919 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c45f3ceb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:37.954 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a2594e92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:37.960 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/868897916] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:37.961 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:32:37.965 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:38.016 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e0793fe8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:32:38.506 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:32:38.520 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:32:38.532 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:32:38.533 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:32:38.537 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:32:38.637 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:32:38.637 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2434 ms
2020-03-20 18:32:38.884 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:32:38.884 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:32:38.892 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4a424d05
2020-03-20 18:32:39.297 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:32:41.254 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:32:41.254 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:32:41.254 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:32:41.254 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:32:41.254 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:32:41.339 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:32:41.775 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:32:41 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10b5fd9
2020-03-20 18:32:41.793 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:32:41.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:32:41.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:32:41.987 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:32:41.987 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:32:41.988 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:32:41.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:41.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:32:41.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:32:41.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:32:41.998 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:32:41.999 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:32:42.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:32:42.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:32:42.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:32:42.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.000 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:32:42.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.001 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:32:42.002 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:32:42.002 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:32:42.002 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:32:42.002 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.002 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:32:42.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:32:42.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:32:42.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:32:42.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:32:42.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:32:42.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:32:42.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:32:42.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:32:42.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.009 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:32:42.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:32:42.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:32:42.050 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:32:42.088 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10b5fd9: startup date [Fri Mar 20 18:32:36 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@635be89f
2020-03-20 18:32:42.125 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:32:42.232 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:32:42.234 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:32:43.272 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:32:43.272 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:32:44.812 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:32:44.937 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:32:44.947 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:32:44.948 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:32:44.949 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:32:45.000 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:32:45.001 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:32:45.008 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:32:45.010 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:32:45.011 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:32:45.014 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:32:45.021 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:32:45.031 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=10b5fd9,type=ConfigurationPropertiesRebinder]
2020-03-20 18:32:45.037 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:32:45.044 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:32:45.051 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:32:45.087 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:32:45.713 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:32:45.713 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:32:46.047 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:32:46.047 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:32:46.176 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:32:46.607 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:32:46.734 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:32:46.735 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:32:46.737 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:32:46.740 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584700366739 with initial instances count: 2
2020-03-20 18:32:46.746 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:32:46.747 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584700366747, current=UP, previous=STARTING]
2020-03-20 18:32:46.748 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:32:46.751 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:32:46.784 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:32:46.807 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:32:46.813 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:32:46.816 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:32:46.832 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:32:46.833 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:32:46.835 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.766 seconds (JVM running for 20.228)
2020-03-20 18:32:48.204 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:32:48.204 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:32:48.204 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:32:48.221 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-20 18:32:48.786 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:33:20.467 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:33:21.153 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:33:21.369 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:33:23.680 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:33:29.520 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:33:29.594 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:33:29.606 [http-nio-9010-exec-7] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:33:29.628 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:33:29.643 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:33:29.649 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:33:29.651 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@4136c5aa]
2020-03-20 18:33:29.654 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@4136c5aa]
2020-03-20 18:33:29.713 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:33:29.728 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@381ea2c8[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 18:33:29.732 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:130)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:33:29.877 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:34:46.776 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - Re-registering apps/OTC-ALIPAY-SERVER
2020-03-20 18:34:46.776 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:34:46.782 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-20 18:35:16.783 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:35:16.788 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:37:46.611 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:38:34.563 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@71b5dbdc: startup date [Fri Mar 20 18:38:34 CST 2020]; root of context hierarchy
2020-03-20 18:38:34.707 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:38:34.736 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5cb477f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:38:35.494 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:38:35.514 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517b3782: startup date [Fri Mar 20 18:38:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@71b5dbdc
2020-03-20 18:38:36.582 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:38:36.767 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:38:36.942 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:38:36.966 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:38:37.068 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$409a74f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:38:37.103 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1e94869e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:38:37.108 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/422962627] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:38:37.109 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:38:37.112 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:38:37.143 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5cb477f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:38:37.551 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:38:37.561 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:38:37.568 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:38:37.569 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:38:37.572 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:38:37.661 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:38:37.661 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2147 ms
2020-03-20 18:38:37.886 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:38:37.887 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:38:37.894 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@760845ba
2020-03-20 18:38:38.267 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:38:40.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:38:40.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:38:40.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:38:40.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:38:40.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:38:40.187 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:38:40.629 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:38:40 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517b3782
2020-03-20 18:38:40.644 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:38:40.831 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:38:40.833 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:38:40.833 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:38:40.833 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:38:40.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:38:40.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:38:40.844 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:38:40.845 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:38:40.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:38:40.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:38:40.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:38:40.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.846 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:38:40.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:38:40.847 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:38:40.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:38:40.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:38:40.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:38:40.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:38:40.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:38:40.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:38:40.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:38:40.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.855 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:38:40.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:38:40.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:38:40.895 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:38:40.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517b3782: startup date [Fri Mar 20 18:38:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@71b5dbdc
2020-03-20 18:38:40.968 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:38:41.063 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:38:41.065 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:38:42.175 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:38:42.175 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:38:43.002 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:38:43.121 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:38:43.132 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:38:43.133 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:38:43.134 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:38:43.182 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:38:43.184 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:38:43.190 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:38:43.192 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:38:43.192 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:38:43.195 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:38:43.201 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:38:43.210 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=517b3782,type=ConfigurationPropertiesRebinder]
2020-03-20 18:38:43.215 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:38:43.223 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:38:43.228 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:38:43.256 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:38:43.845 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:38:43.845 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:38:44.153 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:38:44.153 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:38:44.274 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:38:44.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:38:44.803 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:38:44.805 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:38:44.806 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:38:44.809 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584700724809 with initial instances count: 3
2020-03-20 18:38:44.816 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:38:44.816 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584700724816, current=UP, previous=STARTING]
2020-03-20 18:38:44.818 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:38:44.821 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:38:44.845 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:38:44.872 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:38:44.878 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:38:44.880 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:38:44.894 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:38:44.896 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:38:44.898 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.248 seconds (JVM running for 18.525)
2020-03-20 18:38:45.777 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:38:45.777 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:38:45.778 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:38:45.793 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 18:38:46.326 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:38:52.308 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:38:53.287 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:38:53.561 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:38:58.000 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:39:03.701 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:39:03.761 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:39:03.765 [http-nio-9010-exec-4] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:39:03.773 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:39:03.778 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:39:03.779 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:39:03.780 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@d73157f]
2020-03-20 18:39:03.782 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@d73157f]
2020-03-20 18:39:03.820 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:39:03.829 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@4eb4c9bd[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 18:39:03.829 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数corr获取的值 ::null
2020-03-20 18:39:03.829 [http-nio-9010-exec-4] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数mediumId获取的值 ::504
2020-03-20 18:39:03.925 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:39:04.061 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:43:44.691 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:45:40.571 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b7fcc0e: startup date [Fri Mar 20 18:45:40 CST 2020]; root of context hierarchy
2020-03-20 18:45:40.720 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:45:40.752 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4dec763] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:45:41.508 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:45:41.526 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d606ef2: startup date [Fri Mar 20 18:45:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b7fcc0e
2020-03-20 18:45:42.458 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:45:42.650 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:45:42.828 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:45:42.852 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:45:42.958 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$98c4c466] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:45:42.992 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$76bed60d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:45:42.998 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/172592926] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:45:42.999 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:45:43.002 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:45:43.045 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b4dec763] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:45:43.440 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:45:43.450 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:45:43.457 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:45:43.457 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:45:43.461 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:45:43.550 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:45:43.550 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2024 ms
2020-03-20 18:45:43.776 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:45:43.776 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:45:43.783 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@53782764
2020-03-20 18:45:44.165 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:45:46.163 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:45:46.163 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:45:46.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:45:46.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:45:46.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:45:46.241 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:45:46.630 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:45:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d606ef2
2020-03-20 18:45:46.648 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:45:46.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:45:46.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:45:46.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:45:46.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:45:46.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.842 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.843 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:45:46.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:45:46.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:45:46.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:45:46.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:45:46.849 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:45:46.850 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:45:46.851 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:45:46.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:45:46.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:45:46.852 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:45:46.853 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:45:46.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:45:46.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:45:46.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:45:46.854 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:45:46.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:45:46.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:45:46.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.857 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:45:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:45:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.858 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:45:46.859 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:45:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:45:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:45:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.860 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.861 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.861 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:45:46.861 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.863 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:45:46.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:45:46.900 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:45:46.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d606ef2: startup date [Fri Mar 20 18:45:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b7fcc0e
2020-03-20 18:45:46.971 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:45:47.066 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:45:47.067 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:45:48.021 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:45:48.021 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:45:48.866 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:45:48.986 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:45:48.996 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:45:48.997 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:45:48.998 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:45:49.046 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:45:49.047 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:45:49.053 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:45:49.055 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:45:49.056 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:45:49.058 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:45:49.065 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:45:49.074 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4d606ef2,type=ConfigurationPropertiesRebinder]
2020-03-20 18:45:49.079 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:45:49.086 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:45:49.091 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:45:49.120 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:45:49.668 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:45:49.668 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:45:49.972 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:45:49.972 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:45:50.096 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:45:50.507 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:45:50.507 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:45:50.507 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:45:50.507 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:45:50.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:45:50.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:45:50.508 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:45:50.623 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:45:50.625 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:45:50.627 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:45:50.631 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584701150630 with initial instances count: 3
2020-03-20 18:45:50.637 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:45:50.637 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584701150637, current=UP, previous=STARTING]
2020-03-20 18:45:50.638 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:45:50.642 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:45:50.671 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:45:50.701 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:45:50.706 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:45:50.709 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:45:50.727 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:45:50.728 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:45:50.731 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.359 seconds (JVM running for 18.538)
2020-03-20 18:45:51.993 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:45:51.993 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:45:51.993 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:45:52.008 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-03-20 18:45:52.555 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:46:01.659 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:46:03.140 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:46:03.369 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:46:04.126 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:46:08.920 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:46:08.981 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:46:08.984 [http-nio-9010-exec-7] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:46:08.991 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:46:08.996 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:46:08.998 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:46:08.998 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@6dee792b]
2020-03-20 18:46:09.000 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@6dee792b]
2020-03-20 18:46:09.040 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:46:09.048 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@499b5f55[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 18:46:09.050 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.service.impl.CorrelationServiceImpl.deleteAccountMedium(CorrelationServiceImpl.java:130)
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:46:09.146 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:49:58.262 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18c59a1f: startup date [Fri Mar 20 18:49:58 CST 2020]; root of context hierarchy
2020-03-20 18:49:58.406 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:49:58.437 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e07cef49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:49:59.183 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:49:59.198 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a202a52: startup date [Fri Mar 20 18:49:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18c59a1f
2020-03-20 18:50:00.137 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:50:00.325 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:50:00.506 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:50:00.531 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:50:00.631 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c462ec4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:50:00.665 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a25cfdf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:50:00.671 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/961653489] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:50:00.672 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:50:00.675 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:50:00.722 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e07cef49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:50:01.117 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:50:01.127 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:50:01.135 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:50:01.135 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:50:01.139 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:50:01.225 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:50:01.225 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2027 ms
2020-03-20 18:50:01.508 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:50:01.508 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:50:01.518 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@37e6bd46
2020-03-20 18:50:02.070 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:50:04.197 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:50:04.197 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:50:04.197 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:50:04.197 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:50:04.197 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:50:04.275 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:50:04.682 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:50:04 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a202a52
2020-03-20 18:50:04.697 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:50:04.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:50:04.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:50:04.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:50:04.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:50:04.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.900 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:50:04.901 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.901 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:50:04.901 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:50:04.901 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:50:04.901 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:50:04.902 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:50:04.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:50:04.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:50:04.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:50:04.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:50:04.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:50:04.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:50:04.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:50:04.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:50:04.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:50:04.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:50:04.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:50:04.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:50:04.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:50:04.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:50:04.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:50:04.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:50:04.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:50:04.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:50:04.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:50:04.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:50:04.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:50:04.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:50:04.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:50:04.910 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:50:04.910 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:50:04.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:50:04.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:50:04.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:50:04.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:50:04.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:50:04.915 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:50:04.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.916 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:50:04.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:50:04.920 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:50:04.956 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:50:04.992 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a202a52: startup date [Fri Mar 20 18:49:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18c59a1f
2020-03-20 18:50:05.034 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:50:05.136 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:50:05.138 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:50:06.148 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:50:06.148 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:50:06.963 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:50:07.105 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:50:07.116 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:50:07.117 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:50:07.118 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:50:07.168 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:50:07.170 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:50:07.177 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:50:07.180 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:50:07.181 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:50:07.184 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:50:07.191 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:50:07.201 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4a202a52,type=ConfigurationPropertiesRebinder]
2020-03-20 18:50:07.209 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:50:07.215 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:50:07.221 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:50:07.258 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:50:07.869 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:50:07.869 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:50:08.181 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:50:08.181 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:50:08.298 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:50:08.757 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:50:08.871 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:50:08.873 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:50:08.875 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:50:08.878 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584701408877 with initial instances count: 3
2020-03-20 18:50:08.884 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:50:08.884 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584701408884, current=UP, previous=STARTING]
2020-03-20 18:50:08.885 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:50:08.888 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:50:08.919 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:50:08.945 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:50:08.950 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:50:08.953 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:50:08.969 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:50:08.970 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:50:08.972 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.688 seconds (JVM running for 19.137)
2020-03-20 18:50:09.609 [RMI TCP Connection(6)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:50:09.609 [RMI TCP Connection(6)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:50:09.610 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:50:09.625 [RMI TCP Connection(6)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 18:50:10.160 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:50:16.224 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:50:16.995 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:50:17.245 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:50:22.147 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:50:31.192 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:50:31.295 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:50:31.298 [http-nio-9010-exec-7] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:50:31.306 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:50:31.309 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:50:31.310 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:50:31.310 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myId504
2020-03-20 18:50:31.311 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:50:31.312 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@72c73ee9]
2020-03-20 18:50:31.313 [http-nio-9010-exec-7] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@72c73ee9]
2020-03-20 18:50:31.350 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:50:31.356 [http-nio-9010-exec-7] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@1b7713d5[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 18:50:31.434 [http-nio-9010-exec-7] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:50:31.626 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:52:18.176 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@349827f3: startup date [Fri Mar 20 18:52:18 CST 2020]; root of context hierarchy
2020-03-20 18:52:18.321 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:52:18.352 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d6999975] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:52:19.260 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 18:52:19.276 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@572111be: startup date [Fri Mar 20 18:52:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@349827f3
2020-03-20 18:52:20.263 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 18:52:20.455 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 18:52:20.628 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 18:52:20.652 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:52:20.758 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba7f9678] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:52:20.790 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$9879a81f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:52:20.797 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1154584180] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:52:20.798 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 18:52:20.801 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:52:20.844 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d6999975] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 18:52:21.282 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 18:52:21.293 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 18:52:21.301 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 18:52:21.301 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 18:52:21.305 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 18:52:21.396 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 18:52:21.396 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2120 ms
2020-03-20 18:52:21.632 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:52:21.632 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:52:21.640 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b58e107
2020-03-20 18:52:22.014 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 18:52:23.851 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 18:52:23.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 18:52:23.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 18:52:23.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 18:52:23.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 18:52:23.931 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 18:52:24.419 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 18:52:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@572111be
2020-03-20 18:52:24.439 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 18:52:24.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:52:24.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 18:52:24.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 18:52:24.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 18:52:24.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.641 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 18:52:24.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 18:52:24.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 18:52:24.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 18:52:24.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 18:52:24.650 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 18:52:24.651 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 18:52:24.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 18:52:24.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 18:52:24.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 18:52:24.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:52:24.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:52:24.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:52:24.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:52:24.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:52:24.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:52:24.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:52:24.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 18:52:24.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:52:24.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:52:24.661 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 18:52:24.662 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 18:52:24.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:52:24.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.663 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:52:24.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 18:52:24.664 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 18:52:24.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:52:24.702 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 18:52:24.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@572111be: startup date [Fri Mar 20 18:52:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@349827f3
2020-03-20 18:52:24.776 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 18:52:24.880 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 18:52:24.882 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 18:52:25.864 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 18:52:25.865 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 18:52:26.680 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 18:52:26.812 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 18:52:26.822 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:52:26.823 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 18:52:26.823 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 18:52:26.878 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 18:52:26.880 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 18:52:26.888 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 18:52:26.890 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 18:52:26.891 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 18:52:26.894 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 18:52:26.900 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 18:52:26.909 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=572111be,type=ConfigurationPropertiesRebinder]
2020-03-20 18:52:26.914 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 18:52:26.921 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 18:52:26.927 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 18:52:26.955 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 18:52:27.507 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 18:52:27.507 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 18:52:27.822 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 18:52:27.822 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 18:52:27.947 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 18:52:28.439 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 18:52:28.559 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 18:52:28.562 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 18:52:28.563 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 18:52:28.566 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584701548565 with initial instances count: 3
2020-03-20 18:52:28.572 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 18:52:28.572 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584701548572, current=UP, previous=STARTING]
2020-03-20 18:52:28.573 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 18:52:28.576 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 18:52:28.600 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 18:52:28.627 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 18:52:28.632 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 18:52:28.635 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 18:52:28.651 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 18:52:28.652 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 18:52:28.655 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.514 seconds (JVM running for 18.817)
2020-03-20 18:52:29.875 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 18:52:29.875 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 18:52:29.875 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 18:52:29.902 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2020-03-20 18:52:30.460 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 18:52:34.045 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:52:34.830 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:52:35.084 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:52:36.439 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:52:48.000 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 18:52:48.060 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 18:52:48.063 [http-nio-9010-exec-8] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 18:52:48.072 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 18:52:48.077 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:52:48.077 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 18:52:48.077 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myId504
2020-03-20 18:52:48.079 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 18:52:48.079 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@5d1d3ee5]
2020-03-20 18:52:48.080 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@5d1d3ee5]
2020-03-20 18:52:48.120 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 18:52:48.131 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@2fb5c684[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 18:52:48.166 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - mFlag==>
2020-03-20 18:52:48.166 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.PaymentCodeContorller - qflag==>
2020-03-20 18:52:48.170 [http-nio-9010-exec-8] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.PaymentCodeContorller.delMedium(PaymentCodeContorller.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 18:52:52.164 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 18:57:28.441 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:00:59.729 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@48d91994: startup date [Fri Mar 20 19:00:59 CST 2020]; root of context hierarchy
2020-03-20 19:00:59.883 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:00:59.912 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$42dfa51f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:01:00.832 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:01:00.854 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b1f96c3: startup date [Fri Mar 20 19:01:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@48d91994
2020-03-20 19:01:01.859 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:01:02.047 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:01:02.223 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 19:01:02.248 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:01:02.353 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$26c5a222] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:01:02.387 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$4bfb3c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:01:02.395 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1243259514] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:01:02.396 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:01:02.398 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:01:02.429 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$42dfa51f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:01:02.894 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:01:02.906 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:01:02.913 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:01:02.913 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:01:02.917 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:01:03.010 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:01:03.010 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2156 ms
2020-03-20 19:01:03.247 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:01:03.247 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:01:03.254 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@56cc90dd
2020-03-20 19:01:03.653 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:01:05.573 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:01:05.573 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:01:05.573 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:01:05.574 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:01:05.574 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:01:05.652 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:01:06.084 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:01:06 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b1f96c3
2020-03-20 19:01:06.100 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:01:06.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:01:06.286 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:01:06.287 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:01:06.288 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:01:06.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.289 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.292 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.293 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.297 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:01:06.298 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:01:06.299 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:01:06.300 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:01:06.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:01:06.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:01:06.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:01:06.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:01:06.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.301 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:01:06.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.302 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:01:06.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:01:06.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:01:06.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:01:06.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:01:06.303 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:01:06.304 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:01:06.306 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.306 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.306 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:01:06.307 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:01:06.308 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:01:06.309 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.310 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:01:06.310 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.312 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:01:06.313 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:01:06.352 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:01:06.389 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b1f96c3: startup date [Fri Mar 20 19:01:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@48d91994
2020-03-20 19:01:06.426 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:01:06.537 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:01:06.539 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:01:07.507 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:01:07.507 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:01:08.345 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:01:08.468 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:01:08.478 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:01:08.479 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:01:08.480 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:01:08.530 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:01:08.532 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:01:08.538 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:01:08.540 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:01:08.540 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:01:08.543 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:01:08.550 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:01:08.558 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7b1f96c3,type=ConfigurationPropertiesRebinder]
2020-03-20 19:01:08.565 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:01:08.571 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:01:08.577 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:01:08.613 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:01:09.239 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:01:09.239 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:01:09.596 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:01:09.597 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:01:09.722 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:01:10.182 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:01:10.315 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:01:10.317 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:01:10.320 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:01:10.323 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584702070322 with initial instances count: 3
2020-03-20 19:01:10.329 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:01:10.329 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584702070329, current=UP, previous=STARTING]
2020-03-20 19:01:10.331 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:01:10.334 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:01:10.397 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:01:10.406 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:01:10.411 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:01:10.467 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:01:10.467 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:01:10.468 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:01:10.471 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.812 seconds (JVM running for 19.353)
2020-03-20 19:01:11.521 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:01:11.521 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:01:11.521 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:01:11.540 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-03-20 19:01:16.492 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:01:21.956 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:01:23.227 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:01:23.509 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:01:26.259 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:01:33.993 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - 当前删除二维码编号：MM192168254110202003191912490001
2020-03-20 19:01:34.051 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:01:34.053 [http-nio-9010-exec-5] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:01:34.365 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:getUser:admin]
2020-03-20 19:01:34.368 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 19:01:34.368 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myIdadmin
2020-03-20 19:01:34.368 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 参数myId504
2020-03-20 19:01:34.371 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 19:01:34.371 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@6cf9e448]
2020-03-20 19:01:34.372 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@6cf9e448]
2020-03-20 19:01:34.409 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 19:01:34.415 [http-nio-9010-exec-5] INFO  alipay.manage.service.impl.CorrelationServiceImpl - 获取参数findCorrelation ::: [alipay.manage.bean.Correlation@10ac1b68[
  id=2
  parentId=2
  parentName=admin
  childrenId=2
  childrenName=admin
  distance=0
  status=1
  createTime=Fri Mar 20 18:27:02 CST 2020
  submitTime=Fri Mar 20 18:27:02 CST 2020
  parentType=1
  childrenType=1
  medium=<null>
]]
2020-03-20 19:01:34.445 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - mFlag==>
2020-03-20 19:01:34.445 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - qflag==>
2020-03-20 19:01:34.452 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:01:34.537 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:02:56.525 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@624b2d9a: startup date [Fri Mar 20 19:02:56 CST 2020]; root of context hierarchy
2020-03-20 19:02:56.669 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:02:56.698 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1e3045d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:02:57.451 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:02:57.467 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d14813f: startup date [Fri Mar 20 19:02:57 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@624b2d9a
2020-03-20 19:02:58.413 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:02:58.603 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:02:58.786 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=b8b3d7a6-33e6-3e44-b390-f635824ca7c4
2020-03-20 19:02:58.810 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:02:58.919 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$21642db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:02:58.953 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e0105482] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:02:58.959 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/283275602] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:02:58.959 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:02:58.962 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:02:59.007 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1e3045d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:02:59.398 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:02:59.408 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:02:59.416 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:02:59.416 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:02:59.419 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:02:59.508 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:02:59.508 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2041 ms
2020-03-20 19:02:59.731 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:02:59.732 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:02:59.738 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4f37f590
2020-03-20 19:03:00.114 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:03:02.120 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:03:02.121 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:03:02.121 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:03:02.121 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:03:02.121 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:03:02.205 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:03:02.600 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:03:02 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d14813f
2020-03-20 19:03:02.615 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:03:02.814 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:03:02.816 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:03:02.816 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:03:02.816 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:03:02.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.818 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.819 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.820 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.820 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.820 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.820 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.820 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.825 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:03:02.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:03:02.827 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:03:02.828 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:03:02.829 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:03:02.829 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:03:02.829 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:03:02.829 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:03:02.829 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:03:02.829 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.830 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:03:02.831 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:03:02.831 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:03:02.831 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.831 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:03:02.831 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:03:02.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:03:02.832 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:03:02.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:03:02.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:03:02.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.835 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:03:02.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:03:02.836 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:03:02.837 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.838 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.839 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:03:02.841 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:03:02.879 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:03:02.917 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d14813f: startup date [Fri Mar 20 19:02:57 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@624b2d9a
2020-03-20 19:03:02.957 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:03:03.058 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:03:03.060 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:03:04.028 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:03:04.028 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:03:04.876 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:03:05.001 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:03:05.011 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:03:05.011 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:03:05.012 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:03:05.060 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:03:05.062 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:03:05.069 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:03:05.071 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:03:05.071 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:03:05.074 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:03:05.081 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:03:05.091 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1d14813f,type=ConfigurationPropertiesRebinder]
2020-03-20 19:03:05.097 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:03:05.105 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:03:05.111 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:03:05.140 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:03:05.699 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:03:05.699 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:03:06.013 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:03:06.013 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:03:06.135 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:03:06.554 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:03:06.678 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:03:06.680 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:03:06.682 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:03:06.685 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584702186684 with initial instances count: 3
2020-03-20 19:03:06.692 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:03:06.692 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584702186692, current=UP, previous=STARTING]
2020-03-20 19:03:06.694 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:03:06.698 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:03:06.732 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:03:06.773 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:03:06.778 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:03:06.785 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:03:06.807 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:03:06.808 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:03:06.810 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.378 seconds (JVM running for 18.594)
2020-03-20 19:03:07.536 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:03:07.537 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:03:07.537 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:03:07.552 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 19:03:08.097 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:03:12.303 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:03:13.626 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:03:13.896 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:03:44.509 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:03:44.512 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:03:44.580 [http-nio-9010-exec-6] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:03:44.625 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:04:14.748 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:04:14.752 [http-nio-9010-exec-8] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:04:14.815 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:04:37.903 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:04:38.642 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:04:38.731 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:05:16.748 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:05:16.750 [http-nio-9010-exec-4] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:05:16.815 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:11.243 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:11.933 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at com.github.pagehelper.PageSerializable.<init>(PageSerializable.java:48)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:101)
	at com.github.pagehelper.PageInfo.<init>(PageInfo.java:91)
	at alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(OrderContorller.java:97)
	at alipay.manage.contorller.OrderContorller$$FastClassBySpringCGLIB$$182cefe9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at alipay.manage.contorller.OrderContorller$$EnhancerBySpringCGLIB$$83fa44fd.findMyWaitConfirmOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 19:06:14.024 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:14.839 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:14.873 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@50d022bc[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:06:14.902 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:15.179 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 19:06:15 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d14813f
2020-03-20 19:06:15.237 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:06:15.427 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:06:15.443 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 19:06:15.448 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 19:06:15.455 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 19:06:15.479 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:06:15.481 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@757acf0c
2020-03-20 19:06:15.587 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:16.014 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:16.101 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:16.175 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 19:06:16.175 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 19:06:16.191 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:16.459 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:06:23.772 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:25.150 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:25.233 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:37.324 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:54.141 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:54.968 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:06:55.045 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:08:06.556 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:13:06.558 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:14:22.322 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7487ed75: startup date [Fri Mar 20 19:14:22 CST 2020]; root of context hierarchy
2020-03-20 19:14:22.470 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:14:22.501 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3da84f63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:14:23.271 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:14:23.287 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bf8ed3b: startup date [Fri Mar 20 19:14:23 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7487ed75
2020-03-20 19:14:24.380 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:14:24.565 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:14:24.739 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 19:14:24.764 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:14:24.868 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$218e4c66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:14:24.902 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ff885e0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:14:24.909 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1617526882] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:14:24.910 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:14:24.913 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:14:24.944 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3da84f63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:14:25.398 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:14:25.409 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:14:25.417 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:14:25.417 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:14:25.420 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:14:25.514 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:14:25.515 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2227 ms
2020-03-20 19:14:25.752 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:14:25.752 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:14:25.760 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@464fbdad
2020-03-20 19:14:26.135 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:14:27.989 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:14:27.989 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:14:27.989 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:14:27.990 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:14:27.990 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:14:28.070 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:14:28.505 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:14:28 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bf8ed3b
2020-03-20 19:14:28.520 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:14:28.724 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:14:28.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:14:28.725 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:14:28.726 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:14:28.727 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.728 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.730 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.731 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.731 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.731 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.731 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.731 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:14:28.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:14:28.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:14:28.736 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:14:28.737 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:14:28.738 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:14:28.739 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:14:28.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:14:28.740 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:14:28.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:14:28.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:14:28.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:14:28.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.746 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:14:28.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:14:28.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:14:28.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:14:28.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:14:28.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:14:28.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:14:28.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:14:28.789 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:14:28.826 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bf8ed3b: startup date [Fri Mar 20 19:14:23 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7487ed75
2020-03-20 19:14:28.866 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:14:28.966 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:14:28.968 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:14:30.120 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:14:30.121 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:14:30.975 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:14:31.099 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:14:31.111 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:14:31.111 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:14:31.112 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:14:31.166 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:14:31.168 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:14:31.174 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:14:31.176 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:14:31.176 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:14:31.179 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:14:31.186 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:14:31.195 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5bf8ed3b,type=ConfigurationPropertiesRebinder]
2020-03-20 19:14:31.201 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:14:31.207 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:14:31.214 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:14:31.250 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:14:31.823 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:14:31.823 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:14:32.143 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:14:32.143 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:14:32.266 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:14:32.679 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:14:32.800 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:14:32.802 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:14:32.804 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:14:32.807 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584702872806 with initial instances count: 3
2020-03-20 19:14:32.812 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:14:32.813 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584702872813, current=UP, previous=STARTING]
2020-03-20 19:14:32.814 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:14:32.816 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:14:32.841 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:14:32.867 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:14:32.872 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:14:32.875 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:14:32.891 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:14:32.891 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:14:32.893 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.592 seconds (JVM running for 19.1)
2020-03-20 19:14:33.562 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:14:33.562 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:14:33.563 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:14:33.586 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-20 19:14:34.130 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:14:41.130 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:42.061 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:42.284 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:44.160 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:49.710 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 19:14:49 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bf8ed3b
2020-03-20 19:14:49.748 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:14:49.903 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:14:49.925 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 19:14:49.931 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 19:14:49.937 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 19:14:49.968 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:14:49.969 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@350a670e
2020-03-20 19:14:50.069 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:50.941 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:14:51.264 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:51.690 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:51.774 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:58.333 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:58.722 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:14:58.805 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:15:27.289 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:17:19.433 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:17:22.944 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:17:25.467 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:17:25.552 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:18:01.446 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:18:01.449 [http-nio-9010-exec-8] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:18:01.613 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - example ->
2020-03-20 19:18:01.613 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@2f48b4b5]
2020-03-20 19:18:01.614 [http-nio-9010-exec-8] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [com.sun.proxy.$Proxy137:selectByExample:alipay.manage.bean.CorrelationExample@2f48b4b5]
2020-03-20 19:18:01.664 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.CorrelationServiceImpl - selectByExample-->
2020-03-20 19:18:01.701 [http-nio-9010-exec-8] INFO  alipay.manage.service.impl.MediumServiceImpl - 【账户，账户代理关系，账户媒介关系更新完毕】
2020-03-20 19:18:01.708 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:18:01.810 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:19:32.681 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:19:48.086 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:19:49.969 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:20:07.822 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:20:07.823 [http-nio-9010-exec-3] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:20:07.865 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:22:06.150 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:22:06.905 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:22:06.996 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:22:09.741 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:22:15.286 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:22:21.778 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:22:21.780 [http-nio-9010-exec-2] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:22:21.826 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:24:32.682 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:26:32.566 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6f60af5e: startup date [Fri Mar 20 19:26:32 CST 2020]; root of context hierarchy
2020-03-20 19:26:32.714 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:26:32.747 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ddf2845] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:26:33.509 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:26:33.525 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54746d8c: startup date [Fri Mar 20 19:26:33 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f60af5e
2020-03-20 19:26:34.465 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:26:34.654 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:26:34.832 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 19:26:34.858 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:26:34.961 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$11c52548] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:26:34.994 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$efbf36ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:26:34.998 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/384396406] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:26:35.000 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:26:35.003 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:26:35.035 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ddf2845] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:26:35.451 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:26:35.461 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:26:35.470 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:26:35.470 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:26:35.474 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:26:35.565 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:26:35.565 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2040 ms
2020-03-20 19:26:35.804 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:26:35.804 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:26:35.812 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b11a2f2
2020-03-20 19:26:36.183 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:26:38.051 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:26:38.051 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:26:38.051 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:26:38.051 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:26:38.051 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:26:38.133 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:26:38.522 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:26:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54746d8c
2020-03-20 19:26:38.537 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:26:38.741 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:26:38.742 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:26:38.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:26:38.743 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:26:38.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.745 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.747 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:26:38.752 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:26:38.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:26:38.754 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:26:38.755 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:26:38.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:26:38.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:26:38.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:26:38.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.756 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:26:38.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:26:38.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:26:38.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:26:38.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:26:38.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:26:38.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:26:38.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:26:38.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:26:38.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:26:38.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:26:38.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:26:38.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:26:38.764 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.765 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:26:38.766 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:26:38.768 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:26:38.804 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:26:38.840 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54746d8c: startup date [Fri Mar 20 19:26:33 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f60af5e
2020-03-20 19:26:38.879 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:26:38.975 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:26:38.976 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:26:39.936 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:26:39.936 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:26:40.767 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:26:40.910 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:26:40.920 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:26:40.921 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:26:40.922 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:26:40.975 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:26:40.977 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:26:40.985 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:26:40.986 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:26:40.987 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:26:40.990 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:26:40.997 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:26:41.006 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=54746d8c,type=ConfigurationPropertiesRebinder]
2020-03-20 19:26:41.015 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:26:41.023 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:26:41.029 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:26:41.058 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:26:41.684 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:26:41.685 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:26:42.007 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:26:42.007 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:26:42.139 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:26:42.556 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:26:42.685 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:26:42.688 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:26:42.689 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:26:42.692 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584703602692 with initial instances count: 3
2020-03-20 19:26:42.699 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:26:42.699 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584703602699, current=UP, previous=STARTING]
2020-03-20 19:26:42.701 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:26:42.704 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:26:42.730 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:26:42.759 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:26:42.766 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:26:42.769 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:26:42.787 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:26:42.788 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:26:42.791 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.261 seconds (JVM running for 18.567)
2020-03-20 19:26:43.670 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:26:43.670 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:26:43.671 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:26:43.693 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-03-20 19:26:44.265 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:26:48.102 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:26:49.086 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:26:49.316 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:26:54.446 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:26:55.204 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:27:05.602 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:27:05.611 [http-nio-9010-exec-9] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:27:05.669 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:27:13.085 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:27:13.087 [http-nio-9010-exec-1] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:27:13.134 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:31:53.667 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@492447ed: startup date [Fri Mar 20 19:31:53 CST 2020]; root of context hierarchy
2020-03-20 19:31:53.808 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:31:53.838 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5136610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:31:54.696 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:31:54.712 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78ccfe27: startup date [Fri Mar 20 19:31:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@492447ed
2020-03-20 19:31:55.655 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:31:55.846 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:31:56.025 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 19:31:56.050 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:31:56.151 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$351c5e0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:31:56.184 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$13166fb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:31:56.190 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1877082946] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:31:56.191 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:31:56.195 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:31:56.228 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5136610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:31:56.642 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:31:56.652 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:31:56.660 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:31:56.661 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:31:56.664 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:31:56.753 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:31:56.753 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2041 ms
2020-03-20 19:31:56.977 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:31:56.977 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:31:56.984 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6aaa9a32
2020-03-20 19:31:57.360 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:31:59.189 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:31:59.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:31:59.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:31:59.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:31:59.190 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:31:59.268 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:31:59.650 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:31:59 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78ccfe27
2020-03-20 19:31:59.665 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:31:59.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:31:59.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:31:59.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:31:59.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:31:59.892 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.893 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.894 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.895 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.896 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:31:59.903 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:31:59.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:31:59.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:31:59.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:31:59.904 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:31:59.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:31:59.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:31:59.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:31:59.905 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:31:59.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:31:59.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:31:59.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:31:59.906 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:31:59.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:31:59.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:31:59.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:31:59.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:31:59.907 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:31:59.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:31:59.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:31:59.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:31:59.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:31:59.908 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:31:59.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:31:59.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:31:59.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:31:59.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:31:59.909 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:31:59.910 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:31:59.910 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:31:59.910 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.911 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.911 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:31:59.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:31:59.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:31:59.913 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:31:59.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:31:59.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:31:59.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:31:59.914 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.918 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:31:59.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:31:59.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:31:59.919 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:31:59.920 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:31:59.920 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:31:59.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:31:59.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:31:59.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:31:59.966 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:32:00.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78ccfe27: startup date [Fri Mar 20 19:31:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@492447ed
2020-03-20 19:32:00.050 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:32:00.161 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:32:00.163 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:32:01.175 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:32:01.176 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:32:02.020 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:32:02.144 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:32:02.154 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:32:02.155 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:32:02.156 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:32:02.206 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:32:02.208 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:32:02.215 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:32:02.217 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:32:02.217 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:32:02.220 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:32:02.227 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:32:02.237 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=78ccfe27,type=ConfigurationPropertiesRebinder]
2020-03-20 19:32:02.243 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:32:02.252 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:32:02.258 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:32:02.289 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:32:02.834 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:32:02.835 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:32:03.132 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:32:03.132 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:32:03.255 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:32:03.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:32:03.781 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:32:03.784 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:32:03.785 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:32:03.788 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584703923788 with initial instances count: 3
2020-03-20 19:32:03.794 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:32:03.794 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584703923794, current=UP, previous=STARTING]
2020-03-20 19:32:03.796 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:32:03.798 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:32:03.825 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:32:03.851 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:32:03.856 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:32:03.858 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:32:03.874 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:32:03.875 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:32:03.877 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.247 seconds (JVM running for 18.429)
2020-03-20 19:32:04.817 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:32:04.817 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:32:04.818 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:32:04.835 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 19:32:05.336 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:32:33.888 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:32:34.608 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:32:34.877 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:32:37.019 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:32:38.043 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:32:43.039 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.FileListServiceImpl:findIsDealMedium:alipay]
2020-03-20 19:32:43.041 [http-nio-9010-exec-9] INFO  alipay.manage.util.QueueQrcodeUtil - findIsDealMedium 获取的值是：[]
2020-03-20 19:32:43.088 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:32:43.170 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:37:03.665 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:38:27.341 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d9ec744: startup date [Fri Mar 20 19:38:27 CST 2020]; root of context hierarchy
2020-03-20 19:38:27.488 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:38:27.517 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a9d8ac55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:38:28.266 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:38:28.282 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2558d617: startup date [Fri Mar 20 19:38:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d9ec744
2020-03-20 19:38:29.223 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:38:29.415 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:38:29.608 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 19:38:29.633 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:38:29.739 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8dbea958] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:38:29.773 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$6bb8baff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:38:29.779 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/981981305] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:38:29.780 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:38:29.783 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:38:29.840 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a9d8ac55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:38:30.256 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:38:30.266 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:38:30.273 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:38:30.274 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:38:30.277 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:38:30.371 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:38:30.371 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2089 ms
2020-03-20 19:38:30.604 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:38:30.605 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:38:30.612 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2b8f279d
2020-03-20 19:38:30.989 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:38:32.946 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:38:32.946 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:38:32.946 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:38:32.946 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:38:32.946 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:38:33.027 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:38:33.421 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:38:33 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2558d617
2020-03-20 19:38:33.436 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:38:33.633 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:38:33.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:38:33.634 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:38:33.635 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:38:33.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.636 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.637 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.637 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.638 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.639 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:38:33.643 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:38:33.644 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:38:33.645 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:38:33.646 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:38:33.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:38:33.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:38:33.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:38:33.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.647 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:38:33.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.648 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:38:33.649 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:38:33.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.652 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:38:33.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:38:33.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:38:33.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:38:33.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:38:33.654 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:38:33.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:38:33.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:38:33.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:38:33.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:38:33.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:38:33.695 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:38:33.732 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2558d617: startup date [Fri Mar 20 19:38:28 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d9ec744
2020-03-20 19:38:33.771 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:38:33.870 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:38:33.871 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:38:34.864 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:38:34.864 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:38:35.684 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:38:35.808 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:38:35.818 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:38:35.819 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:38:35.820 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:38:35.871 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:38:35.872 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:38:35.879 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:38:35.881 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:38:35.881 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:38:35.884 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:38:35.892 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:38:35.900 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2558d617,type=ConfigurationPropertiesRebinder]
2020-03-20 19:38:35.905 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:38:35.913 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:38:35.918 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:38:35.946 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:38:36.492 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:38:36.492 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:38:36.806 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:38:36.806 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:38:36.930 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:38:37.336 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:38:37.452 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:38:37.454 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:38:37.455 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:38:37.458 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584704317457 with initial instances count: 3
2020-03-20 19:38:37.464 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:38:37.464 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584704317464, current=UP, previous=STARTING]
2020-03-20 19:38:37.465 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:38:37.469 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:38:37.500 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:38:37.523 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:38:37.529 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:38:37.532 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:38:37.547 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:38:37.548 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:38:37.550 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.319 seconds (JVM running for 18.632)
2020-03-20 19:38:38.830 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:38:38.830 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:38:38.832 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:38:38.848 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 19:38:39.353 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:38:44.806 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:38:45.502 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:38:45.753 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:38:55.037 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 19:38:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2558d617
2020-03-20 19:38:55.076 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:38:55.214 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:38:55.229 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 19:38:55.233 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 19:38:55.238 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 19:38:55.263 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:38:55.264 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@74d77c7a
2020-03-20 19:38:55.339 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@76e4a184
2020-03-20 19:38:55.351 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:38:56.240 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:39:05.418 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 19:39:05.576 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:06.123 [http-nio-9010-exec-5] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 19:39:06.132 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@51a34adf[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:39:06.195 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:06.208 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:06.209 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@2d54b4d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:39:06.235 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:06.240 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:26.224 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:26.787 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@13cb2ac2[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:39:26.789 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:26.816 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@139b3a0
2020-03-20 19:39:26.836 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:39:26.846 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:12.931 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:14.404 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:14.470 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:29.207 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:36.221 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:36.771 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@2fb010e8[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:40:36.778 [http-nio-9010-exec-7] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 19:40:36.816 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:36.825 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:36.832 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@70ee506a[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:40:36.846 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:36.870 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:44.729 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:45.789 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@49ac412f[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:40:45.789 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:45.821 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@6064240d
2020-03-20 19:40:45.840 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:40:45.848 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:41:00.863 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:41:01.460 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - alipay.manage.bean.UserInfo@78f8be51[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:41:01.460 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:41:01.479 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@4fb64269
2020-03-20 19:41:01.491 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:41:01.507 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:43:37.338 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:48:37.340 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:53:37.342 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:56:50.858 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6e67e773: startup date [Fri Mar 20 19:56:50 CST 2020]; root of context hierarchy
2020-03-20 19:56:51.005 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:56:51.036 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5a0fca38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:56:51.856 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 19:56:51.873 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d281833: startup date [Fri Mar 20 19:56:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6e67e773
2020-03-20 19:56:52.902 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 19:56:53.089 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 19:56:53.265 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 19:56:53.289 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:56:53.393 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3df5c73b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:56:53.430 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1befd8e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:56:53.436 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1374073162] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:56:53.438 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 19:56:53.441 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:56:53.475 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5a0fca38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 19:56:53.929 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 19:56:53.941 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 19:56:53.949 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 19:56:53.949 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 19:56:53.954 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 19:56:54.048 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 19:56:54.048 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2175 ms
2020-03-20 19:56:54.284 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:56:54.284 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:56:54.292 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b11a2f2
2020-03-20 19:56:54.665 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 19:56:56.510 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 19:56:56.510 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 19:56:56.510 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 19:56:56.510 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 19:56:56.511 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 19:56:56.591 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 19:56:57.032 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 19:56:57 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d281833
2020-03-20 19:56:57.048 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:56:57.255 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 19:56:57.256 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:56:57.256 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 19:56:57.256 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 19:56:57.258 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.258 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.258 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.258 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.258 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.259 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.260 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.261 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.266 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 19:56:57.266 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 19:56:57.267 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 19:56:57.268 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 19:56:57.269 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 19:56:57.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 19:56:57.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 19:56:57.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 19:56:57.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 19:56:57.270 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.271 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 19:56:57.271 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 19:56:57.271 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:56:57.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:56:57.272 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:56:57.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:56:57.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:56:57.273 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:56:57.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:56:57.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:56:57.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:56:57.276 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.277 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 19:56:57.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 19:56:57.278 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 19:56:57.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:56:57.281 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:56:57.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.282 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 19:56:57.284 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 19:56:57.285 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:56:57.323 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 19:56:57.362 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d281833: startup date [Fri Mar 20 19:56:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6e67e773
2020-03-20 19:56:57.404 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 19:56:57.522 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 19:56:57.523 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 19:56:58.558 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 19:56:58.558 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 19:56:59.413 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 19:56:59.534 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 19:56:59.545 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:56:59.546 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 19:56:59.547 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 19:56:59.594 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 19:56:59.595 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 19:56:59.603 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 19:56:59.604 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 19:56:59.605 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 19:56:59.607 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 19:56:59.615 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 19:56:59.624 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=d281833,type=ConfigurationPropertiesRebinder]
2020-03-20 19:56:59.629 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 19:56:59.636 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 19:56:59.642 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 19:56:59.678 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 19:57:00.251 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 19:57:00.251 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 19:57:00.572 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 19:57:00.572 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 19:57:00.696 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 19:57:01.110 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 19:57:01.110 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 19:57:01.111 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 19:57:01.111 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 19:57:01.111 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 19:57:01.111 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 19:57:01.111 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 19:57:01.231 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 19:57:01.233 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 19:57:01.235 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 19:57:01.239 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584705421238 with initial instances count: 3
2020-03-20 19:57:01.246 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 19:57:01.246 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584705421246, current=UP, previous=STARTING]
2020-03-20 19:57:01.247 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 19:57:01.250 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 19:57:01.275 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 19:57:01.316 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 19:57:01.324 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 19:57:01.330 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 19:57:01.356 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 19:57:01.357 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 19:57:01.360 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.544 seconds (JVM running for 18.911)
2020-03-20 19:57:02.506 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 19:57:02.507 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 19:57:02.507 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 19:57:02.527 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-20 19:57:03.221 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 19:57:12.339 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:13.048 [http-nio-9010-exec-2] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-9010-exec-2] Exception processing template "my-home-page": An error happened during template parsing (template: "class path resource [templates/my-home-page.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: An error happened during template rendering (template: "my-home-page" - line 174, col 94)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 54 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateOutputException: An error happened during template rendering (template: "my-home-page" - line 174, col 94)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:75)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:142)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:662)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 56 common frames omitted
Caused by: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:445)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hMSet(LettuceHashCommands.java:346)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hMSet(DefaultedRedisConnection.java:902)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$putAll$6(DefaultHashOperations.java:137)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:136)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.putAll(DefaultBoundHashOperations.java:136)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveDelta(RedisOperationsSessionRepository.java:776)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.access$000(RedisOperationsSessionRepository.java:649)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:384)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:234)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.checkContentLength(OnCommittedResponseWrapper.java:217)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.trackContentLength(OnCommittedResponseWrapper.java:201)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.access$400(OnCommittedResponseWrapper.java:38)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextPrintWriter.write(OnCommittedResponseWrapper.java:305)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:218)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	... 65 common frames omitted
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy151.hmset(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hMSet(LettuceHashCommands.java:344)
	... 87 common frames omitted
2020-03-20 19:57:13.088 [http-nio-9010-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/my-home-page.html]")] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:114)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:62)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy151.hmset(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hMSet(LettuceHashCommands.java:344)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hMSet(DefaultedRedisConnection.java:902)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$putAll$6(DefaultHashOperations.java:137)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:95)
	at org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:136)
	at org.springframework.data.redis.core.DefaultBoundHashOperations.putAll(DefaultBoundHashOperations.java:136)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveDelta(RedisOperationsSessionRepository.java:776)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.access$000(RedisOperationsSessionRepository.java:649)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:384)
	at org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:245)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:234)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.checkContentLength(OnCommittedResponseWrapper.java:217)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.trackContentLength(OnCommittedResponseWrapper.java:201)
	at org.springframework.session.web.http.OnCommittedResponseWrapper.access$400(OnCommittedResponseWrapper.java:38)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextPrintWriter.write(OnCommittedResponseWrapper.java:305)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:218)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:142)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:662)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 19:57:13.102 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:14.668 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:15.243 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@199f9414[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:57:15.251 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 19:57:15.258 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 19:57:15.300 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:15.391 [http-nio-9010-exec-4] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 19:57:15.425 [http-nio-9010-exec-4] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 19:57:15.431 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
### The error may exist in alipay/manage/mapper/UserInfoMapper.java (best guess)
### The error may involve alipay.manage.mapper.UserInfoMapper.selectChildAgentListById-Inline
### The error occurred while setting parameters
### SQL: select queryChildAgents(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.selectChildAgentListById(Unknown Source)
	at alipay.manage.service.impl.UserInfoServiceImpl.findSubLevelMembers(UserInfoServiceImpl.java:90)
	at alipay.manage.service.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$84ac018c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$a0e36466.findSubLevelMembers(<generated>)
	at alipay.manage.contorller.PaymentCodeContorller.querySubOnline(PaymentCodeContorller.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 76 common frames omitted
2020-03-20 19:57:15.514 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 19:57:15 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d281833
2020-03-20 19:57:15.565 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 19:57:15.710 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:57:15.727 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 19:57:15.732 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 19:57:15.737 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 19:57:15.760 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:57:15.762 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7a0368d2
2020-03-20 19:57:15.828 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3bb6183
2020-03-20 19:57:15.838 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:16.742 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 19:57:17.888 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:18.536 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@94967a9[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:57:18.551 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 19:57:18.566 [http-nio-9010-exec-1] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 19:57:18.578 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@71b2316e
2020-03-20 19:57:18.600 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:18.622 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:18.638 [http-nio-9010-exec-1] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
### The error may exist in alipay/manage/mapper/UserInfoMapper.java (best guess)
### The error may involve alipay.manage.mapper.UserInfoMapper.selectChildAgentListById-Inline
### The error occurred while setting parameters
### SQL: select queryChildAgents(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.selectChildAgentListById(Unknown Source)
	at alipay.manage.service.impl.UserInfoServiceImpl.findSubLevelMembers(UserInfoServiceImpl.java:90)
	at alipay.manage.service.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$84ac018c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$a0e36466.findSubLevelMembers(<generated>)
	at alipay.manage.contorller.PaymentCodeContorller.querySubOnline(PaymentCodeContorller.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 76 common frames omitted
2020-03-20 19:57:28.772 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:29.945 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@17ff7d65[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 19:57:29.952 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 19:57:29.959 [http-nio-9010-exec-9] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 19:57:29.962 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@3735e1bf
2020-03-20 19:57:29.996 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:30.008 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 19:57:30.028 [http-nio-9010-exec-9] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
### The error may exist in alipay/manage/mapper/UserInfoMapper.java (best guess)
### The error may involve alipay.manage.mapper.UserInfoMapper.selectChildAgentListById-Inline
### The error occurred while setting parameters
### SQL: select queryChildAgents(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.selectChildAgentListById(Unknown Source)
	at alipay.manage.service.impl.UserInfoServiceImpl.findSubLevelMembers(UserInfoServiceImpl.java:90)
	at alipay.manage.service.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$84ac018c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$a0e36466.findSubLevelMembers(<generated>)
	at alipay.manage.contorller.PaymentCodeContorller.querySubOnline(PaymentCodeContorller.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION otc_alipay.queryChildAgents does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4006)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2468)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2629)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 76 common frames omitted
2020-03-20 20:02:01.113 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:03:19.081 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@163387ae: startup date [Fri Mar 20 20:03:19 CST 2020]; root of context hierarchy
2020-03-20 20:03:19.223 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:03:19.253 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ac6e127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:03:20.016 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:03:20.034 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@645cf118: startup date [Fri Mar 20 20:03:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@163387ae
2020-03-20 20:03:20.970 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:03:21.158 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:03:21.333 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:03:21.357 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:03:21.461 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5eacde2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:03:21.495 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3ca6efd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:03:21.501 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/958372826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:03:21.502 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:03:21.505 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:03:21.537 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7ac6e127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:03:21.962 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:03:21.973 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:03:21.980 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:03:21.980 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:03:21.984 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:03:22.070 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:03:22.071 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2037 ms
2020-03-20 20:03:22.294 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:03:22.294 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:03:22.301 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7931a3e7
2020-03-20 20:03:22.673 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:03:24.665 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:03:24.665 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:03:24.665 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:03:24.666 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:03:24.666 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:03:24.748 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:03:25.128 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:03:25 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@645cf118
2020-03-20 20:03:25.144 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:03:25.341 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:03:25.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:03:25.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:03:25.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:03:25.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.347 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.348 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:03:25.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:03:25.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:03:25.353 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:03:25.354 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:03:25.355 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:03:25.356 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:03:25.357 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:03:25.357 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.357 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:03:25.357 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.358 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:03:25.359 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:03:25.362 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.362 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.362 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.363 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.363 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:03:25.363 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.363 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:03:25.363 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:03:25.363 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:03:25.364 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:03:25.364 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:03:25.365 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.365 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:03:25.365 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.365 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:03:25.365 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.366 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.366 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.366 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:03:25.366 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.368 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:03:25.368 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:03:25.404 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:03:25.443 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@645cf118: startup date [Fri Mar 20 20:03:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@163387ae
2020-03-20 20:03:25.480 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:03:25.578 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:03:25.579 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:03:26.562 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:03:26.562 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:03:27.361 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:03:27.484 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:03:27.495 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:03:27.496 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:03:27.497 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:03:27.545 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:03:27.546 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:03:27.553 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:03:27.554 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:03:27.555 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:03:27.558 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:03:27.565 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:03:27.575 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=645cf118,type=ConfigurationPropertiesRebinder]
2020-03-20 20:03:27.581 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:03:27.589 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:03:27.595 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:03:27.626 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:03:28.178 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:03:28.178 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:03:28.480 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:03:28.480 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:03:28.600 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:03:29.009 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:03:29.009 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:03:29.009 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:03:29.009 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:03:29.009 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:03:29.010 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:03:29.010 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:03:29.137 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:03:29.140 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:03:29.143 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:03:29.146 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584705809145 with initial instances count: 3
2020-03-20 20:03:29.153 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:03:29.153 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584705809153, current=UP, previous=STARTING]
2020-03-20 20:03:29.154 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:03:29.158 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:03:29.215 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:03:29.220 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:03:29.224 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:03:29.243 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:03:29.244 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:03:29.247 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.232 seconds (JVM running for 18.558)
2020-03-20 20:03:29.307 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:03:29.988 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:03:29.988 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:03:29.989 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:03:30.008 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-03-20 20:03:30.552 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 20:03:41.219 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:03:42.296 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:03:42.300 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:03:42.303 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@44d5168b[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:03:42.349 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:03:42.431 [http-nio-9010-exec-4] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 20:03:42.456 [http-nio-9010-exec-4] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 20:03:42.462 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'otc_alipay.product_qrcode_user' doesn't exist
### The error may exist in alipay/manage/mapper/UserInfoMapper.java (best guess)
### The error may involve alipay.manage.mapper.UserInfoMapper.selectChildAgentListById-Inline
### The error occurred while setting parameters
### SQL: select queryChildAgents(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'otc_alipay.product_qrcode_user' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'otc_alipay.product_qrcode_user' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.selectChildAgentListById(Unknown Source)
	at alipay.manage.service.impl.UserInfoServiceImpl.findSubLevelMembers(UserInfoServiceImpl.java:90)
	at alipay.manage.service.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$84ac018c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$972fe005.findSubLevelMembers(<generated>)
	at alipay.manage.contorller.PaymentCodeContorller.querySubOnline(PaymentCodeContorller.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'otc_alipay.product_qrcode_user' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.nextRowFast(MysqlIO.java:2044)
	at com.mysql.jdbc.MysqlIO.nextRow(MysqlIO.java:1900)
	at com.mysql.jdbc.MysqlIO.readSingleRowSet(MysqlIO.java:3390)
	at com.mysql.jdbc.MysqlIO.getResultSet(MysqlIO.java:483)
	at com.mysql.jdbc.MysqlIO.readResultsForQueryOrUpdate(MysqlIO.java:3096)
	at com.mysql.jdbc.MysqlIO.readAllResults(MysqlIO.java:2266)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2687)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 76 common frames omitted
2020-03-20 20:03:42.542 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 20:03:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@645cf118
2020-03-20 20:03:42.659 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:03:42.811 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:03:42.827 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 20:03:42.831 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 20:03:42.836 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 20:03:42.857 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:03:42.859 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1b235197
2020-03-20 20:03:42.931 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@53413e87
2020-03-20 20:03:42.944 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:03:43.841 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:05:24.164 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@409b2caf: startup date [Fri Mar 20 20:05:24 CST 2020]; root of context hierarchy
2020-03-20 20:05:24.312 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:05:24.342 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75b19cd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:05:25.082 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:05:25.098 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ed45f26: startup date [Fri Mar 20 20:05:25 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409b2caf
2020-03-20 20:05:26.091 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:05:26.300 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:05:26.481 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:05:26.505 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:05:26.618 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$599799d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:05:26.652 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3791ab7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:05:26.658 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1019536785] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:05:26.659 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:05:26.663 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:05:26.718 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75b19cd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:05:27.254 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:05:27.273 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:05:27.286 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:05:27.287 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:05:27.294 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:05:27.429 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:05:27.430 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2332 ms
2020-03-20 20:05:28.174 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:05:28.174 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:05:28.193 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@73b66db3
2020-03-20 20:05:28.880 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:05:30.778 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:05:30.779 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:05:30.779 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:05:30.779 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:05:30.779 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:05:30.866 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:05:31.288 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:05:31 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ed45f26
2020-03-20 20:05:31.302 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:05:31.530 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:05:31.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:05:31.531 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:05:31.532 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:05:31.535 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.536 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.540 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.541 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.541 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:05:31.548 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:05:31.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:05:31.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:05:31.549 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:05:31.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:05:31.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:05:31.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:05:31.550 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:05:31.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:05:31.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:05:31.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:05:31.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:05:31.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:05:31.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:05:31.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:05:31.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:05:31.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:05:31.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:05:31.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:05:31.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:05:31.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:05:31.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:05:31.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:05:31.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:05:31.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:05:31.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:05:31.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:05:31.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:05:31.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:05:31.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:05:31.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:05:31.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:05:31.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:05:31.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:05:31.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:05:31.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.562 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:05:31.563 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:05:31.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:05:31.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:05:31.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:05:31.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:05:31.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:05:31.568 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:05:31.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.571 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:05:31.573 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:05:31.574 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:05:31.622 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:05:31.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ed45f26: startup date [Fri Mar 20 20:05:25 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409b2caf
2020-03-20 20:05:31.710 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:05:31.840 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:05:31.841 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:05:32.917 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:05:32.917 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:05:33.804 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:05:33.934 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:05:33.945 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:05:33.946 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:05:33.946 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:05:33.997 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:05:33.999 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:05:34.008 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:05:34.010 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:05:34.011 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:05:34.015 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:05:34.023 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:05:34.036 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3ed45f26,type=ConfigurationPropertiesRebinder]
2020-03-20 20:05:34.044 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:05:34.052 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:05:34.060 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:05:34.088 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:05:34.659 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:05:34.659 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:05:34.966 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:05:34.966 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:05:35.090 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:05:35.537 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:05:35.735 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:05:35.737 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:05:35.741 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:05:35.746 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584705935745 with initial instances count: 3
2020-03-20 20:05:35.752 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:05:35.752 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584705935752, current=UP, previous=STARTING]
2020-03-20 20:05:35.754 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:05:35.758 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:05:35.800 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:05:35.830 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:05:35.835 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:05:35.838 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:05:35.857 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:05:35.858 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:05:35.860 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.631 seconds (JVM running for 19.962)
2020-03-20 20:05:38.645 [RMI TCP Connection(8)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:05:38.645 [RMI TCP Connection(9)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:05:38.645 [RMI TCP Connection(9)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:05:38.659 [RMI TCP Connection(9)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-03-20 20:05:39.278 [RMI TCP Connection(8)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 20:05:43.703 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:05:44.728 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:05:44.735 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@32af7e91[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:05:44.737 [http-nio-9010-exec-4] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:05:44.805 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:05:44.887 [http-nio-9010-exec-4] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-03-20 20:05:44.913 [http-nio-9010-exec-4] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2020-03-20 20:05:44.920 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'accountId' in 'field list'
### The error may exist in alipay/manage/mapper/UserInfoMapper.java (best guess)
### The error may involve alipay.manage.mapper.UserInfoMapper.selectChildAgentListById-Inline
### The error occurred while setting parameters
### SQL: select queryChildAgents(?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'accountId' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'accountId' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy124.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.selectChildAgentListById(Unknown Source)
	at alipay.manage.service.impl.UserInfoServiceImpl.findSubLevelMembers(UserInfoServiceImpl.java:90)
	at alipay.manage.service.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$84ac018c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:53)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:337)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:317)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at alipay.manage.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$a83b1f1f.findSubLevelMembers(<generated>)
	at alipay.manage.contorller.PaymentCodeContorller.querySubOnline(PaymentCodeContorller.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'accountId' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4074)
	at com.mysql.jdbc.MysqlIO.nextRowFast(MysqlIO.java:2044)
	at com.mysql.jdbc.MysqlIO.nextRow(MysqlIO.java:1900)
	at com.mysql.jdbc.MysqlIO.readSingleRowSet(MysqlIO.java:3390)
	at com.mysql.jdbc.MysqlIO.getResultSet(MysqlIO.java:483)
	at com.mysql.jdbc.MysqlIO.readResultsForQueryOrUpdate(MysqlIO.java:3096)
	at com.mysql.jdbc.MysqlIO.readAllResults(MysqlIO.java:2266)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2687)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2719)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1379)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy188.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 76 common frames omitted
2020-03-20 20:05:44.959 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 20:05:44 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ed45f26
2020-03-20 20:05:45.952 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-20 20:05:47.019 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： REGISTER_ENABLED
2020-03-20 20:05:47.030 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 20:05:47.035 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 20:05:47.065 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@763a970
2020-03-20 20:05:47.127 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:05:47.196 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:05:47.502 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:05:47.519 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 20:05:47.525 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 20:05:47.532 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 20:05:47.558 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:05:47.560 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@21cd9f68
2020-03-20 20:05:48.535 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:06:40.831 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:06:41.481 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@60ba1177[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:06:41.492 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:06:41.503 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:06:41.507 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@5c2028e3
2020-03-20 20:06:41.544 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:06:41.554 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:06:41.627 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:10:39.922 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2639dcca: startup date [Fri Mar 20 20:10:39 CST 2020]; root of context hierarchy
2020-03-20 20:10:40.064 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:10:40.093 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6dd9fc5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:10:40.864 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:10:40.881 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349a8c8f: startup date [Fri Mar 20 20:10:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2639dcca
2020-03-20 20:10:41.837 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:10:42.028 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:10:42.209 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:10:42.232 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:10:42.335 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$51bff962] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:10:42.367 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2fba0b09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:10:42.373 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1112459188] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:10:42.374 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:10:42.377 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:10:42.407 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6dd9fc5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:10:42.814 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:10:42.824 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:10:42.832 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:10:42.832 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:10:42.836 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:10:42.924 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:10:42.924 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2043 ms
2020-03-20 20:10:43.165 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:10:43.165 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:10:43.173 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6a0326a2
2020-03-20 20:10:43.597 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:10:45.488 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:10:45.489 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:10:45.489 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:10:45.489 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:10:45.489 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:10:45.570 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:10:45.966 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:10:45 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349a8c8f
2020-03-20 20:10:45.981 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:10:46.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:10:46.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:10:46.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:10:46.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:10:46.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.188 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.190 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.191 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:10:46.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:10:46.196 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:10:46.197 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:10:46.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:10:46.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:10:46.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:10:46.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:10:46.198 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:10:46.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:10:46.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:10:46.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:10:46.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:10:46.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:10:46.199 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:10:46.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:10:46.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:10:46.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:10:46.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:10:46.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:10:46.200 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:10:46.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:10:46.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:10:46.201 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:10:46.202 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.202 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:10:46.202 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.202 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:10:46.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.203 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:10:46.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:10:46.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:10:46.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:10:46.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:10:46.204 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:10:46.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:10:46.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.207 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:10:46.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:10:46.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:10:46.208 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:10:46.209 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:10:46.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.211 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:10:46.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:10:46.212 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.213 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:10:46.216 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:10:46.216 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:10:46.254 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:10:46.290 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349a8c8f: startup date [Fri Mar 20 20:10:40 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2639dcca
2020-03-20 20:10:46.328 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:10:46.428 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:10:46.431 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:10:47.405 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:10:47.405 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:10:48.237 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:10:48.357 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:10:48.368 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:10:48.369 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:10:48.369 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:10:48.419 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:10:48.420 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:10:48.427 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:10:48.429 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:10:48.429 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:10:48.432 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:10:48.438 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:10:48.449 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=349a8c8f,type=ConfigurationPropertiesRebinder]
2020-03-20 20:10:48.455 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:10:48.461 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:10:48.468 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:10:48.498 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:10:49.177 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:10:49.178 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:10:49.498 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:10:49.498 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:10:49.624 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:10:50.047 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:10:50.165 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:10:50.168 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:10:50.170 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:10:50.172 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584706250172 with initial instances count: 3
2020-03-20 20:10:50.178 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:10:50.178 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584706250178, current=UP, previous=STARTING]
2020-03-20 20:10:50.180 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:10:50.183 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:10:50.211 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:10:50.237 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:10:50.242 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:10:50.245 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:10:50.259 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:10:50.260 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:10:50.264 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.381 seconds (JVM running for 18.821)
2020-03-20 20:10:51.606 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:10:51.606 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:10:51.606 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:10:51.624 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 20:10:52.240 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 20:10:57.296 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:02.267 [http-nio-9010-exec-6] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:11:02.276 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@632d6c72[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:11:02.317 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:02.317 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:02.415 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 20:11:02 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349a8c8f
2020-03-20 20:11:02.451 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:11:02.626 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:11:02.644 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 20:11:02.649 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 20:11:02.654 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 20:11:02.678 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:11:02.682 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6b4c342b
2020-03-20 20:11:02.758 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@9b085f0
2020-03-20 20:11:02.769 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:03.659 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:11:25.619 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f262f62: startup date [Fri Mar 20 20:11:25 CST 2020]; root of context hierarchy
2020-03-20 20:11:25.767 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:11:25.798 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cb1bd186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:11:26.607 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:11:26.622 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4be4704d: startup date [Fri Mar 20 20:11:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4f262f62
2020-03-20 20:11:27.573 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:11:27.767 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:11:27.949 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:11:27.973 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:11:28.078 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af01ce89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:11:28.112 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8cfbe030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:11:28.118 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1805357510] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:11:28.119 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:11:28.122 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:11:28.153 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cb1bd186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:11:28.598 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:11:28.609 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:11:28.617 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:11:28.617 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:11:28.620 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:11:28.709 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:11:28.709 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2087 ms
2020-03-20 20:11:28.928 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:11:28.928 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:11:28.935 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@57545322
2020-03-20 20:11:29.304 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:11:31.159 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:11:31.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:11:31.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:11:31.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:11:31.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:11:31.239 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:11:31.635 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:11:31 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4be4704d
2020-03-20 20:11:31.650 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:11:31.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:11:31.864 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:11:31.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:11:31.865 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:11:31.866 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.867 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.869 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.870 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.874 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:11:31.875 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:11:31.876 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:11:31.877 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:11:31.878 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.878 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:11:31.878 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.879 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:11:31.880 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:11:31.880 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:11:31.880 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:11:31.881 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.881 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:11:31.881 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:11:31.881 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:11:31.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:11:31.884 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:11:31.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:11:31.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:11:31.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:11:31.885 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:11:31.886 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:11:31.887 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:11:31.888 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.889 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:11:31.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:11:31.929 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:11:31.966 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4be4704d: startup date [Fri Mar 20 20:11:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4f262f62
2020-03-20 20:11:32.005 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:11:32.103 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:11:32.104 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:11:33.145 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:11:33.145 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:11:34.153 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:11:34.295 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:11:34.306 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:11:34.307 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:11:34.307 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:11:34.354 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:11:34.356 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:11:34.362 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:11:34.364 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:11:34.365 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:11:34.367 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:11:34.373 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:11:34.382 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4be4704d,type=ConfigurationPropertiesRebinder]
2020-03-20 20:11:34.387 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:11:34.394 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:11:34.399 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:11:34.426 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:11:34.961 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:11:34.961 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:11:35.270 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:11:35.270 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:11:35.390 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:11:35.864 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:11:35.864 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:11:35.864 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:11:35.865 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:11:35.865 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:11:35.865 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:11:35.865 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:11:35.980 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:11:35.984 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:11:35.986 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:11:35.991 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584706295990 with initial instances count: 3
2020-03-20 20:11:35.997 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:11:35.997 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584706295997, current=UP, previous=STARTING]
2020-03-20 20:11:35.998 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:11:36.001 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:11:36.041 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:11:36.073 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:11:36.085 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:11:36.090 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:11:36.118 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:11:36.120 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:11:36.126 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.428 seconds (JVM running for 18.697)
2020-03-20 20:11:38.002 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:11:38.005 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:11:38.005 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:11:38.023 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 20:11:38.650 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 20:11:42.114 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:42.874 [http-nio-9010-exec-3] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:11:42.883 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@25c399bd[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:11:42.919 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:42.919 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:43.053 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 20:11:43 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4be4704d
2020-03-20 20:11:43.094 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:11:43.249 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:11:43.267 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 20:11:43.271 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 20:11:43.276 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 20:11:43.309 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:11:43.310 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@56d0a0c8
2020-03-20 20:11:43.388 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@6bb644e6
2020-03-20 20:11:43.401 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:11:44.280 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:16:35.868 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:21:35.870 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:26:35.871 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:31:35.871 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:36:35.874 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:41:35.876 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:43:21.868 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@509617ef: startup date [Fri Mar 20 20:43:21 CST 2020]; root of context hierarchy
2020-03-20 20:43:22.014 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:43:22.047 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a97dba2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:43:22.804 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:43:22.820 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71014b6c: startup date [Fri Mar 20 20:43:22 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@509617ef
2020-03-20 20:43:23.830 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:43:24.025 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:43:24.257 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:43:24.284 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:43:24.408 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee7dd8a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:43:24.451 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$cc77ea4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:43:24.458 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1237561473] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:43:24.460 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:43:24.465 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:43:24.525 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a97dba2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:43:24.963 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:43:24.975 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:43:24.984 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:43:24.984 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:43:24.988 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:43:25.082 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:43:25.082 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2262 ms
2020-03-20 20:43:25.319 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:43:25.320 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:43:25.327 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6e0b3146
2020-03-20 20:43:25.704 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:43:27.661 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:43:27.661 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:43:27.661 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:43:27.661 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:43:27.661 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:43:27.740 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:43:28.170 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:43:28 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71014b6c
2020-03-20 20:43:28.184 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:43:28.380 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:43:28.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:43:28.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:43:28.381 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:43:28.382 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.383 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.385 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.386 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.390 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:43:28.391 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:43:28.392 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:43:28.393 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:43:28.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:43:28.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:43:28.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:43:28.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:43:28.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:43:28.394 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:43:28.395 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:43:28.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:43:28.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:43:28.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:43:28.396 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:43:28.397 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:43:28.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:43:28.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:43:28.399 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:43:28.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:43:28.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.400 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.401 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:43:28.401 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:43:28.402 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.403 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.404 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:43:28.405 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:43:28.406 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:43:28.443 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:43:28.481 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71014b6c: startup date [Fri Mar 20 20:43:22 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@509617ef
2020-03-20 20:43:28.516 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:43:28.743 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:43:28.745 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:43:30.037 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:43:30.037 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:43:30.883 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:43:31.005 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:43:31.015 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:43:31.016 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:43:31.016 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:43:31.063 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:43:31.064 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:43:31.071 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:43:31.073 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:43:31.074 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:43:31.077 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:43:31.084 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:43:31.094 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71014b6c,type=ConfigurationPropertiesRebinder]
2020-03-20 20:43:31.101 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:43:31.108 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:43:31.114 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:43:31.149 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:43:31.722 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:43:31.723 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:43:32.045 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:43:32.045 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:43:32.174 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:43:32.588 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:43:32.708 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:43:32.711 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:43:32.712 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:43:32.715 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584708212715 with initial instances count: 3
2020-03-20 20:43:32.721 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:43:32.721 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584708212721, current=UP, previous=STARTING]
2020-03-20 20:43:32.723 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:43:32.726 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:43:32.755 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:43:32.782 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:43:32.787 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:43:32.789 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:43:32.805 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:43:32.807 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:43:32.809 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.152 seconds (JVM running for 19.612)
2020-03-20 20:43:33.716 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:43:33.716 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:43:33.716 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:43:33.732 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 20:43:34.395 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 20:43:41.946 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 20:43:41 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71014b6c
2020-03-20 20:43:41.985 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:43:42.124 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:43:42.142 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 20:43:42.145 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 20:43:42.154 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 20:43:42.187 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:43:42.189 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6489cd5a
2020-03-20 20:43:42.299 [http-nio-9010-exec-9] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@33499b42
2020-03-20 20:43:42.323 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:43.158 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:43:47.994 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 20:43:48.099 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:48.415 [http-nio-9010-exec-10] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 20:43:48.433 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@33423faf[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:43:48.481 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:48.481 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:48.492 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@ec021a0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:43:48.511 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:48.595 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:50.208 [http-nio-9010-exec-9] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:50.507 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4df9d727[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:43:50.530 [http-nio-9010-exec-2] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:43:50.569 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@2d598d96
2020-03-20 20:43:50.576 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:50.590 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:43:50.598 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:48:32.592 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:50:36.100 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31b7bf40: startup date [Fri Mar 20 20:50:36 CST 2020]; root of context hierarchy
2020-03-20 20:50:36.244 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:50:36.275 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f60f514a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:50:37.255 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:50:37.271 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a77786e: startup date [Fri Mar 20 20:50:37 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31b7bf40
2020-03-20 20:50:38.215 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:50:38.405 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:50:38.582 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:50:38.606 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:50:38.709 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9f54e4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:50:38.742 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b7ef5ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:50:38.750 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1272184063] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:50:38.751 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:50:38.753 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:50:38.798 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f60f514a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:50:39.180 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:50:39.190 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:50:39.198 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:50:39.198 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:50:39.202 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:50:39.289 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:50:39.289 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2018 ms
2020-03-20 20:50:39.510 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:50:39.510 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:50:39.518 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@46e02acc
2020-03-20 20:50:39.892 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:50:41.748 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:50:41.749 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:50:41.749 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:50:41.749 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:50:41.749 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:50:41.824 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:50:42.252 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:50:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a77786e
2020-03-20 20:50:42.274 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:50:42.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:50:42.534 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:50:42.535 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:50:42.535 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:50:42.537 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.538 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.538 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.538 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.539 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.541 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.541 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.542 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.543 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.551 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:50:42.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:50:42.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:50:42.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:50:42.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:50:42.552 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:50:42.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:50:42.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:50:42.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:50:42.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:50:42.553 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:50:42.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:50:42.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:50:42.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:50:42.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:50:42.554 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:50:42.555 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:50:42.556 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:50:42.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.557 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:50:42.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:50:42.558 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.559 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:50:42.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:50:42.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:50:42.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:50:42.560 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:50:42.561 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:50:42.564 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:50:42.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:50:42.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:50:42.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.565 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.566 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:50:42.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:50:42.567 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:50:42.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:50:42.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:50:42.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.569 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.570 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:50:42.573 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:50:42.573 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:50:42.619 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:50:42.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a77786e: startup date [Fri Mar 20 20:50:37 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@31b7bf40
2020-03-20 20:50:42.691 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:50:42.791 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:50:42.793 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:50:43.786 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:50:43.786 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:50:44.604 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:50:44.724 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:50:44.735 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:50:44.736 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:50:44.736 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:50:44.784 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:50:44.786 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:50:44.793 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:50:44.795 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:50:44.795 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:50:44.798 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:50:44.805 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:50:44.814 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1a77786e,type=ConfigurationPropertiesRebinder]
2020-03-20 20:50:44.818 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:50:44.825 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:50:44.830 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:50:44.860 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:50:45.413 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:50:45.414 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:50:45.725 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:50:45.725 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:50:45.850 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:50:46.260 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:50:46.261 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:50:46.261 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:50:46.261 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:50:46.261 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:50:46.261 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:50:46.261 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:50:46.378 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:50:46.380 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:50:46.382 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:50:46.384 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584708646383 with initial instances count: 3
2020-03-20 20:50:46.390 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:50:46.390 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584708646390, current=UP, previous=STARTING]
2020-03-20 20:50:46.392 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:50:46.395 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:50:46.425 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:50:46.453 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:50:46.459 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:50:46.463 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:50:46.479 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:50:46.480 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:50:46.482 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.382 seconds (JVM running for 18.626)
2020-03-20 20:50:47.775 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:50:47.776 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:50:47.777 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:50:47.804 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2020-03-20 20:50:48.416 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 20:50:53.361 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:50:54.450 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-20 20:50:54.451 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-20 20:50:54.458 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@4fe9c25[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 20:50:54.463 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 20:50:54.467 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-20 20:50:54.470 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-20 20:50:54.471 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-20 20:50:54.472 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-20 20:50:54.473 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-20 20:50:54.474 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-20 20:50:54.492 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:50:54.492 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:50:54.624 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 20:50:54 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a77786e
2020-03-20 20:50:54.662 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:50:54.799 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:50:54.814 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 20:50:54.819 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 20:50:54.824 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 20:50:54.847 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:50:54.848 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1f4d5ee2
2020-03-20 20:50:54.922 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@15eb1f2
2020-03-20 20:50:54.934 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 20:50:55.827 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 20:55:46.263 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:58:18.550 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@29acf59f: startup date [Fri Mar 20 20:58:18 CST 2020]; root of context hierarchy
2020-03-20 20:58:18.693 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:58:18.723 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c8b2834] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:58:19.481 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 20:58:19.508 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314cb9f3: startup date [Fri Mar 20 20:58:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29acf59f
2020-03-20 20:58:20.484 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 20:58:20.674 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 20:58:20.850 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 20:58:20.874 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:58:20.984 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50712537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:58:21.018 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2e6b36de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:58:21.026 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1365245993] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:58:21.027 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 20:58:21.030 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:58:21.079 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c8b2834] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 20:58:21.477 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 20:58:21.487 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 20:58:21.494 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 20:58:21.494 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 20:58:21.497 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 20:58:21.583 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 20:58:21.583 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2076 ms
2020-03-20 20:58:21.811 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:58:21.811 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:58:21.818 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@37e6bd46
2020-03-20 20:58:22.192 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 20:58:24.055 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 20:58:24.056 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 20:58:24.056 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 20:58:24.056 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 20:58:24.056 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 20:58:24.139 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 20:58:24.533 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 20:58:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314cb9f3
2020-03-20 20:58:24.548 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 20:58:24.748 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:58:24.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 20:58:24.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 20:58:24.749 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 20:58:24.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.751 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.753 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.757 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 20:58:24.758 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 20:58:24.759 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 20:58:24.760 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 20:58:24.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 20:58:24.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 20:58:24.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 20:58:24.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 20:58:24.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.761 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 20:58:24.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 20:58:24.762 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:58:24.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:58:24.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:58:24.763 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:58:24.764 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:58:24.764 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:58:24.766 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:58:24.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:58:24.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 20:58:24.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.767 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:58:24.768 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.768 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.768 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 20:58:24.768 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 20:58:24.770 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.770 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.770 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:58:24.770 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:58:24.771 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.771 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 20:58:24.771 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.771 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.771 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.773 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 20:58:24.773 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:58:24.808 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 20:58:24.848 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314cb9f3: startup date [Fri Mar 20 20:58:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29acf59f
2020-03-20 20:58:24.884 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 20:58:24.979 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 20:58:24.980 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 20:58:26.066 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 20:58:26.066 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 20:58:26.896 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 20:58:27.018 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 20:58:27.029 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:58:27.030 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 20:58:27.030 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 20:58:27.077 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 20:58:27.078 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 20:58:27.085 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 20:58:27.087 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 20:58:27.088 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 20:58:27.091 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 20:58:27.097 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 20:58:27.106 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=314cb9f3,type=ConfigurationPropertiesRebinder]
2020-03-20 20:58:27.111 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 20:58:27.118 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 20:58:27.124 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 20:58:27.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 20:58:27.719 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 20:58:27.719 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 20:58:28.024 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 20:58:28.024 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 20:58:28.148 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 20:58:28.559 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 20:58:28.559 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 20:58:28.559 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 20:58:28.560 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 20:58:28.560 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 20:58:28.560 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 20:58:28.560 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 20:58:28.686 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 20:58:28.689 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 20:58:28.691 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 20:58:28.694 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584709108693 with initial instances count: 3
2020-03-20 20:58:28.699 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 20:58:28.699 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584709108699, current=UP, previous=STARTING]
2020-03-20 20:58:28.700 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 20:58:28.703 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 20:58:28.734 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 20:58:28.759 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 20:58:28.765 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 20:58:28.768 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 20:58:28.783 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 20:58:28.784 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 20:58:28.787 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.257 seconds (JVM running for 18.631)
2020-03-20 20:58:30.169 [RMI TCP Connection(3)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 20:58:30.170 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 20:58:30.171 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 20:58:30.187 [RMI TCP Connection(3)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2020-03-20 20:58:30.780 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:00:27.661 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:00:28.781 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeys ===>[]
2020-03-20 21:00:28.781 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginKeysValue ===>[]
2020-03-20 21:00:28.785 [http-nio-9010-exec-5] INFO  alipay.config.redis.RedisConfig - 自动生成Redis Key -> [alipay.manage.service.impl.UserInfoServiceImpl:findSubLevelMembers:admin]
2020-03-20 21:00:28.792 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - subLevelMembers ===>[$,admin]
2020-03-20 21:00:28.792 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6020fb2e[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:00:28.795 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - str ===>$,admin
2020-03-20 21:00:28.796 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - loginMembers ===>[]
2020-03-20 21:00:28.799 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizKeyMembers ===>[]
2020-03-20 21:00:28.799 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizMembersValue ===>[]
2020-03-20 21:00:28.799 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.PaymentCodeContorller - bizingMembers ===>[]
2020-03-20 21:00:28.832 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:00:28.832 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:00:28.945 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:00:28 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314cb9f3
2020-03-20 21:00:28.986 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:00:29.150 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:00:29.165 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:00:29.169 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:00:29.176 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:00:29.199 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:00:29.200 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@9db2cd6
2020-03-20 21:00:29.272 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@36dce3c6
2020-03-20 21:00:29.282 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:00:30.179 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:03:28.562 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:08:28.563 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:13:28.564 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:14:16.869 [http-nio-9010-exec-10] INFO  alipay.manage.contorller.MasterControlController - 获取的参数：： otc.result.Result@7aa7f4e5
2020-03-20 21:14:16.881 [http-nio-9010-exec-10] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:14:28.851 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.LoginContorller - 登录成功，登录人：admin
2020-03-20 21:14:28.973 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:14:30.571 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3a894eb5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:14:30.577 [http-nio-9010-exec-7] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 21:14:30.601 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:14:30.612 [http-nio-9010-exec-8] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@3620dfab[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:14:30.621 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:14:30.668 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:14:30.748 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:15:53.598 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:15:54.562 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@30035ec5[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:15:54.570 [http-nio-9010-exec-8] WARN  org.springframework.web.servlet.PageNotFound - No mapping found for HTTP request with URI [/masterControl/getSystemSetting] in DispatcherServlet with name 'dispatcherServlet'
2020-03-20 21:15:54.592 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:15:54.598 [http-nio-9010-exec-7] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@697bb8b7[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:15:54.603 [http-nio-9010-exec-8] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:15:54.612 [http-nio-9010-exec-7] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:15:54.679 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:16:10.811 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52cd8188: startup date [Fri Mar 20 21:16:10 CST 2020]; root of context hierarchy
2020-03-20 21:16:10.959 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:16:10.992 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$20425f08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:16:11.752 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 21:16:11.768 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517bdaef: startup date [Fri Mar 20 21:16:11 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52cd8188
2020-03-20 21:16:12.820 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 21:16:13.012 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 21:16:13.203 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 21:16:13.227 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:16:13.334 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4285c0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:16:13.371 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e2226db2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:16:13.378 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/130537971] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:16:13.379 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 21:16:13.382 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:16:13.416 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$20425f08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:16:13.858 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 21:16:13.868 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 21:16:13.877 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 21:16:13.877 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 21:16:13.880 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 21:16:13.975 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 21:16:13.975 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2207 ms
2020-03-20 21:16:14.204 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:16:14.204 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:16:14.212 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6a0326a2
2020-03-20 21:16:14.589 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 21:16:16.437 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 21:16:16.438 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 21:16:16.438 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 21:16:16.438 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 21:16:16.438 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 21:16:16.522 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 21:16:16.947 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 21:16:16 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517bdaef
2020-03-20 21:16:16.962 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:16:17.163 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:16:17.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:16:17.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 21:16:17.164 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 21:16:17.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.166 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.168 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.169 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 21:16:17.173 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 21:16:17.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 21:16:17.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 21:16:17.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 21:16:17.174 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 21:16:17.175 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 21:16:17.176 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 21:16:17.177 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 21:16:17.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 21:16:17.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.178 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 21:16:17.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 21:16:17.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.179 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:16:17.180 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:16:17.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:16:17.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:16:17.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:16:17.183 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:16:17.184 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:16:17.185 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:16:17.186 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:16:17.187 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 21:16:17.189 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:16:17.225 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 21:16:17.263 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517bdaef: startup date [Fri Mar 20 21:16:11 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52cd8188
2020-03-20 21:16:17.299 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 21:16:17.402 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 21:16:17.403 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 21:16:18.552 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:16:18.552 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:16:19.384 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 21:16:19.505 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 21:16:19.515 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:16:19.516 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:16:19.517 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:16:19.566 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 21:16:19.567 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 21:16:19.575 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 21:16:19.577 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 21:16:19.577 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 21:16:19.580 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 21:16:19.587 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 21:16:19.596 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=517bdaef,type=ConfigurationPropertiesRebinder]
2020-03-20 21:16:19.601 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 21:16:19.609 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 21:16:19.615 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 21:16:19.654 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 21:16:20.233 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 21:16:20.234 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 21:16:20.566 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 21:16:20.566 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 21:16:20.689 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 21:16:21.106 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 21:16:21.222 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 21:16:21.224 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 21:16:21.226 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 21:16:21.229 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584710181228 with initial instances count: 3
2020-03-20 21:16:21.236 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 21:16:21.236 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584710181236, current=UP, previous=STARTING]
2020-03-20 21:16:21.237 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 21:16:21.240 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 21:16:21.266 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 21:16:21.295 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 21:16:21.300 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 21:16:21.302 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 21:16:21.320 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 21:16:21.320 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 21:16:21.321 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.59 seconds (JVM running for 19.003)
2020-03-20 21:16:22.401 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 21:16:22.401 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 21:16:22.401 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 21:16:22.416 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
2020-03-20 21:16:22.966 [RMI TCP Connection(3)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:16:27.353 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:16:27.979 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@520fbc07[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:16:28.020 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:16:28.033 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@5562eea7[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:16:28.060 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:16:28.172 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:16:28.219 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:16:28 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517bdaef
2020-03-20 21:16:28.270 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:16:28.428 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:16:28.442 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:16:28.446 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:16:28.452 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:16:28.475 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:16:28.476 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4b046848
2020-03-20 21:16:28.545 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 21:16:29.456 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:17:51.004 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4a2f95bc: startup date [Fri Mar 20 21:17:51 CST 2020]; root of context hierarchy
2020-03-20 21:17:51.144 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:17:51.174 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b9ef065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:17:51.935 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 21:17:51.950 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44bff208: startup date [Fri Mar 20 21:17:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a2f95bc
2020-03-20 21:17:52.888 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 21:17:53.139 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 21:17:53.401 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 21:17:53.429 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:17:53.564 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f84ed68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:17:53.611 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$2d7eff0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:17:53.619 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1272212015] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:17:53.620 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 21:17:53.624 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:17:53.669 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b9ef065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:17:54.120 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 21:17:54.134 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 21:17:54.142 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 21:17:54.142 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 21:17:54.147 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 21:17:54.244 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 21:17:54.244 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2294 ms
2020-03-20 21:17:54.703 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:17:54.703 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:17:54.710 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@15845e43
2020-03-20 21:17:55.262 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 21:17:58.213 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 21:17:58.213 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 21:17:58.213 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 21:17:58.213 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 21:17:58.213 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 21:17:58.290 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 21:17:58.738 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 21:17:58 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44bff208
2020-03-20 21:17:58.755 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:17:58.985 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:17:58.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:17:58.986 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 21:17:58.987 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 21:17:58.989 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.990 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.991 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.995 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.996 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:58.997 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 21:17:59.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 21:17:59.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 21:17:59.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 21:17:59.003 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 21:17:59.004 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 21:17:59.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 21:17:59.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 21:17:59.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 21:17:59.005 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 21:17:59.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 21:17:59.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 21:17:59.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 21:17:59.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 21:17:59.006 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 21:17:59.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 21:17:59.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 21:17:59.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 21:17:59.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 21:17:59.007 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 21:17:59.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 21:17:59.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 21:17:59.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 21:17:59.008 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 21:17:59.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.010 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 21:17:59.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 21:17:59.011 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.012 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 21:17:59.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:17:59.013 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:17:59.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:17:59.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:17:59.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:17:59.014 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:17:59.018 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:17:59.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:17:59.019 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:17:59.020 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:17:59.021 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 21:17:59.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:17:59.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:17:59.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.023 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:17:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 21:17:59.027 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:17:59.073 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 21:17:59.118 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44bff208: startup date [Fri Mar 20 21:17:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a2f95bc
2020-03-20 21:17:59.160 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 21:17:59.312 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 21:17:59.313 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 21:18:00.314 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:18:00.314 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:18:01.176 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 21:18:01.298 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 21:18:01.310 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:18:01.312 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:18:01.312 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:18:01.361 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 21:18:01.362 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 21:18:01.369 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 21:18:01.371 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 21:18:01.372 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 21:18:01.375 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 21:18:01.383 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 21:18:01.391 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=44bff208,type=ConfigurationPropertiesRebinder]
2020-03-20 21:18:01.398 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 21:18:01.405 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 21:18:01.412 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 21:18:01.441 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 21:18:02.016 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 21:18:02.016 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 21:18:02.413 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 21:18:02.413 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 21:18:02.622 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 21:18:03.155 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 21:18:03.394 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 21:18:03.421 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 21:18:03.429 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 21:18:03.440 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584710283438 with initial instances count: 3
2020-03-20 21:18:03.473 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 21:18:03.473 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584710283473, current=UP, previous=STARTING]
2020-03-20 21:18:03.478 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 21:18:03.491 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 21:18:03.650 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 21:18:03.767 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 21:18:03.782 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 21:18:03.788 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 21:18:03.806 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 21:18:03.807 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 21:18:03.810 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 13.72 seconds (JVM running for 20.951)
2020-03-20 21:18:05.338 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 21:18:05.338 [RMI TCP Connection(7)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 21:18:05.338 [RMI TCP Connection(7)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 21:18:05.356 [RMI TCP Connection(7)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-03-20 21:18:06.045 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:18:34.468 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:18:35.439 [http-nio-9010-exec-1] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@9f29289[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:18:35.482 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:18:35.491 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@75d919b0[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:18:35.524 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:18:35.660 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:18:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44bff208
2020-03-20 21:18:35.680 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:18:35.715 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:18:35.859 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:18:35.877 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:18:35.883 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:18:35.888 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:18:35.907 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:18:35.909 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1a8f473e
2020-03-20 21:18:35.978 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@555bdba5
2020-03-20 21:18:35.982 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 21:18:36.893 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:20:25.960 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4db37ea8: startup date [Fri Mar 20 21:20:25 CST 2020]; root of context hierarchy
2020-03-20 21:20:26.112 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:20:26.143 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$631e21ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:20:26.976 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 21:20:26.994 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bc1aee5: startup date [Fri Mar 20 21:20:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4db37ea8
2020-03-20 21:20:27.935 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 21:20:28.125 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 21:20:28.304 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 21:20:28.328 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:20:28.431 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$47041eef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:20:28.465 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$24fe3096] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:20:28.472 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/921433148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:20:28.473 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 21:20:28.476 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:20:28.506 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$631e21ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:20:28.921 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 21:20:28.931 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 21:20:28.939 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 21:20:28.940 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 21:20:28.944 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 21:20:29.029 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 21:20:29.029 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2035 ms
2020-03-20 21:20:29.271 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:20:29.271 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:20:29.278 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2a05d63
2020-03-20 21:20:29.666 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 21:20:31.609 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 21:20:31.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 21:20:31.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 21:20:31.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 21:20:31.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 21:20:31.692 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 21:20:32.078 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 21:20:32 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bc1aee5
2020-03-20 21:20:32.093 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:20:32.314 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:20:32.315 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:20:32.315 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 21:20:32.316 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 21:20:32.317 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.317 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.318 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.318 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.318 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.318 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.319 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.320 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.325 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 21:20:32.325 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.325 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 21:20:32.325 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 21:20:32.326 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 21:20:32.327 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 21:20:32.328 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 21:20:32.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 21:20:32.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 21:20:32.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 21:20:32.329 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 21:20:32.330 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.330 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 21:20:32.331 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 21:20:32.331 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.331 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 21:20:32.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:20:32.333 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:20:32.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:20:32.334 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:20:32.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:20:32.335 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:20:32.338 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:20:32.338 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:20:32.339 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:20:32.340 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.342 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:20:32.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:20:32.343 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.345 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 21:20:32.346 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:20:32.384 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 21:20:32.422 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bc1aee5: startup date [Fri Mar 20 21:20:26 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4db37ea8
2020-03-20 21:20:32.461 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 21:20:32.569 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 21:20:32.570 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 21:20:33.549 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:20:33.549 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:20:34.385 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 21:20:34.506 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 21:20:34.516 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:20:34.517 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:20:34.518 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:20:34.566 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 21:20:34.568 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 21:20:34.575 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 21:20:34.577 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 21:20:34.578 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 21:20:34.580 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 21:20:34.586 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 21:20:34.596 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7bc1aee5,type=ConfigurationPropertiesRebinder]
2020-03-20 21:20:34.602 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 21:20:34.608 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 21:20:34.616 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 21:20:34.645 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 21:20:35.235 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 21:20:35.235 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 21:20:35.618 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 21:20:35.618 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 21:20:35.797 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 21:20:36.284 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 21:20:36.408 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 21:20:36.410 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 21:20:36.413 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 21:20:36.416 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584710436415 with initial instances count: 3
2020-03-20 21:20:36.422 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 21:20:36.422 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584710436422, current=UP, previous=STARTING]
2020-03-20 21:20:36.423 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 21:20:36.426 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 21:20:36.470 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 21:20:36.491 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 21:20:36.497 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 21:20:36.502 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 21:20:36.521 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 21:20:36.522 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 21:20:36.527 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.488 seconds (JVM running for 19.018)
2020-03-20 21:20:37.478 [RMI TCP Connection(4)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 21:20:37.478 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 21:20:37.478 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 21:20:37.494 [RMI TCP Connection(4)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 21:20:38.410 [RMI TCP Connection(5)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:20:44.279 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:20:45.307 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@567a7d8d[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:20:45.443 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:20:45.501 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@2e8d5fd7[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:20:45.566 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:20:45.679 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:20:46.090 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:20:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bc1aee5
2020-03-20 21:20:46.260 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:20:46.764 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:20:46.832 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:20:46.848 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:20:46.860 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:20:46.915 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数system ：： alipay
2020-03-20 21:20:46.915 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 获取参数key ：： TIBLE_LINK
2020-03-20 21:20:46.915 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前远程程序未调用，请检查服务运行状况
2020-03-20 21:20:46.917 [HystrixTimer-1] INFO  a.m.a.c.impl.ConfigServiceClientFeignHystrix - 当前采取默认配置情况
2020-03-20 21:20:46.926 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@465d403f
2020-03-20 21:20:46.926 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-20 21:20:46.931 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 21:20:46.935 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:20:46.939 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3274545b
2020-03-20 21:20:47.868 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:21:54.494 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4efd5477: startup date [Fri Mar 20 21:21:54 CST 2020]; root of context hierarchy
2020-03-20 21:21:54.638 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:21:54.667 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$de97c190] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:21:55.427 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 21:21:55.444 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23969f04: startup date [Fri Mar 20 21:21:55 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4efd5477
2020-03-20 21:21:56.366 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 21:21:56.554 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 21:21:56.743 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 21:21:56.767 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:21:56.870 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c27dbe93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:21:56.903 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a077d03a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:21:56.909 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1537362469] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:21:56.910 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 21:21:56.913 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:21:56.946 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$de97c190] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:21:57.356 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 21:21:57.366 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 21:21:57.373 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 21:21:57.374 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 21:21:57.377 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 21:21:57.464 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 21:21:57.464 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2020 ms
2020-03-20 21:21:57.701 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:21:57.701 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:21:57.708 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@15845e43
2020-03-20 21:21:58.091 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 21:22:00.106 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 21:22:00.107 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 21:22:00.107 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 21:22:00.107 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 21:22:00.107 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 21:22:00.187 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 21:22:00.573 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 21:22:00 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23969f04
2020-03-20 21:22:00.589 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:22:00.790 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:22:00.791 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:22:00.791 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 21:22:00.792 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 21:22:00.793 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.793 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.793 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.794 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.794 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.794 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.795 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.796 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.800 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 21:22:00.801 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 21:22:00.802 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 21:22:00.803 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 21:22:00.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 21:22:00.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 21:22:00.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 21:22:00.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 21:22:00.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.804 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 21:22:00.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 21:22:00.805 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 21:22:00.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:00.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:00.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:00.806 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:00.807 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.807 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:00.807 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:00.809 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:00.810 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:22:00.811 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:22:00.811 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:22:00.811 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 21:22:00.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:00.812 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:00.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.813 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:00.815 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:00.816 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:22:00.852 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 21:22:00.890 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23969f04: startup date [Fri Mar 20 21:21:55 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4efd5477
2020-03-20 21:22:00.928 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 21:22:01.028 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 21:22:01.030 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 21:22:02.013 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:22:02.013 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:22:02.840 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 21:22:02.964 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 21:22:02.976 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:22:02.977 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:22:02.978 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:22:03.027 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 21:22:03.028 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 21:22:03.035 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 21:22:03.036 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 21:22:03.037 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 21:22:03.040 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 21:22:03.048 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 21:22:03.057 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=23969f04,type=ConfigurationPropertiesRebinder]
2020-03-20 21:22:03.066 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 21:22:03.074 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 21:22:03.080 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 21:22:03.112 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 21:22:03.664 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 21:22:03.664 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 21:22:03.964 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 21:22:03.964 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 21:22:04.086 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 21:22:04.536 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 21:22:04.660 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 21:22:04.663 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 21:22:04.665 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 21:22:04.668 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584710524667 with initial instances count: 3
2020-03-20 21:22:04.674 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 21:22:04.674 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584710524674, current=UP, previous=STARTING]
2020-03-20 21:22:04.675 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 21:22:04.679 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 21:22:04.710 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 21:22:04.736 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 21:22:04.744 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 21:22:04.747 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 21:22:04.768 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 21:22:04.769 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 21:22:04.771 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.408 seconds (JVM running for 18.615)
2020-03-20 21:22:05.567 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 21:22:05.567 [RMI TCP Connection(2)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 21:22:05.567 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 21:22:05.583 [RMI TCP Connection(2)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 21:22:06.075 [RMI TCP Connection(1)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:22:10.571 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:12.108 [http-nio-9010-exec-3] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@7cdcd926[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:22:12.156 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:12.166 [http-nio-9010-exec-6] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@492d79ad[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:22:12.192 [http-nio-9010-exec-6] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:12.344 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:12.423 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:22:12 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23969f04
2020-03-20 21:22:12.471 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:22:12.614 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:22:12.628 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:22:12.634 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:22:12.638 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:22:12.657 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:22:12.659 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@75c8656d
2020-03-20 21:22:12.723 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@2e082cd3
2020-03-20 21:22:12.723 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-20 21:22:12.725 [http-nio-9010-exec-5] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 21:22:13.644 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:22:36.681 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@409a70c7: startup date [Fri Mar 20 21:22:36 CST 2020]; root of context hierarchy
2020-03-20 21:22:36.825 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:22:36.854 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c82c7a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:22:37.630 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 21:22:37.647 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d950c8c: startup date [Fri Mar 20 21:22:37 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409a70c7
2020-03-20 21:22:38.663 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 21:22:38.854 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 21:22:39.033 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 21:22:39.057 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:22:39.159 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac127704] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:22:39.192 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8a0c88ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:22:39.197 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/1274247007] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:22:39.198 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 21:22:39.202 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:22:39.245 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c82c7a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:22:39.641 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 21:22:39.652 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 21:22:39.660 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 21:22:39.660 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 21:22:39.664 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 21:22:39.749 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 21:22:39.750 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2103 ms
2020-03-20 21:22:39.980 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:22:39.980 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:22:39.987 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@70506a29
2020-03-20 21:22:40.369 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 21:22:42.236 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 21:22:42.237 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 21:22:42.237 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 21:22:42.237 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 21:22:42.237 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 21:22:42.314 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 21:22:42.705 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 21:22:42 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d950c8c
2020-03-20 21:22:42.720 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:22:42.921 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:22:42.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 21:22:42.922 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:22:42.923 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 21:22:42.924 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.925 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.926 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.927 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.931 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 21:22:42.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 21:22:42.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 21:22:42.932 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 21:22:42.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 21:22:42.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 21:22:42.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 21:22:42.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 21:22:42.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 21:22:42.933 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 21:22:42.934 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 21:22:42.935 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 21:22:42.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 21:22:42.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 21:22:42.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 21:22:42.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.936 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 21:22:42.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 21:22:42.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.937 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 21:22:42.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:42.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:42.938 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:42.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:42.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:42.939 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:22:42.942 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:22:42.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:22:42.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:22:42.943 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 21:22:42.944 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:22:42.945 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.947 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 21:22:42.948 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:22:42.983 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 21:22:43.022 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d950c8c: startup date [Fri Mar 20 21:22:37 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409a70c7
2020-03-20 21:22:43.061 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 21:22:43.154 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 21:22:43.155 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 21:22:44.324 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:22:44.324 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:22:45.136 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 21:22:45.258 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 21:22:45.269 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:22:45.270 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:22:45.270 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:22:45.319 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 21:22:45.321 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 21:22:45.328 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 21:22:45.330 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 21:22:45.331 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 21:22:45.333 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 21:22:45.341 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 21:22:45.352 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3d950c8c,type=ConfigurationPropertiesRebinder]
2020-03-20 21:22:45.358 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 21:22:45.365 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 21:22:45.372 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 21:22:45.405 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 21:22:45.959 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 21:22:45.959 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 21:22:46.272 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 21:22:46.272 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 21:22:46.393 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:22:46.818 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 21:22:46.818 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 21:22:46.818 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 21:22:46.819 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 21:22:46.819 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 21:22:46.819 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 21:22:46.819 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 21:22:46.934 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 21:22:46.937 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 21:22:46.939 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 21:22:46.942 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584710566941 with initial instances count: 3
2020-03-20 21:22:46.948 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 21:22:46.948 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584710566948, current=UP, previous=STARTING]
2020-03-20 21:22:46.949 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 21:22:46.952 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 21:22:46.983 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 21:22:47.005 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 21:22:47.011 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 21:22:47.016 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 21:22:47.030 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 21:22:47.031 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 21:22:47.034 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 11.294 seconds (JVM running for 18.514)
2020-03-20 21:22:47.713 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 21:22:47.714 [RMI TCP Connection(1)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 21:22:47.714 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 21:22:47.730 [RMI TCP Connection(1)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-03-20 21:22:48.878 [RMI TCP Connection(2)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:22:52.815 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:53.741 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@45a0f744[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:22:53.793 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:53.808 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@6c480328[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:22:53.837 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:54.046 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:54.193 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:22:54 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d950c8c
2020-03-20 21:22:54.250 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:22:54.438 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:22:54.452 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:22:54.456 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:22:54.461 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:22:54.488 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:22:54.490 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1c76f8e5
2020-03-20 21:22:54.612 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@73155f0f
2020-03-20 21:22:54.613 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-20 21:22:54.624 [http-nio-9010-exec-4] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:22:55.465 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:23:28.182 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18c09a3a: startup date [Fri Mar 20 21:23:28 CST 2020]; root of context hierarchy
2020-03-20 21:23:28.328 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:23:28.359 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3fb971e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:23:29.105 [restartedMain] INFO  alipay.AlipayApplication - No active profile set, falling back to default profiles: default
2020-03-20 21:23:29.121 [restartedMain] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11474f91: startup date [Fri Mar 20 21:23:29 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18c09a3a
2020-03-20 21:23:30.389 [restartedMain] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-20 21:23:31.009 [restartedMain] INFO  o.s.b.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-03-20 21:23:31.539 [restartedMain] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c7f49713-c8e7-3dbc-9a31-f6552937ee5b
2020-03-20 21:23:31.589 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:23:31.767 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$239f6ee9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:23:31.823 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [alipay.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$1998090] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:23:31.829 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [alipay.config.redis.RedisConfig$$Lambda$264/14778313] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:23:31.830 [restartedMain] INFO  alipay.config.redis.RedisConfig - 初始化 -> [Redis CacheErrorHandler]
2020-03-20 21:23:31.834 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'errorHandler' of type [alipay.config.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:23:31.879 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3fb971e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-20 21:23:32.263 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9010 (http)
2020-03-20 21:23:32.273 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9010"]
2020-03-20 21:23:32.282 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-20 21:23:32.282 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2020-03-20 21:23:32.286 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_212\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\toolsPath\Git_path\Git\cmd;C:\Program Files\Java\jdk1.8.0_212\bin;C:\apache-maven-3.6.3\bin;C:\apache-tomcat-9.0.31\lib;C:\apache-tomcat-9.0.31\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hx070\AppData\Local\Microsoft\WindowsApps;;.]
2020-03-20 21:23:32.375 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-20 21:23:32.375 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3254 ms
2020-03-20 21:23:32.599 [localhost-startStop-1] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:23:32.599 [localhost-startStop-1] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:23:32.606 [localhost-startStop-1] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@38a5f324
2020-03-20 21:23:32.978 [localhost-startStop-1] INFO  org.springframework.aop.framework.CglibAopProxy - Method [void com.zaxxer.hikari.HikariConfig.seal()] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2020-03-20 21:23:34.837 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-03-20 21:23:34.837 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'sessionRepositoryFilter' to: [/*]
2020-03-20 21:23:34.838 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2020-03-20 21:23:34.838 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-03-20 21:23:34.838 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2020-03-20 21:23:34.918 [restartedMain] INFO  alipay.config.listener.EnvironmentConfig - 项目启动正常，初始化完成
2020-03-20 21:23:35.392 [restartedMain] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing FeignContext-otc-task-config-server: startup date [Fri Mar 20 21:23:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11474f91
2020-03-20 21:23:35.411 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:23:35.653 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/edit-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.editAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:23:35.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add-account],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAccount(alipay.manage.bean.UserInfo)
2020-03-20 21:23:35.655 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account-api/add_amount],methods=[POST]}" onto public otc.result.Result alipay.manage.api.AccountApi.addAmount(javax.servlet.http.HttpServletRequest,alipay.manage.bean.UserFund,java.lang.String,java.lang.String)
2020-03-20 21:23:35.656 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/uploadPic],methods=[POST]}" onto public otc.result.Result alipay.manage.api.StorageApi.uploadPic(org.springframework.web.multipart.MultipartFile[]) throws java.io.IOException
2020-03-20 21:23:35.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.657 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.658 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AccountContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/generateInviteCodeAndGetInviteRegisterLink],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.generateInviteCodeAndGetInviteRegisterLink(alipay.manage.bean.InviteCode,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.659 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findLowerLevelAccountDetailsInfoByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findLowerLevelAccountDetailsInfoByPage(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/findAgentCount],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.findAgentCount(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateAccountPasswpord],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateAccountPasswpord(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/updateSecurityPassword],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.updateSecurityPassword(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.660 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent/agentOpenAnAccount],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.AgentContorller.agentOpenAnAccount(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.index()
2020-03-20 21:23:35.665 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/register],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.register(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountReceiveOrderRecord()
2020-03-20 21:23:35.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.login()
2020-03-20 21:23:35.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/online-customer],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineCustomer()
2020-03-20 21:23:35.666 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/onlineStatMembers],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.onlineMemberList()
2020-03-20 21:23:35.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/payEr],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.payEr()
2020-03-20 21:23:35.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-info],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalInfo()
2020-03-20 21:23:35.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealRecord()
2020-03-20 21:23:35.667 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/paySuccessNotice],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.paySuccessNotice()
2020-03-20 21:23:35.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.recharge()
2020-03-20 21:23:35.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrder()
2020-03-20 21:23:35.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/appeal-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.appealDetails()
2020-03-20 21:23:35.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/otc365],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.otc365()
2020-03-20 21:23:35.668 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gathering-code],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.gatheringCode()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/account_manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.accountManage()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/my-home-page],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.myHomePage()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.withdraw()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/audit-order],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.auditOrder()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-center],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentCenter()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/pay],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.pay()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/google],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.google()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive-order-record],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.receiveOrderRecord()
2020-03-20 21:23:35.669 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/personal-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.personalAccountChange()
2020-03-20 21:23:35.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelOpenAnAccount()
2020-03-20 21:23:35.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-manage],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountManage()
2020-03-20 21:23:35.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-account-change],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.LowerLevelAccountChange()
2020-03-20 21:23:35.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/agent-open-an-account],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.agentOpenAnAccount()
2020-03-20 21:23:35.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-withdraw-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelWithdrawDetails()
2020-03-20 21:23:35.670 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge-withdraw-log],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.rechargeWithdrawLog()
2020-03-20 21:23:35.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/lower-level-recharge-details],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.IndexContorller.lowerLevelRechargeDetails()
2020-03-20 21:23:35.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.login(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.671 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/logout],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.LoginContorller.logout(javax.servlet.http.HttpSession)
2020-03-20 21:23:35.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getRegisterSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getRegisterSetting()
2020-03-20 21:23:35.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.672 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/masterControl/getSystemSetting],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.MasterControlController.getSystemSetting()
2020-03-20 21:23:35.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:23:35.673 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findLowerLevelAccountReceiveOrderRecordByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findLowerLevelAccountReceiveOrderRecordByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:23:35.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/userConfirmToPaid],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.userConfirmToPaid(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:23:35.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitConfirmOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitConfirmOrder(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:23:35.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyAccountChangeLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyAccountChangeLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:23:35.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyWaitReceivingOrder],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyWaitReceivingOrder(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.674 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/order/findMyRechargeWithdrawLogByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.OrderContorller.findMyRechargeWithdrawLogByPage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:23:35.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyGatheringCodeByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyGatheringCodeByPage(alipay.manage.bean.FileList,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:23:35.677 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMediumsByPage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMediumsByPage(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:23:35.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/querySubOnline],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.querySubOnline(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findQrByMediumId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findQrByMediumId(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/findMyMediumById],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.findMyMediumById(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/editMedium],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.editMedium(alipay.manage.bean.Medium,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.678 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/delMedium],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.delMedium(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:23:35.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statisticalAnalysis/addQrInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.PaymentCodeContorller.addQrInfo(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-03-20 21:23:35.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/qrcode/findIsMyQrcodePage],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.QrcodeContorller.findIsMyQrcodePage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2020-03-20 21:23:35.679 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/findEnabledPayType]}" onto public otc.result.Result alipay.manage.contorller.RechargeContorller.findEnabledPayType()
2020-03-20 21:23:35.680 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/register],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.register(alipay.manage.bean.UserInfo,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/findUserByAccountId],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.findUserByAccountId(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getUserAccountInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getUserAccountInfo(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updateIsAgent],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.updateIsAgent(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyMoneyPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyMoneyPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/bindBankInfo],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.bindBankInfo(alipay.manage.bean.BankList,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/getBankInfo],methods=[GET]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.getBankInfo(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.681 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/modifyLoginPwd],methods=[POST]}" onto public otc.result.Result alipay.manage.contorller.UserContorller.modifyLoginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.682 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userAccount/updataAccountFee],methods=[GET]}" onto public java.lang.String alipay.manage.contorller.UserContorller.updataAccountFee(javax.servlet.http.HttpServletRequest,java.lang.String)
2020-03-20 21:23:35.684 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-03-20 21:23:35.685 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:23:35.733 [restartedMain] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-03-20 21:23:35.771 [restartedMain] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11474f91: startup date [Fri Mar 20 21:23:29 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18c09a3a
2020-03-20 21:23:35.808 [restartedMain] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in alipayExceptionHandler
2020-03-20 21:23:35.913 [restartedMain] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2020-03-20 21:23:35.914 [restartedMain] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2020-03-20 21:23:36.944 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-20 21:23:36.944 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-20 21:23:37.773 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-03-20 21:23:37.893 [restartedMain] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-20 21:23:37.906 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:23:37.907 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-03-20 21:23:37.908 [restartedMain] INFO  o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-03-20 21:23:37.960 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2020-03-20 21:23:37.961 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-03-20 21:23:37.970 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-03-20 21:23:37.972 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-03-20 21:23:37.973 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-03-20 21:23:37.976 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-03-20 21:23:37.984 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-03-20 21:23:37.998 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=11474f91,type=ConfigurationPropertiesRebinder]
2020-03-20 21:23:38.008 [restartedMain] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-03-20 21:23:38.016 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2020-03-20 21:23:38.025 [restartedMain] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2020-03-20 21:23:38.061 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-20 21:23:38.622 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-20 21:23:38.622 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-20 21:23:38.928 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-20 21:23:38.928 [restartedMain] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-20 21:23:39.057 [restartedMain] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-20 21:23:39.481 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-20 21:23:39.482 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-20 21:23:39.482 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-20 21:23:39.482 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-20 21:23:39.482 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-20 21:23:39.482 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-20 21:23:39.482 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-20 21:23:39.602 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-20 21:23:39.605 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-20 21:23:39.606 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-20 21:23:39.609 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1584710619608 with initial instances count: 3
2020-03-20 21:23:39.615 [restartedMain] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application otc-alipay-server with eureka with status UP
2020-03-20 21:23:39.616 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1584710619616, current=UP, previous=STARTING]
2020-03-20 21:23:39.617 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010: registering service...
2020-03-20 21:23:39.621 [restartedMain] INFO  o.s.context.support.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2020-03-20 21:23:39.652 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_OTC-ALIPAY-SERVER/192.168.254.110:otc-alipay-server:9010 - registration status: 204
2020-03-20 21:23:39.675 [restartedMain] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-03-20 21:23:39.680 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9010"]
2020-03-20 21:23:39.684 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-20 21:23:39.700 [restartedMain] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 9010 (http) with context path ''
2020-03-20 21:23:39.702 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9010
2020-03-20 21:23:39.704 [restartedMain] INFO  alipay.AlipayApplication - Started AlipayApplication in 12.441 seconds (JVM running for 19.787)
2020-03-20 21:23:40.955 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-03-20 21:23:40.956 [RMI TCP Connection(7)-192.168.254.110] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-20 21:23:40.956 [RMI TCP Connection(7)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2020-03-20 21:23:40.977 [RMI TCP Connection(7)-192.168.254.110] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2020-03-20 21:23:41.519 [RMI TCP Connection(6)-192.168.254.110] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-03-20 21:23:58.325 [http-nio-9010-exec-1] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:23:59.343 [http-nio-9010-exec-2] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@64f7a5c[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:23:59.386 [http-nio-9010-exec-2] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:23:59.395 [http-nio-9010-exec-5] INFO  alipay.manage.contorller.UserContorller - 当前用户 alipay.manage.bean.UserInfo@51734a34[
  id=<null>
  userId=admin
  userName=<null>
  password=123123
  payPasword=<null>
  salt=<null>
  userType=<null>
  switchs=<null>
  userNode=<null>
  email=<null>
  agent=<null>
  isAgent=<null>
  credit=<null>
  receiveOrderState=<null>
  remitOrderState=<null>
  QQ=<null>
  telegram=<null>
  skype=<null>
  createTime=<null>
  submitTime=<null>
  status=<null>
  privateKey=<null>
  publicKey=<null>
  minAmount=<null>
  maxAmount=<null>
  inviteCode=<null>
  newPassword=<null>
  newPayPassword=<null>
  toDayOrderCount=<null>
  online=<null>
  agentCount=<null>
]
2020-03-20 21:23:59.429 [http-nio-9010-exec-5] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:23:59.557 [http-nio-9010-exec-3] INFO  alipay.config.interceptor.MyInterceptor - MyInterceptor01--->postHandle()执行控制器之后且在渲染视图前调用此方法....
2020-03-20 21:23:59.563 [hystrix-otc-task-config-server-1] INFO  o.s.c.a.AnnotationConfigApplicationContext - Refreshing SpringClientFactory-otc-task-config-server: startup date [Fri Mar 20 21:23:59 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11474f91
2020-03-20 21:23:59.619 [hystrix-otc-task-config-server-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-03-20 21:23:59.763 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:23:59.781 [hystrix-otc-task-config-server-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-otc-task-config-server
2020-03-20 21:23:59.787 [hystrix-otc-task-config-server-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: otc-task-config-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-20 21:23:59.791 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-20 21:23:59.810 [hystrix-otc-task-config-server-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-20 21:23:59.811 [hystrix-otc-task-config-server-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client otc-task-config-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=otc-task-config-server,current list of Servers=[192.168.254.110:2232],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.254.110:2232;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@289c2b3d
2020-03-20 21:23:59.877 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config:::otc.result.Result@47b5f5c0
2020-03-20 21:23:59.878 [http-nio-9010-exec-4] INFO  alipay.manage.contorller.MasterControlController - 获取参数config.getResult():::null
2020-03-20 21:23:59.880 [http-nio-9010-exec-4] ERROR alipay.config.exception.AlipayExceptionHandler - 运行时异常:
java.lang.NullPointerException: null
	at alipay.manage.contorller.MasterControlController.getSystemSetting(MasterControlController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:147)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-20 21:24:00.795 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: otc-task-config-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
