<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="alipay.manage.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="alipay.manage.bean.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="payPasword" property="payPasword" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="userType" property="userType" jdbcType="INTEGER" />
    <result column="switchs" property="switchs" jdbcType="INTEGER" />
    <result column="userNode" property="userNode" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="agent" property="agent" jdbcType="VARCHAR" />
    <result column="isAgent" property="isAgent" jdbcType="CHAR" />
    <result column="credit" property="credit" jdbcType="DECIMAL" />
    <result column="receiveOrderState" property="receiveOrderState" jdbcType="INTEGER" />
    <result column="remitOrderState" property="remitOrderState" jdbcType="INTEGER" />
    <result column="QQ" property="QQ" jdbcType="VARCHAR" />
    <result column="telegram" property="telegram" jdbcType="VARCHAR" />
    <result column="skype" property="skype" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="privateKey" property="privateKey" jdbcType="CHAR" />
    <result column="publicKey" property="publicKey" jdbcType="CHAR" />
    <result column="retain3" property="retain3" jdbcType="CHAR" />
    <result column="retain4" property="retain4" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, userName, password, payPasword, salt, userType, switchs, userNode, email,
    agent, isAgent, credit, receiveOrderState, remitOrderState, QQ, telegram, skype,
    createTime, submitTime, status, privateKey, publicKey, retain3, retain4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="alipay.manage.bean.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from alipay_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from alipay_user_info
    where id = #{id,jdbcType=INTEGER}
      and userId = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from alipay_user_info
    where id = #{id,jdbcType=INTEGER}
      and userId = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="alipay.manage.bean.UserInfoExample" >
    delete from alipay_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="alipay.manage.bean.UserInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into alipay_user_info (userId, userName, password,
      payPasword, salt, userType,
      switchs, userNode, email,
      agent, isAgent, credit,
      receiveOrderState, remitOrderState, QQ,
      telegram, skype, createTime,
      submitTime, status, retain1,
      retain2, retain3, retain4)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{payPasword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER},
      #{switchs,jdbcType=INTEGER}, #{userNode,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{agent,jdbcType=VARCHAR}, #{isAgent,jdbcType=CHAR}, #{credit,jdbcType=DECIMAL},
      #{receiveOrderState,jdbcType=INTEGER}, #{remitOrderState,jdbcType=INTEGER}, #{QQ,jdbcType=VARCHAR},
      #{telegram,jdbcType=VARCHAR}, #{skype,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{submitTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{privateKey,jdbcType=CHAR},
      #{publicKey,jdbcType=CHAR}, #{retain3,jdbcType=CHAR}, #{retain4,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="alipay.manage.bean.UserInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into alipay_user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="payPasword != null" >
        payPasword,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="userType != null" >
        userType,
      </if>
      <if test="switchs != null" >
        switchs,
      </if>
      <if test="userNode != null" >
        userNode,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="agent != null" >
        agent,
      </if>
      <if test="isAgent != null" >
        isAgent,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="receiveOrderState != null" >
        receiveOrderState,
      </if>
      <if test="remitOrderState != null" >
        remitOrderState,
      </if>
      <if test="QQ != null" >
        QQ,
      </if>
      <if test="telegram != null" >
        telegram,
      </if>
      <if test="skype != null" >
        skype,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="submitTime != null" >
        submitTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="privateKey != null" >
        privateKey,
      </if>
      <if test="publicKey != null" >
        publicKey,
      </if>
      <if test="retain3 != null" >
        retain3,
      </if>
      <if test="retain4 != null" >
        retain4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPasword != null" >
        #{payPasword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="switchs != null" >
        #{switchs,jdbcType=INTEGER},
      </if>
      <if test="userNode != null" >
        #{userNode,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="agent != null" >
        #{agent,jdbcType=VARCHAR},
      </if>
      <if test="isAgent != null" >
        #{isAgent,jdbcType=CHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=DECIMAL},
      </if>
      <if test="receiveOrderState != null" >
        #{receiveOrderState,jdbcType=INTEGER},
      </if>
      <if test="remitOrderState != null" >
        #{remitOrderState,jdbcType=INTEGER},
      </if>
      <if test="QQ != null" >
        #{QQ,jdbcType=VARCHAR},
      </if>
      <if test="telegram != null" >
        #{telegram,jdbcType=VARCHAR},
      </if>
      <if test="skype != null" >
        #{skype,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="privateKey != null" >
        #{privateKey,jdbcType=CHAR},
      </if>
      <if test="publicKey != null" >
        #{publicKey,jdbcType=CHAR},
      </if>
      <if test="retain3 != null" >
        #{retain3,jdbcType=CHAR},
      </if>
      <if test="retain4 != null" >
        #{retain4,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="alipay.manage.bean.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from alipay_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update alipay_user_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.payPasword != null" >
        payPasword = #{record.payPasword,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        userType = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.switchs != null" >
        switchs = #{record.switchs,jdbcType=INTEGER},
      </if>
      <if test="record.userNode != null" >
        userNode = #{record.userNode,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.agent != null" >
        agent = #{record.agent,jdbcType=VARCHAR},
      </if>
      <if test="record.isAgent != null" >
        isAgent = #{record.isAgent,jdbcType=CHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveOrderState != null" >
        receiveOrderState = #{record.receiveOrderState,jdbcType=INTEGER},
      </if>
      <if test="record.remitOrderState != null" >
        remitOrderState = #{record.remitOrderState,jdbcType=INTEGER},
      </if>
      <if test="record.QQ != null" >
        QQ = #{record.QQ,jdbcType=VARCHAR},
      </if>
      <if test="record.telegram != null" >
        telegram = #{record.telegram,jdbcType=VARCHAR},
      </if>
      <if test="record.skype != null" >
        skype = #{record.skype,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitTime != null" >
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.privateKey != null" >
        privateKey = #{record.privateKey,jdbcType=CHAR},
      </if>
      <if test="record.publicKey != null" >
        publicKey = #{record.publicKey,jdbcType=CHAR},
      </if>
      <if test="record.retain3 != null" >
        retain3 = #{record.retain3,jdbcType=CHAR},
      </if>
      <if test="record.retain4 != null" >
        retain4 = #{record.retain4,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update alipay_user_info
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=VARCHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      payPasword = #{record.payPasword,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      userType = #{record.userType,jdbcType=INTEGER},
      switchs = #{record.switchs,jdbcType=INTEGER},
      userNode = #{record.userNode,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      agent = #{record.agent,jdbcType=VARCHAR},
      isAgent = #{record.isAgent,jdbcType=CHAR},
      credit = #{record.credit,jdbcType=DECIMAL},
      receiveOrderState = #{record.receiveOrderState,jdbcType=INTEGER},
      remitOrderState = #{record.remitOrderState,jdbcType=INTEGER},
      QQ = #{record.QQ,jdbcType=VARCHAR},
      telegram = #{record.telegram,jdbcType=VARCHAR},
      skype = #{record.skype,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
    publicKey = #{record.publicKey,jdbcType=CHAR},
    publicKey = #{record.publicKey,jdbcType=CHAR},
      retain3 = #{record.retain3,jdbcType=CHAR},
      retain4 = #{record.retain4,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="alipay.manage.bean.UserInfo" >
    update alipay_user_info
    <set >
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPasword != null" >
        payPasword = #{payPasword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        userType = #{userType,jdbcType=INTEGER},
      </if>
      <if test="switchs != null" >
        switchs = #{switchs,jdbcType=INTEGER},
      </if>
      <if test="userNode != null" >
        userNode = #{userNode,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="agent != null" >
        agent = #{agent,jdbcType=VARCHAR},
      </if>
      <if test="isAgent != null" >
        isAgent = #{isAgent,jdbcType=CHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=DECIMAL},
      </if>
      <if test="receiveOrderState != null" >
        receiveOrderState = #{receiveOrderState,jdbcType=INTEGER},
      </if>
      <if test="remitOrderState != null" >
        remitOrderState = #{remitOrderState,jdbcType=INTEGER},
      </if>
      <if test="QQ != null" >
        QQ = #{QQ,jdbcType=VARCHAR},
      </if>
      <if test="telegram != null" >
        telegram = #{telegram,jdbcType=VARCHAR},
      </if>
      <if test="skype != null" >
        skype = #{skype,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="privateKey != null" >
        privateKey = #{privateKey,jdbcType=CHAR},
      </if>
      <if test="publicKey != null" >
        publicKey = #{publicKey,jdbcType=CHAR},
      </if>
      <if test="retain3 != null" >
        retain3 = #{retain3,jdbcType=CHAR},
      </if>
      <if test="retain4 != null" >
        retain4 = #{retain4,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and userId = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="alipay.manage.bean.UserInfo" >
    update alipay_user_info
    set userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      payPasword = #{payPasword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      userType = #{userType,jdbcType=INTEGER},
      switchs = #{switchs,jdbcType=INTEGER},
      userNode = #{userNode,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=VARCHAR},
      isAgent = #{isAgent,jdbcType=CHAR},
      credit = #{credit,jdbcType=DECIMAL},
      receiveOrderState = #{receiveOrderState,jdbcType=INTEGER},
      remitOrderState = #{remitOrderState,jdbcType=INTEGER},
      QQ = #{QQ,jdbcType=VARCHAR},
      telegram = #{telegram,jdbcType=VARCHAR},
      skype = #{skype,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      privateKey = #{privateKey,jdbcType=CHAR},
      publicKey = #{publicKey,jdbcType=CHAR},
      retain3 = #{retain3,jdbcType=CHAR},
      retain4 = #{retain4,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
      and userId = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>